%!PS-Adobe-3.1
%ADO_DSC_Encoding: MacOS Roman
%%Title: digix-cards-2.ai
%%Creator: Adobe Graphics Manager
%%For: Chris
%%CreationDate: 18/09/2017
%%BoundingBox: 2 -768 555 966
%%HiResBoundingBox: 2 -767.3159 554.8410 965.9528
%%CropBox: 10.5040 -758.8120 546.3371 957.4488
%%LanguageLevel: 3
%%DocumentNeededResources: (atend)
%%DocumentSuppliedResources: (atend)
%%DocumentNeededFeatures: (atend)
%%DocumentSuppliedFeatures: (atend)
%%DocumentData: Clean7Bit
%%PageOrder: Special
%%TargetDevice: (HP Color LaserJet MFP M277dw) (3010.000) 0
%%Pages: (atend)
%%DocumentProcessColors: (atend)
%%DocumentCustomColors: (atend)
%ADOBeginClientInjection: DocumentHeader "AI11"
%ADO_BuildNumber: Adobe Illustrator(R) 21.1.0 x326 R agm 4.7740 ct 5.3840
%ADOEndClientInjection: DocumentHeader "AI11"
%%EndComments
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.%%Version: 2.31 010 dict begin/Adobe_CoolType_Passthru currentdict def/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known defAdobe_CoolType_Core_Defined	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}ifuserdict/Adobe_CoolType_Core 70 dict dup begin put/Adobe_CoolType_Version 2.31 def/Level2?	systemdict/languagelevel known dup		{pop systemdict/languagelevel get 2 ge}	if defLevel2? not	{	/currentglobal false def	/setglobal/pop load def	/gcheck{pop false}bind def	/currentpacking false def	/setpacking/pop load def	/SharedFontDirectory 0 dict def	}ifcurrentpackingtrue setpackingcurrentglobal false setglobaluserdict/Adobe_CoolType_Data 2 copy known not	{2 copy 10 dict put}ifget	 begin	/@opStackCountByLevel 32 dict def	/@opStackLevel 0 def	/@dictStackCountByLevel 32 dict def	/@dictStackLevel 0 def	 endsetglobalcurrentglobal true setglobaluserdict/Adobe_CoolType_GVMFonts known not	{userdict/Adobe_CoolType_GVMFonts 10 dict put}ifsetglobalcurrentglobal false setglobaluserdict/Adobe_CoolType_LVMFonts known not	{userdict/Adobe_CoolType_LVMFonts 10 dict put}ifsetglobal/ct_VMDictPut	{	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse	3 1 roll put	}bind def/ct_VMDictUndef	{	dup Adobe_CoolType_GVMFonts exch known		{Adobe_CoolType_GVMFonts exch undef}		{			dup Adobe_CoolType_LVMFonts exch known			{Adobe_CoolType_LVMFonts exch undef}			{pop}			ifelse		}ifelse	}bind def/ct_str1 1 string def/ct_xshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_yshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			_ct_x _ct_y moveto			0 exch			rmoveto		}		ifelse		/_ct_i _ct_i 1 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/ct_xyshow{	/_ct_na exch def	/_ct_i 0 def	currentpoint	/_ct_y exch def	/_ct_x exch def	{		pop pop		ct_str1 exch 0 exch put		ct_str1 show		{_ct_na _ct_i get}stopped 		{pop pop}		{			{_ct_na _ct_i 1 add get}stopped 			{pop pop pop}			{				_ct_x _ct_y moveto				rmoveto			}			ifelse		}		ifelse		/_ct_i _ct_i 2 add def		currentpoint		/_ct_y exch def		/_ct_x exch def	}	exch	@cshow}bind def/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind defcurrentglobal true setglobal/ct_T3Defs{/BuildChar{	1 index/Encoding get exch get	1 index/BuildGlyph get exec}bind def/BuildGlyph{	exch begin	GlyphProcs exch get exec	end}bind def}bind defsetglobal/@_SaveStackLevels	{	Adobe_CoolType_Data		begin		/@vmState currentglobal def false setglobal		@opStackCountByLevel		@opStackLevel		2 copy known not			{			2 copy			3 dict dup/args			7 index			5 add array put			put get			}			{			get dup/args get dup length 3 index lt				{				dup length 5 add array exch				1 index exch 0 exch putinterval				1 index exch/args exch put				}				{pop}			ifelse			}		ifelse			begin			count 1 sub			1 index lt				{pop count}			if			dup/argCount exch def			dup 0 gt				{				args exch 0 exch getinterval 			astore pop				}				{pop}			ifelse			count			/restCount exch def			end		/@opStackLevel @opStackLevel 1 add def		countdictstack 1 sub		@dictStackCountByLevel exch @dictStackLevel exch put		/@dictStackLevel @dictStackLevel 1 add def		@vmState setglobal		end	}bind def/@_RestoreStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		@opStackCountByLevel @opStackLevel get			begin			count restCount sub dup 0 gt				{{pop}repeat}				{pop}			ifelse			args 0 argCount getinterval{}forall			end		/@dictStackLevel @dictStackLevel 1 sub def		@dictStackCountByLevel @dictStackLevel get		end	countdictstack exch sub dup 0 gt		{{end}repeat}		{pop}	ifelse	}bind def/@_PopStackLevels	{	Adobe_CoolType_Data		begin		/@opStackLevel @opStackLevel 1 sub def		/@dictStackLevel @dictStackLevel 1 sub def		end	}bind def/@Raise	{	exch cvx exch errordict exch get exec	stop	}bind def/@ReRaise	{	cvx $error/errorname get errordict exch get exec	stop	}bind def/@Stopped	{	0 @#Stopped	}bind def/@#Stopped	{	@_SaveStackLevels	stopped		{@_RestoreStackLevels true}		{@_PopStackLevels false}	ifelse	}bind def/@Arg	{	Adobe_CoolType_Data		begin		@opStackCountByLevel @opStackLevel 1 sub get		begin		args exch		argCount 1 sub exch sub get		end		end	}bind defcurrentglobal true setglobal/CTHasResourceForAllBug	Level2?		{		1 dict dup				/@shouldNotDisappearDictValue true def				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put				begin				count @_SaveStackLevels					{(*){pop stop}128 string/Category resourceforall}				stopped pop				@_RestoreStackLevels				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll					{						 /@shouldNotDisappearDictValue known								{										 {												end												currentdict 1 index eq													{pop exit}												if										 }									 loop								}						 if					}					{						 pop						 end					}				ifelse		}		{false}	ifelse	deftrue setglobal/CTHasResourceStatusBug	Level2?		{		mark			{/steveamerige/Category resourcestatus}		stopped			{cleartomark true}			{cleartomark currentglobal not}		ifelse		}		{false}	ifelse	defsetglobal/CTResourceStatus		{		mark 3 1 roll		/Category findresource			begin			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec				{cleartomark false}				{{3 2 roll pop true}{cleartomark false}ifelse}			ifelse			end		}bind def/CTWorkAroundBugs	{	Level2?		{		/cid_PreLoad/ProcSet resourcestatus			{			pop pop			currentglobal			mark				{				(*)					{					dup/CMap CTHasResourceStatusBug						{CTResourceStatus}						{resourcestatus}					ifelse						{						pop dup 0 eq exch 1 eq or							{							dup/CMap findresource gcheck setglobal							/CMap undefineresource							}							{							pop CTHasResourceForAllBug								{exit}								{stop}							ifelse							}						ifelse						}						{pop}					ifelse					}				128 string/CMap resourceforall				}			stopped				{cleartomark}			stopped pop			setglobal			}		if		}	if	}bind def/ds	{	Adobe_CoolType_Core		begin		CTWorkAroundBugs		/mo/moveto load def		/nf/newencodedfont load def		/msf{makefont setfont}bind def		/uf{dup undefinefont ct_VMDictUndef}bind def		/ur/undefineresource load def		/chp/charpath load def		/awsh/awidthshow load def		/wsh/widthshow load def		/ash/ashow load def		/@xshow/xshow load def		/@yshow/yshow load def		/@xyshow/xyshow load def		/@cshow/cshow load def		/sh/show load def		/rp/repeat load def		/.n/.notdef def		end		currentglobal false setglobal	 userdict/Adobe_CoolType_Data 2 copy known not		 {2 copy 10 dict put}		if		get		begin		/AddWidths? false def		/CC 0 def		/charcode 2 string def		/@opStackCountByLevel 32 dict def		/@opStackLevel 0 def		/@dictStackCountByLevel 32 dict def		/@dictStackLevel 0 def		/InVMFontsByCMap 10 dict def		/InVMDeepCopiedFonts 10 dict def		end		setglobal	}bind def/dt	{	currentdict Adobe_CoolType_Core eq		{end}	if	}bind def/ps	{	Adobe_CoolType_Core begin	Adobe_CoolType_GVMFonts begin	Adobe_CoolType_LVMFonts begin	SharedFontDirectory begin	}bind def/pt	{	end	end	end	end	}bind def/unload	{	systemdict/languagelevel known		{		systemdict/languagelevel get 2 ge			{			userdict/Adobe_CoolType_Core 2 copy known				{undef}				{pop pop}			ifelse			}		if		}	if	}bind def/ndf	{	1 index where		{pop pop pop}		{dup xcheck{bind}if def}	ifelse	}def/findfont systemdict	begin	userdict		begin		/globaldict where{/globaldict get begin}if			dup where pop exch get		/globaldict where{pop end}if		end	endAdobe_CoolType_Core_Defined	{/systemfindfont exch def}	{	/findfont 1 index def	/systemfindfont exch def	}ifelse/undefinefont	{pop}ndf/copyfont	{	currentglobal 3 1 roll	1 index gcheck setglobal	dup null eq{0}{dup length}ifelse	2 index length add 1 add dict		begin		exch			{			1 index/FID eq				{pop pop}				{def}			ifelse			}		forall		dup null eq			{pop}			{{def}forall}		ifelse		currentdict		end	exch setglobal	}bind def/copyarray	{	currentglobal exch	dup gcheck setglobal	dup length array copy	exch setglobal	}bind def/newencodedfont	{	currentglobal		{		SharedFontDirectory 3 index known			{SharedFontDirectory 3 index get/FontReferenced known}			{false}		ifelse		}		{		FontDirectory 3 index known			{FontDirectory 3 index get/FontReferenced known}			{			SharedFontDirectory 3 index known				{SharedFontDirectory 3 index get/FontReferenced known}				{false}			ifelse			}		ifelse		}	ifelse	dup		{		3 index findfont/FontReferenced get		2 index dup type/nametype eq			{findfont}		if ne			{pop false}		if		}	if	dup		{		1 index dup type/nametype eq			{findfont}		 if		dup/CharStrings known			{			/CharStrings get length			4 index findfont/CharStrings get length			ne				{				pop false				}			if 			}			{pop}			ifelse		}	if		{		pop		1 index findfont		/Encoding get exch		0 1 255			{2 copy get 3 index 3 1 roll put}		for		pop pop pop		}		{		currentglobal	 4 1 roll		dup type/nametype eq		 {findfont}	 if	 dup gcheck setglobal		dup dup maxlength 2 add dict			begin			exch				{				1 index/FID ne				2 index/Encoding ne and					{def}					{pop pop}				ifelse				}			forall			/FontReferenced exch def			/Encoding exch dup length array copy def			/FontName 1 index dup type/stringtype eq{cvn}if def dup			currentdict			end		definefont ct_VMDictPut		setglobal		}	ifelse	}bind def/SetSubstituteStrategy	{	$SubstituteFont		begin		dup type/dicttype ne			{0 dict}		if		currentdict/$Strategies known			{			exch $Strategies exch 			2 copy known				{				get				2 copy maxlength exch maxlength add dict					begin					{def}forall					{def}forall					currentdict					dup/$Init known						{dup/$Init get exec}					if					end				/$Strategy exch def				}				{pop pop pop}			ifelse			}			{pop pop}		ifelse		end	}bind def/scff	{	$SubstituteFont		begin		dup type/stringtype eq			{dup length exch}			{null}		ifelse		/$sname exch def		/$slen exch def		/$inVMIndex			$sname null eq				{				1 index $str cvs				dup length $slen sub $slen getinterval cvn				}				{$sname}			ifelse def		end		{findfont}	@Stopped		{		dup length 8 add string exch		1 index 0(BadFont:)putinterval		1 index exch 8 exch dup length string cvs putinterval cvn			{findfont}		@Stopped			{pop/Courier findfont}		if		}	if	$SubstituteFont		begin		/$sname null def		/$slen 0 def		/$inVMIndex null def		end	}bind def/isWidthsOnlyFont	{	dup/WidthsOnly known		{pop pop true}		{		dup/FDepVector known			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}			{			dup/FDArray known				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}				{pop}			ifelse			}		ifelse		}	ifelse	}bind def/ct_StyleDicts 4 dict dup begin		 /Adobe-Japan1 4 dict dup begin					 Level2?								{								/Serif								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMin-W3}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMin-W3/CIDFont resourcestatus								{pop pop/HeiseiMin-W3}								{/Ryumin-Light}								ifelse							}							{/Ryumin-Light}							ifelse								}								ifelse								def								/SansSerif								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiKakuGo-W5}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiKakuGo-W5/CIDFont resourcestatus								{pop pop/HeiseiKakuGo-W5}								{/GothicBBB-Medium}								ifelse							}							{/GothicBBB-Medium}							ifelse								}								ifelse								def								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus								{pop pop/HeiseiMaruGo-W4}								{							/CIDFont/Category resourcestatus							{								pop pop								/HeiseiMaruGo-W4/CIDFont resourcestatus								{pop pop/HeiseiMaruGo-W4}								{									/Jun101-Light-RKSJ-H/Font resourcestatus									{pop pop/Jun101-Light}									{SansSerif}									ifelse								}								ifelse							}							{								/Jun101-Light-RKSJ-H/Font resourcestatus								{pop pop/Jun101-Light}								{SansSerif}								ifelse							}							ifelse								}								ifelse								/RoundSansSerif exch def								/Default Serif def								}								{								/Serif/Ryumin-Light def								/SansSerif/GothicBBB-Medium def								{								(fonts/Jun101-Light-83pv-RKSJ-H)status								}stopped								{pop}{										 {pop pop pop pop/Jun101-Light}										 {SansSerif}										 ifelse										 /RoundSansSerif exch def								}ifelse								/Default Serif def								}					 ifelse		 end		 def		 /Adobe-Korea1 4 dict dup begin					/Serif/HYSMyeongJo-Medium def					/SansSerif/HYGoThic-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-GB1 4 dict dup begin					/Serif/STSong-Light def					/SansSerif/STHeiti-Regular def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 def		 /Adobe-CNS1 4 dict dup begin					/Serif/MKai-Medium def					/SansSerif/MHei-Medium def					/RoundSansSerif SansSerif def					/Default Serif def		 end		 defenddefLevel2?{currentglobal true setglobal}if/ct_BoldRomanWidthProc 	{	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth	0 0	}bind def/ct_Type0WidthProc 	{	 dup stringwidth 0 0 moveto 	 2 index true charpath pathbbox	 0 -1 	 7 index 2 div .88 	 setcachedevice2	 pop	0 0	}bind def/ct_Type0WMode1WidthProc 	{	 dup stringwidth 	 pop 2 div neg -0.88	2 copy	moveto 	0 -1	 5 -1 roll true charpath pathbbox	 setcachedevice	}bind def/cHexEncoding[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def/ct_BoldBaseFont 	 11 dict begin		/FontType 3 def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/Encoding cHexEncoding def 		/_setwidthProc/ct_BoldRomanWidthProc load def		/_bcstr1 1 string def		/BuildChar		{			exch begin				_basefont setfont				_bcstr1 dup 0 4 -1 roll put				dup 				_setwidthProc				3 copy 				moveto								show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end defsystemdict/composefont known{/ct_DefineIdentity-H{	/Identity-H/CMap resourcestatus	{		pop pop	}	{		/CIDInit/ProcSet findresource begin		 12 dict begin		 begincmap		 /CIDSystemInfo 3 dict dup begin			 /Registry(Adobe)def			 /Ordering(Identity)def			 /Supplement 0 def		 end def		 /CMapName/Identity-H def		 /CMapVersion 1.000 def		 /CMapType 1 def		 1 begincodespacerange		 <0000><FFFF>		 endcodespacerange		 1 begincidrange		 <0000><FFFF>0		 endcidrange		 endcmap		 CMapName currentdict/CMap defineresource pop		 end		 end	 }	 ifelse}def/ct_BoldBaseCIDFont 	 11 dict begin		/CIDFontType 1 def		/CIDFontName/ct_BoldBaseCIDFont def		/FontMatrix[1 0 0 1 0 0]def		/FontBBox[0 0 1 1]def		/_setwidthProc/ct_Type0WidthProc load def		/_bcstr2 2 string def		/BuildGlyph		{			exch begin		 				_basefont setfont				_bcstr2 1 2 index 256 mod put				_bcstr2 0 3 -1 roll 256 idiv put				_bcstr2 dup _setwidthProc		 				3 copy 				moveto				show				_basefonto setfont				moveto				show			end		}bind def		 currentdict	 end def}ifLevel2?{setglobal}if/ct_CopyFont{	{		1 index/FID ne 2 index/UniqueID ne and		{def}{pop pop}ifelse	}forall}bind def/ct_Type0CopyFont {	exch	dup length dict	begin	ct_CopyFont	[	exch	FDepVector 	{		 dup/FontType get 0 eq		{			1 index ct_Type0CopyFont 		/_ctType0 exch definefont		}		{		/_ctBaseFont exch		2 index exec		}		 ifelse 		 exch	}	forall 	pop	]					/FDepVector exch def	currentdict	end}bind def/ct_MakeBoldFont{	 dup/ct_SyntheticBold known	{		dup length 3 add dict begin 		ct_CopyFont 		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 		/ct_SyntheticBold true def		currentdict 		end 		definefont	}	{		dup dup length 3 add dict		begin			ct_CopyFont			/PaintType 2 def			/StrokeWidth .03 0 FontMatrix idtransform pop def			/dummybold currentdict		end		definefont		dup/FontType get dup 9 ge exch 11 le and 		{			ct_BoldBaseCIDFont			dup length 3 add dict copy begin			dup/CIDSystemInfo get/CIDSystemInfo exch def			ct_DefineIdentity-H			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefont exch def			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont			/_basefonto exch def			currentdict			end			/CIDFont defineresource		}		{			ct_BoldBaseFont			dup length 3 add dict copy begin			/_basefont exch def			/_basefonto exch def			currentdict			end			definefont		}		ifelse	}	ifelse}bind def/ct_MakeBold{	1 index 	1 index	findfont	currentglobal 5 1 roll	dup gcheck setglobal		dup		 /FontType get 0 eq			{				dup/WMode known{dup/WMode get 1 eq}{false}ifelse				version length 4 ge				and					{version 0 4 getinterval cvi 2015 ge}					{true}				ifelse 					{/ct_Type0WidthProc}					{/ct_Type0WMode1WidthProc}				ifelse				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put						{ct_MakeBoldFont}ct_Type0CopyFont definefont			}			{				dup/_fauxfont known not 1 index/SubstMaster known not and				{					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put					 ct_MakeBoldFont 				}				{				2 index 2 index eq					{exch pop	}					{						dup length dict begin						ct_CopyFont						currentdict						end						definefont 					}				ifelse				}			ifelse			}		 ifelse		 pop pop pop		 setglobal}bind def/?str1 256 string def/?set	{	$SubstituteFont		begin		/$substituteFound false def		/$fontname 1 index def		/$doSmartSub false def		end	dup	 findfont	$SubstituteFont		begin		$substituteFound			{false}			{			dup/FontName known				{				dup/FontName get $fontname eq				1 index/DistillerFauxFont known not and				/currentdistillerparams where					{pop false 2 index isWidthsOnlyFont not and}				if				}				{false}			ifelse			}		ifelse		exch pop		/$doSmartSub true def		end		{		5 1 roll pop pop pop pop		findfont		}		{		1 index		findfont		dup/FontType get 3 eq		{			6 1 roll pop pop pop pop pop false		}		{pop true}		ifelse		{		$SubstituteFont		begin		pop pop		/$styleArray 1 index def		/$regOrdering 2 index def		pop pop		0 1 $styleArray length 1 sub		{			$styleArray exch get			ct_StyleDicts $regOrdering			2 copy known			{				get				exch 2 copy known not				{pop/Default}				if				get				dup type/nametype eq				{				?str1 cvs length dup 1 add exch				?str1 exch(-)putinterval				exch dup length exch ?str1 exch 3 index exch putinterval				add ?str1 exch 0 exch getinterval cvn				}				{				pop pop/Unknown				}				ifelse			}			{				pop pop pop pop/Unknown			}			ifelse		}		for		end		findfont 		}if		}	ifelse	currentglobal false setglobal 3 1 roll	null copyfont definefont pop	setglobal	}bind defsetpackinguserdict/$SubstituteFont 25 dict put1 dict	begin	/SubstituteFont		dup $error exch 2 copy known			{get}			{pop pop{pop/Courier}bind}		ifelse def	/currentdistillerparams where dup		{		pop pop		currentdistillerparams/CannotEmbedFontPolicy 2 copy known			{get/Error eq}			{pop pop false}		ifelse		}	if not		{		countdictstack array dictstack 0 get			begin			userdict				begin				$SubstituteFont					begin					/$str 128 string def					/$fontpat 128 string def					/$slen 0 def					/$sname null def					/$match false def					/$fontname null def					/$substituteFound false def					/$inVMIndex null def					/$doSmartSub true def					/$depth 0 def					/$fontname null def					/$italicangle 26.5 def					/$dstack null def					/$Strategies 10 dict dup						begin						/$Type3Underprint							{							currentglobal exch false setglobal							11 dict								begin								/UseFont exch									$WMode 0 ne										{										dup length dict copy										dup/WMode $WMode put										/UseFont exch definefont										}									if def								/FontName $fontname dup type/stringtype eq{cvn}if def								/FontType 3 def								/FontMatrix[.001 0 0 .001 0 0]def								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def								/FontBBox[0 0 0 0]def								/CCInfo 7 dict dup									begin									/cc null def									/x 0 def									/y 0 def									end def								/BuildChar									{									exch										begin										CCInfo											begin											1 string dup 0 3 index put exch pop											/cc exch def											UseFont 1000 scalefont setfont											cc stringwidth/y exch def/x exch def											x y setcharwidth											$SubstituteFont/$Strategy get/$Underprint get exec											0 0 moveto cc show											x y moveto											end										end									}bind def								currentdict								end							exch setglobal							}bind def						/$GetaTint							2 dict dup								begin								/$BuildFont									{									dup/WMode known										{dup/WMode get}										{0}									ifelse									/$WMode exch def									$fontname exch									dup/FontName known										{										dup/FontName get										dup type/stringtype eq{cvn}if										}										{/unnamedfont}									ifelse									exch									Adobe_CoolType_Data/InVMDeepCopiedFonts get									1 index/FontName get known										{										pop										Adobe_CoolType_Data/InVMDeepCopiedFonts get										1 index get										null copyfont										}										{$deepcopyfont}									ifelse									exch 1 index exch/FontBasedOn exch put									dup/FontName $fontname dup type/stringtype eq{cvn}if put									definefont									Adobe_CoolType_Data/InVMDeepCopiedFonts get										begin										dup/FontBasedOn get 1 index def										end									}bind def								/$Underprint									{									gsave									x abs y abs gt										{/y 1000 def}										{/x -1000 def 500 120 translate}									ifelse									Level2?										{										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]										setcolorspace										}										{0 setgray}									ifelse									10 setlinewidth									x .8 mul									[7 3]										{										y mul 8 div 120 sub x 10 div exch moveto										0 y 4 div neg rlineto										dup 0 rlineto										0 y 4 div rlineto										closepath										gsave										Level2?											{.2 setcolor}											{.8 setgray}										ifelse										fill grestore										stroke										}									forall									pop									grestore									}bind def								end def						/$Oblique							1 dict dup								begin								/$BuildFont									{									currentglobal exch dup gcheck setglobal									null copyfont										begin										/FontBasedOn										currentdict/FontName known											{											FontName											dup type/stringtype eq{cvn}if											}											{/unnamedfont}										ifelse										def										/FontName $fontname dup type/stringtype eq{cvn}if def										/currentdistillerparams where											{pop}											{											/FontInfo currentdict/FontInfo known												{FontInfo null copyfont}												{2 dict}											ifelse											dup												begin												/ItalicAngle $italicangle def												/FontMatrix FontMatrix												[1 0 ItalicAngle dup sin exch cos div 1 0 0]												matrix concatmatrix readonly												end											4 2 roll def											def											}										ifelse										FontName currentdict										end									definefont									exch setglobal									}bind def								end def						/$None							1 dict dup								begin								/$BuildFont{}bind def								end def						end def					/$Oblique SetSubstituteStrategy					/$findfontByEnum						{						dup type/stringtype eq{cvn}if						dup/$fontname exch def						$sname null eq							{$str cvs dup length $slen sub $slen getinterval}							{pop $sname}						ifelse						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval						/$match false def						$SubstituteFont/$dstack countdictstack array dictstack put						mark							{							$fontpat 0 $slen 7 add getinterval								{/$match exch def exit}							$str filenameforall							}						stopped							{							cleardictstack							currentdict							true							$SubstituteFont/$dstack get								{								exch									{									1 index eq										{pop false}										{true}									ifelse									}									{begin false}								ifelse								}							forall							pop							}						if						cleartomark						/$slen 0 def						$match false ne							{$match(fonts/)anchorsearch pop pop cvn}							{/Courier}						ifelse						}bind def					/$ROS 1 dict dup						begin						/Adobe 4 dict dup							begin							/Japan1 [/Ryumin-Light/HeiseiMin-W3										 /GothicBBB-Medium/HeiseiKakuGo-W5										 /HeiseiMaruGo-W4/Jun101-Light]def							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def							/GB1	 [/STSong-Light/STHeiti-Regular]def							/CNS1	[/MKai-Medium/MHei-Medium]def							end def						end def					/$cmapname null def					/$deepcopyfont						{						dup/FontType get 0 eq							{							1 dict dup/FontName/copied put copyfont								begin								/FDepVector FDepVector copyarray								0 1 2 index length 1 sub									{									2 copy get $deepcopyfont									dup/FontName/copied put									/copied exch definefont									3 copy put pop pop									}								for								def								currentdict								end							}							{$Strategies/$Type3Underprint get exec}						ifelse						}bind def					/$buildfontname						{						dup/CIDFont findresource/CIDSystemInfo get							begin							Registry length Ordering length Supplement 8 string cvs							3 copy length 2 add add add string							dup 5 1 roll dup 0 Registry putinterval							dup 4 index(-)putinterval							dup 4 index 1 add Ordering putinterval							4 2 roll add 1 add 2 copy(-)putinterval							end						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch						anchorsearch							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}							{pop pop pop pop pop}						ifelse						length						$str 1 index(-)putinterval 1 add						$str 1 index $cmapname $fontpat cvs putinterval						$cmapname length add						$str exch 0 exch getinterval cvn						}bind def					/$findfontByROS						{						/$fontname exch def						$ROS Registry 2 copy known							{							get Ordering 2 copy known								{get}								{pop pop[]}							ifelse							}							{pop pop[]}						ifelse						false exch							{							dup/CIDFont resourcestatus								{								pop pop								save								1 index/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get}									{false}								ifelse								exch pop								exch restore									{pop}									{exch pop true exit}								ifelse								}								{pop}							ifelse							}						forall							{$str cvs $buildfontname}							{							false(*)								{								save exch								dup/CIDFont findresource								dup/WidthsOnly known									{dup/WidthsOnly get not}									{true}								ifelse								exch/CIDSystemInfo get								dup/Registry get Registry eq								exch/Ordering get Ordering eq and and									{exch restore exch pop true exit}									{pop restore}								ifelse								}							$str/CIDFont resourceforall								{$buildfontname}								{$fontname $findfontByEnum}							ifelse							}						ifelse						}bind def					end				end				currentdict/$error known currentdict/languagelevel known and dup					{pop $error/SubstituteFont known}				if				dup					{$error}					{Adobe_CoolType_Core}				ifelse				begin					{					/SubstituteFont					/CMap/Category resourcestatus						{						pop pop						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{								$sname null eq									{dup $str cvs dup length $slen sub $slen getinterval cvn}									{$sname}								ifelse								Adobe_CoolType_Data/InVMFontsByCMap get								1 index 2 copy known									{									get									false exch										{										pop										currentglobal											{											GlobalFontDirectory 1 index known												{exch pop true exit}												{pop}											ifelse											}											{											FontDirectory 1 index known												{exch pop true exit}												{												GlobalFontDirectory 1 index known													{exch pop true exit}													{pop}												ifelse												}											ifelse											}										ifelse										}									forall									}									{pop pop false}								ifelse									{									exch pop exch pop									}									{									dup/CMap resourcestatus										{										pop pop										dup/$cmapname exch def										/CMap findresource/CIDSystemInfo get{def}forall										$findfontByROS										}										{										128 string cvs										dup(-)search											{											3 1 roll search												{												3 1 roll pop													{dup cvi}												stopped													{pop pop pop pop pop $findfontByEnum}													{													4 2 roll pop pop													exch length													exch													2 index length													2 index													sub													exch 1 sub -1 0														{														$str cvs dup length														4 index														0														4 index														4 3 roll add														getinterval														exch 1 index exch 3 index exch														putinterval														dup/CMap resourcestatus															{															pop pop															4 1 roll pop pop pop															dup/$cmapname exch def															/CMap findresource/CIDSystemInfo get{def}forall															$findfontByROS															true exit															}															{pop}														ifelse														}													for													dup type/booleantype eq														{pop}														{pop pop pop $findfontByEnum}													ifelse													}												ifelse												}												{pop pop pop $findfontByEnum}											ifelse											}											{pop pop $findfontByEnum}										ifelse										}									ifelse									}								ifelse								}								{//SubstituteFont exec}							ifelse							/$slen 0 def							end						}						}						{						{						$SubstituteFont							begin							/$substituteFound true def							dup length $slen gt							$sname null ne or							$slen 0 gt and								{$findfontByEnum}								{//SubstituteFont exec}							ifelse							end						}						}					ifelse					bind readonly def					Adobe_CoolType_Core/scfindfont/systemfindfont load put					}					{					/scfindfont						{						$SubstituteFont							begin							dup systemfindfont							dup/FontName known								{dup/FontName get dup 3 index ne}								{/noname true}							ifelse							dup								{								/$origfontnamefound 2 index def								/$origfontname 4 index def/$substituteFound true def								}							if							exch pop								{								$slen 0 gt								$sname null ne								3 index length $slen gt or and									{									pop dup $findfontByEnum findfont									dup maxlength 1 add dict										begin											{1 index/FID eq{pop pop}{def}ifelse}										forall										currentdict										end									definefont									dup/FontName known{dup/FontName get}{null}ifelse									$origfontnamefound ne										{										$origfontname $str cvs print										( substitution revised, using )print										dup/FontName known											{dup/FontName get}{(unspecified font)}										ifelse										$str cvs print(.\n)print										}									if									}									{exch pop}								ifelse								}								{exch pop}							ifelse							end						}bind def					}				ifelse				end			end		Adobe_CoolType_Core_Defined not			{			Adobe_CoolType_Core/findfont				{				$SubstituteFont					begin					$depth 0 eq						{						/$fontname 1 index dup type/stringtype ne{$str cvs}if def						/$substituteFound false def						}					if					/$depth $depth 1 add def					end				scfindfont				$SubstituteFont					begin					/$depth $depth 1 sub def					$substituteFound $depth 0 eq and						{						$inVMIndex null ne							{dup $inVMIndex $AddInVMFont}						if						$doSmartSub							{							currentdict/$Strategy known								{$Strategy/$BuildFont get exec}							if							}						if						}					if					end				}bind put			}		if		}	if	end/$AddInVMFont	{	exch/FontName 2 copy known		{		get		1 dict dup begin exch 1 index gcheck def end exch		Adobe_CoolType_Data/InVMFontsByCMap get exch		$DictAdd		}		{pop pop pop}	ifelse	}bind def/$DictAdd	{	2 copy known not		{2 copy 4 index length dict put}	if	Level2? not		{		2 copy get dup maxlength exch length 4 index length add lt		2 copy get dup length 4 index length add exch maxlength 1 index lt			{			2 mul dict				begin				2 copy get{forall}def				2 copy currentdict put				end			}			{pop}		ifelse		}	if	get		begin			{def}		forall		end	}bind defendend%%EndResourcecurrentglobal true setglobal%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.%%Version: 1.23 0systemdict/languagelevel known dup	{currentglobal false setglobal}	{false}ifelseexchuserdict/Adobe_CoolType_Utility 2 copy known	{2 copy get dup maxlength 27 add dict copy}	{27 dict}ifelse putAdobe_CoolType_Utility	begin	/@eexecStartData		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def	/@recognizeCIDFont null def	/ct_Level2? exch def	/ct_Clone? 1183615869 internaldict dup			/CCRun known not			exch/eCCRun known not			ct_Level2? and or defct_Level2?	{globaldict begin currentglobal true setglobal}if	/ct_AddStdCIDMap		ct_Level2?			{{				mark				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put					{					((Hex)57 StartData					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec					}				stopped					{					 cleartomark					 Adobe_CoolType_Utility/@recognizeCIDFont get					 countdictstack dup array dictstack					 exch 1 sub -1 0						 {						 2 copy get 3 index eq								{1 index length exch sub 1 sub{end}repeat exit}								{pop}						 ifelse						 }					 for					 pop pop					 Adobe_CoolType_Utility/@eexecStartData get eexec					}					{cleartomark}				ifelse			}}			{{				Adobe_CoolType_Utility/@eexecStartData get eexec			}}		ifelse bind defuserdict/cid_extensions knowndup{cid_extensions/cid_UpdateDB known and}if	{	 cid_extensions	 begin	/cid_GetCIDSystemInfo		{		 1 index type/stringtype eq			{exch cvn exch}		 if		 cid_extensions			 begin			 dup load 2 index known				{				 2 copy				 cid_GetStatusInfo				 dup null ne					{					 1 index load					 3 index get					 dup null eq						 {pop pop cid_UpdateDB}						 {						 exch						 1 index/Created get eq							 {exch pop exch pop}							 {pop cid_UpdateDB}						 ifelse						 }					 ifelse					}					{pop cid_UpdateDB}				 ifelse				}				{cid_UpdateDB}			 ifelse			 end		}bind def	 end	}ifct_Level2?	{end setglobal}if	/ct_UseNativeCapability? systemdict/composefont known def	/ct_MakeOCF 35 dict def	/ct_Vars 25 dict def	/ct_GlyphDirProcs 6 dict def	/ct_BuildCharDict 15 dict dup		begin		/charcode 2 string def		/dst_string 1500 string def		/nullstring()def		/usewidths? true def		end def	ct_Level2?{setglobal}{pop}ifelse	ct_GlyphDirProcs		begin		/GetGlyphDirectory			{			systemdict/languagelevel known				{pop/CIDFont findresource/GlyphDirectory get}				{				1 index/CIDFont findresource/GlyphDirectory				get dup type/dicttype eq					{					dup dup maxlength exch length sub 2 index lt						{						dup length 2 index add dict copy 2 index						/CIDFont findresource/GlyphDirectory 2 index put						}					if					}				if				exch pop exch pop				}			ifelse			+			}def		/+			{			systemdict/languagelevel known				{				currentglobal false setglobal				3 dict begin					/vm exch def				}				{1 dict begin}			ifelse			/$ exch def			systemdict/languagelevel known				{				vm setglobal				/gvm currentglobal def				$ gcheck setglobal				}			if			?{$ begin}if			}def		/?{$ type/dicttype eq}def		/|{			userdict/Adobe_CoolType_Data known				{			Adobe_CoolType_Data/AddWidths? known				{				 currentdict Adobe_CoolType_Data					begin					 begin						AddWidths?								{								Adobe_CoolType_Data/CC 3 index put								?{def}{$ 3 1 roll put}ifelse								CC charcode exch 1 index 0 2 index 256 idiv put								1 index exch 1 exch 256 mod put								stringwidth 2 array astore								currentfont/Widths get exch CC exch put								}								{?{def}{$ 3 1 roll put}ifelse}							ifelse					end				end				}				{?{def}{$ 3 1 roll put}ifelse}	ifelse				}				{?{def}{$ 3 1 roll put}ifelse}			ifelse			}def		/!			{			?{end}if			systemdict/languagelevel known				{gvm setglobal}			if			end			}def		/:{string currentfile exch readstring pop}executeonly def		end	ct_MakeOCF		begin		/ct_cHexEncoding		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def		/ct_CID_STR_SIZE 8000 def		/ct_mkocfStr100 100 string def		/ct_defaultFontMtx[.001 0 0 .001 0 0]def		/ct_1000Mtx[1000 0 0 1000 0 0]def		/ct_raise{exch cvx exch errordict exch get exec stop}bind def		/ct_reraise			{cvx $error/errorname get(Error: )print dup(						 )cvs print					errordict exch get exec stop			}bind def		/ct_cvnsi			{			1 index add 1 sub 1 exch 0 4 1 roll				{				2 index exch get				exch 8 bitshift				add				}			for			exch pop			}bind def		/ct_GetInterval			{			Adobe_CoolType_Utility/ct_BuildCharDict get				begin				/dst_index 0 def				dup dst_string length gt					{dup string/dst_string exch def}				if				1 index ct_CID_STR_SIZE idiv				/arrayIndex exch def				2 index arrayIndex get				2 index				arrayIndex ct_CID_STR_SIZE mul				sub					{					dup 3 index add 2 index length le						{						2 index getinterval						dst_string dst_index 2 index putinterval						length dst_index add/dst_index exch def						exit						}						{						1 index length 1 index sub						dup 4 1 roll						getinterval						dst_string dst_index 2 index putinterval						pop dup dst_index add/dst_index exch def						sub						/arrayIndex arrayIndex 1 add def						2 index dup length arrayIndex gt							 {arrayIndex get}							 {							 pop							 exit							 }						ifelse						0						}					ifelse					}				loop				pop pop pop				dst_string 0 dst_index getinterval				end			}bind def		ct_Level2?			{			/ct_resourcestatus			currentglobal mark true setglobal				{/unknowninstancename/Category resourcestatus}			stopped				{cleartomark setglobal true}				{cleartomark currentglobal not exch setglobal}			ifelse				{					{					mark 3 1 roll/Category findresource						begin						ct_Vars/vm currentglobal put						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec							{cleartomark false}							{{3 2 roll pop true}{cleartomark false}ifelse}						ifelse						ct_Vars/vm get setglobal						end					}				}				{{resourcestatus}}			ifelse bind def			/CIDFont/Category ct_resourcestatus				{pop pop}				{				currentglobal true setglobal				/Generic/Category findresource				dup length dict copy				dup/InstanceType/dicttype put				/CIDFont exch/Category defineresource pop				setglobal				}			ifelse			ct_UseNativeCapability?				{				/CIDInit/ProcSet findresource begin				12 dict begin				begincmap				/CIDSystemInfo 3 dict dup begin				 /Registry(Adobe)def				 /Ordering(Identity)def				 /Supplement 0 def				end def				/CMapName/Identity-H def				/CMapVersion 1.000 def				/CMapType 1 def				1 begincodespacerange				<0000><FFFF>				endcodespacerange				1 begincidrange				<0000><FFFF>0				endcidrange				endcmap				CMapName currentdict/CMap defineresource pop				end				end				}			if			}			{			/ct_Category 2 dict begin			/CIDFont 10 dict def			/ProcSet	2 dict def			currentdict			end			def			/defineresource				{				ct_Category 1 index 2 copy known					{					get					dup dup maxlength exch length eq						{						dup length 10 add dict copy						ct_Category 2 index 2 index put						}					if					3 index 3 index put					pop exch pop					}					{pop pop/defineresource/undefined ct_raise}				ifelse				}bind def			/findresource				{				ct_Category 1 index 2 copy known					{					get					2 index 2 copy known						{get 3 1 roll pop pop}						{pop pop/findresource/undefinedresource ct_raise}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/resourcestatus				{				ct_Category 1 index 2 copy known					{					get					2 index known					exch pop exch pop						{						0 -1 true						}						{						false						}					ifelse					}					{pop pop/findresource/undefined ct_raise}				ifelse				}bind def			/ct_resourcestatus/resourcestatus load def			}		ifelse		/ct_CIDInit 2 dict			begin			/ct_cidfont_stream_init				{					{					dup(Binary)eq						{						pop						null						currentfile						ct_Level2?							{								{cid_BYTE_COUNT()/SubFileDecode filter}							stopped								{pop pop pop}							if							}						if						/readstring load						exit						}					if					dup(Hex)eq						{						pop						currentfile						ct_Level2?							{								{null exch/ASCIIHexDecode filter/readstring}							stopped								{pop exch pop(>)exch/readhexstring}							if							}							{(>)exch/readhexstring}						ifelse						load						exit						}					if					/StartData/typecheck ct_raise					}				loop				cid_BYTE_COUNT ct_CID_STR_SIZE le					{					2 copy cid_BYTE_COUNT string exch exec					pop					1 array dup					3 -1 roll					0 exch put					}					{					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi					dup array exch 2 sub 0 exch 1 exch						{						2 copy						5 index						ct_CID_STR_SIZE						string						6 index exec						pop						put						pop						}					for					2 index					cid_BYTE_COUNT ct_CID_STR_SIZE mod string					3 index exec					pop					1 index exch					1 index length 1 sub					exch put					}				ifelse				cid_CIDFONT exch/GlyphData exch put				2 index null eq					{					pop pop pop					}					{					pop/readstring load					1 string exch						{						3 copy exec						pop						dup length 0 eq							{							pop pop pop pop pop							true exit							}						if						4 index						eq							{							pop pop pop pop							false exit							}						if						}					loop					pop					}				ifelse				}bind def			/StartData				{				mark					{					currentdict					dup/FDArray get 0 get/FontMatrix get					0 get 0.001 eq						{						dup/CDevProc known not							{							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known								{get}								{								pop pop								{pop pop pop pop pop 0 -1000 7 index 2 div 880}								}							ifelse							def							}						if						}						{						/CDevProc							{							 pop pop pop pop pop							 0							 1 cid_temp/cid_CIDFONT get							/FDArray get 0 get							/FontMatrix get 0 get div							 7 index 2 div							 1 index 0.88 mul							}def						}					ifelse					/cid_temp 15 dict def					cid_temp						begin						/cid_CIDFONT exch def						3 copy pop						dup/cid_BYTE_COUNT exch def 0 gt							{							ct_cidfont_stream_init							FDArray								{								/Private get								dup/SubrMapOffset known									{									begin									/Subrs SubrCount array def									Subrs									SubrMapOffset									SubrCount									SDBytes									ct_Level2?										{										currentdict dup/SubrMapOffset undef										dup/SubrCount undef										/SDBytes undef										}									if									end									/cid_SD_BYTES exch def									/cid_SUBR_COUNT exch def									/cid_SUBR_MAP_OFFSET exch def									/cid_SUBRS exch def									cid_SUBR_COUNT 0 gt										{										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval										0 cid_SD_BYTES ct_cvnsi										0 1 cid_SUBR_COUNT 1 sub											{											exch 1 index											1 add											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add											GlyphData exch cid_SD_BYTES ct_GetInterval											0 cid_SD_BYTES ct_cvnsi											cid_SUBRS 4 2 roll											GlyphData exch											4 index											1 index											sub											ct_GetInterval											dup length string copy put											}										for										pop										}									if									}									{pop}								ifelse								}							forall							}						if						cleartomark pop pop						end					CIDFontName currentdict/CIDFont defineresource pop					end end					}				stopped					{cleartomark/StartData ct_reraise}				if				}bind def			currentdict			end def		/ct_saveCIDInit			{			/CIDInit/ProcSet ct_resourcestatus				{true}				{/CIDInitC/ProcSet ct_resourcestatus}			ifelse				{				pop pop				/CIDInit/ProcSet findresource				ct_UseNativeCapability?					{pop null}					{/CIDInit ct_CIDInit/ProcSet defineresource pop}				ifelse				}				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}			ifelse			ct_Vars exch/ct_oldCIDInit exch put			}bind def		/ct_restoreCIDInit			{			ct_Vars/ct_oldCIDInit get dup null ne				{/CIDInit exch/ProcSet defineresource pop}				{pop}			ifelse			}bind def		/ct_BuildCharSetUp			{			1 index				begin				CIDFont					begin					Adobe_CoolType_Utility/ct_BuildCharDict get						begin						/ct_dfCharCode exch def						/ct_dfDict exch def						CIDFirstByte ct_dfCharCode add						dup CIDCount ge							{pop 0}						if						/cid exch def							{							GlyphDirectory cid 2 copy known								{get}								{pop pop nullstring}							ifelse							dup length FDBytes sub 0 gt								{								dup								FDBytes 0 ne									{0 FDBytes ct_cvnsi}									{pop 0}								ifelse								/fdIndex exch def								dup length FDBytes sub FDBytes exch getinterval								/charstring exch def								exit								}								{								pop								cid 0 eq									{/charstring nullstring def exit}								if								/cid 0 def								}							ifelse							}						loop			}def		/ct_SetCacheDevice			{			0 0 moveto			dup stringwidth			3 -1 roll			true charpath			pathbbox			0 -1000			7 index 2 div 880			setcachedevice2			0 0 moveto			}def		/ct_CloneSetCacheProc			{			1 eq				{				stringwidth				pop -2 div -880				0 -1000 setcharwidth				moveto				}				{				usewidths?					{					currentfont/Widths get cid					2 copy known						{get exch pop aload pop}						{pop pop stringwidth}					ifelse					}					{stringwidth}				ifelse				setcharwidth				0 0 moveto				}			ifelse			}def		/ct_Type3ShowCharString			{			ct_FDDict fdIndex 2 copy known				{get}				{				currentglobal 3 1 roll				1 index gcheck setglobal				ct_Type1FontTemplate dup maxlength dict copy					begin					FDArray fdIndex get					dup/FontMatrix 2 copy known						{get}						{pop pop ct_defaultFontMtx}					ifelse					/FontMatrix exch dup length array copy def					/Private get					/Private exch def					/Widths rootfont/Widths get def					/CharStrings 1 dict dup/.notdef						<d841272cf18f54fc13>dup length string copy put def					currentdict					end				/ct_Type1Font exch definefont				dup 5 1 roll put				setglobal				}			ifelse			dup/CharStrings get 1 index/Encoding get			ct_dfCharCode get charstring put			rootfont/WMode 2 copy known				{get}				{pop pop 0}			ifelse			exch			1000 scalefont setfont			ct_str1 0 ct_dfCharCode put			ct_str1 exch ct_dfSetCacheProc			ct_SyntheticBold				{				currentpoint				ct_str1 show				newpath				moveto				ct_str1 true charpath				ct_StrokeWidth setlinewidth				stroke				}				{ct_str1 show}			ifelse			}def		/ct_Type4ShowCharString			{			ct_dfDict ct_dfCharCode charstring			FDArray fdIndex get			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not				{ct_1000Mtx matrix concatmatrix concat}				{pop}			ifelse			/Private get			Adobe_CoolType_Utility/ct_Level2? get not				{				ct_dfDict/Private				3 -1 roll					{put}				1183615869 internaldict/superexec get exec				}			if			1183615869 internaldict			Adobe_CoolType_Utility/ct_Level2? get				{1 index}				{3 index/Private get mark 6 1 roll}			ifelse			dup/RunInt known				{/RunInt get}				{pop/CCRun}			ifelse			get exec			Adobe_CoolType_Utility/ct_Level2? get not				{cleartomark}			if			}bind def		/ct_BuildCharIncremental			{				{				Adobe_CoolType_Utility/ct_MakeOCF get begin				ct_BuildCharSetUp				ct_ShowCharString				}			stopped				{stop}			if			end			end			end			end			}bind def		/BaseFontNameStr(BF00)def		/ct_Type1FontTemplate 14 dict			begin			/FontType 1 def			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/PaintType 0 def			currentdict			end def		/BaseFontTemplate 11 dict			begin			/FontMatrix [0.001 0 0 0.001 0 0]def			/FontBBox [-250 -250 1250 1250]def			/Encoding ct_cHexEncoding def			/BuildChar/ct_BuildCharIncremental load def			ct_Clone?				{				/FontType 3 def				/ct_ShowCharString/ct_Type3ShowCharString load def				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def				/ct_SyntheticBold false def				/ct_StrokeWidth 1 def				}				{				/FontType 4 def				/Private 1 dict dup/lenIV 4 put def				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def				/PaintType 0 def				/ct_ShowCharString/ct_Type4ShowCharString load def				}			ifelse			/ct_str1 1 string def			currentdict			end def		/BaseFontDictSize BaseFontTemplate length 5 add def		/ct_matrixeq			{			true 0 1 5				{				dup 4 index exch get exch 3 index exch get eq and				dup not					{exit}				if				}			for			exch pop exch pop			}bind def		/ct_makeocf			{			15 dict				begin				exch/WMode exch def				exch/FontName exch def				/FontType 0 def				/FMapType 2 def			dup/FontMatrix known				{dup/FontMatrix get/FontMatrix exch def}				{/FontMatrix matrix def}			ifelse				/bfCount 1 index/CIDCount get 256 idiv 1 add					dup 256 gt{pop 256}if def				/Encoding					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for					bfCount 1 255{2 copy bfCount put pop}for					def				/FDepVector bfCount dup 256 lt{1 add}if array def				BaseFontTemplate BaseFontDictSize dict copy					begin					/CIDFont exch def					CIDFont/FontBBox known						{CIDFont/FontBBox get/FontBBox exch def}					if					CIDFont/CDevProc known						{CIDFont/CDevProc get/CDevProc exch def}					if					currentdict					end				BaseFontNameStr 3(0)putinterval				0 1 bfCount dup 256 eq{1 sub}if					{					FDepVector exch					2 index BaseFontDictSize dict copy						begin						dup/CIDFirstByte exch 256 mul def						FontType 3 eq							{/ct_FDDict 2 dict def}						if						currentdict						end					1 index 16					BaseFontNameStr 2 2 getinterval cvrs pop					BaseFontNameStr exch definefont					put					}				for				ct_Clone?					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}				if				FontName				currentdict				end			definefont			ct_Clone?				{				gsave				dup 1000 scalefont setfont				ct_BuildCharDict					begin					/usewidths? false def					currentfont/Widths get						begin						exch/CIDFont get/GlyphDirectory get							{							pop							dup charcode exch 1 index 0 2 index 256 idiv put							1 index exch 1 exch 256 mod put							stringwidth 2 array astore def							}						forall						end					/usewidths? true def					end				grestore				}				{exch pop}			ifelse			}bind def		currentglobal true setglobal		/ct_ComposeFont			{			ct_UseNativeCapability?				{								2 index/CMap ct_resourcestatus					{pop pop exch pop}					{					/CIDInit/ProcSet findresource						begin						12 dict							begin							begincmap							/CMapName 3 index def							/CMapVersion 1.000 def							/CMapType 1 def							exch/WMode exch def							/CIDSystemInfo 3 dict dup								begin								/Registry(Adobe)def								/Ordering								CMapName ct_mkocfStr100 cvs								(Adobe-)search									{									pop pop									(-)search										{										dup length string copy										exch pop exch pop										}										{pop(Identity)}									ifelse									}									{pop (Identity)}								ifelse								def								/Supplement 0 def								end def							1 begincodespacerange							<0000><FFFF>							endcodespacerange							1 begincidrange							<0000><FFFF>0							endcidrange							endcmap							CMapName currentdict/CMap defineresource pop							end						end					}				ifelse				composefont				}				{				3 2 roll pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def			setglobal		/ct_MakeIdentity			{			ct_UseNativeCapability?				{				1 index/CMap ct_resourcestatus					{pop pop}					{					/CIDInit/ProcSet findresource begin					12 dict begin					begincmap					/CMapName 2 index def					/CMapVersion 1.000 def					/CMapType 1 def					/CIDSystemInfo 3 dict dup						begin						/Registry(Adobe)def						/Ordering						CMapName ct_mkocfStr100 cvs						(Adobe-)search							{							pop pop							(-)search								{dup length string copy exch pop exch pop}								{pop(Identity)}							ifelse							}							{pop(Identity)}						ifelse						def						/Supplement 0 def						end def					1 begincodespacerange					<0000><FFFF>					endcodespacerange					1 begincidrange					<0000><FFFF>0					endcidrange					endcmap					CMapName currentdict/CMap defineresource pop					end					end					}				ifelse				composefont				}				{				exch pop				0 get/CIDFont findresource				ct_makeocf				}			ifelse			}bind def		currentdict readonly pop		end	end%%EndResourcesetglobal%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.%%Version: 1.0 0userdict/ct_T42Dict 15 dict putct_T42Dict begin/Is2015?{ version cvi 2015 ge}bind def/AllocGlyphStorage{ Is2015? {		pop } {	{string}forall }ifelse}bind def/Type42DictBegin{25 dict begin /FontName exch def /CharStrings 256 dict begin	 /.notdef 0 def	 currentdict end def /Encoding exch def /PaintType 0 def /FontType 42 def /FontMatrix[1 0 0 1 0 0]def 4 array astore cvx/FontBBox exch def /sfnts}bind def/Type42DictEnd { currentdict dup/FontName get exch definefont endct_T42Dict exchdup/FontName get exch put}bind def/RD{string currentfile exch readstring pop}executeonly def/PrepFor2015{Is2015?{		 	/GlyphDirectory 	 16	 dict def	 sfnts 0 get	 dup	 2 index	(glyx)	 putinterval	 2 index 	(locx)	 putinterval	 pop	 pop}{	 pop	 pop}ifelse			}bind def/AddT42Char{Is2015?{	/GlyphDirectory get 	begin	def	end	pop	pop}{	/sfnts get	4 index	get	3 index 2 index	putinterval	pop	pop	pop	pop}ifelse}bind def/T0AddT42Mtx2{/CIDFont findresource/Metrics2 get begin def end}bind defend%%EndResourcecurrentglobal true setglobal%%BeginFile: MMFauxFont.prc%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. %%All Rights Reserved.userdict /ct_EuroDict 10 dict putct_EuroDict begin/ct_CopyFont {    { 1 index /FID ne {def} {pop pop} ifelse} forall} def/ct_GetGlyphOutline{   gsave   initmatrix newpath   exch findfont dup    length 1 add dict    begin 		ct_CopyFont 		/Encoding Encoding dup length array copy 		dup		4 -1 roll		0 exch put   		def		currentdict   end   /ct_EuroFont exch definefont   1000 scalefont setfont   0 0 moveto   [       <00> stringwidth        <00> false charpath       pathbbox       [       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall   grestore   counttomark 8 add}def/ct_MakeGlyphProc{   ] cvx   /ct_PSBuildGlyph cvx   ] cvx} def/ct_PSBuildGlyph {  	gsave 	8 -1 roll pop 	7 1 roll         6 -2 roll ct_FontMatrix transform 6 2 roll        4 -2 roll ct_FontMatrix transform 4 2 roll        ct_FontMatrix transform 	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  	dup  9 1 roll 	{  		currentdict /StrokeWidth 2 copy known  		{   			get 2 div   			0 ct_FontMatrix dtransform pop			5 1 roll  			4 -1 roll 4 index sub   			4 1 roll   			3 -1 roll 4 index sub  			3 1 roll   			exch 4 index add exch  			4 index add  			5 -1 roll pop  		}  		{	 			pop pop 		}  		ifelse  	}           if  	setcachedevice          ct_FontMatrix concat        ct_PSPathOps begin 		exec 	end 	{  		currentdict /StrokeWidth 2 copy known  			{ get }  			{ pop pop 0 }    	    ifelse  		setlinewidth stroke  	}  	{   	    fill  	}  	ifelse      grestore} def /ct_PSPathOps 4 dict dup begin 	/m {moveto} def 	/l {lineto} def 	/c {curveto} def 	/cp {closepath} def end def /ct_matrix1000 [1000 0 0 1000 0 0] def/ct_AddGlyphProc  {   2 index findfont dup length 4 add dict    begin 	ct_CopyFont 	/CharStrings CharStrings dup length 1 add dict copy      begin         3 1 roll def           currentdict       end       def      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def      /ct_PSBuildGlyph /ct_PSBuildGlyph load def      /ct_PSPathOps /ct_PSPathOps load def      currentdict   end   definefont pop}defsystemdict /languagelevel known{	/ct_AddGlyphToPrinterFont {		2 copy		ct_GetGlyphOutline 3 add -1 roll restore 		ct_MakeGlyphProc 		ct_AddGlyphProc	} def}{	/ct_AddGlyphToPrinterFont {	    pop pop restore		Adobe_CTFauxDict /$$$FONTNAME get		/Euro		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get		ct_EuroDict exch get		ct_AddGlyphProc	} def} ifelse/AdobeSansMM { 556 0 24 -19 541 703 	{ 	541 628 m 	510 669 442 703 354 703 c 	201 703 117 607 101 444 c 	50 444 l 	25 372 l 	97 372 l 	97 301 l 	49 301 l 	24 229 l 	103 229 l 	124 67 209 -19 350 -19 c 	435 -19 501 25 509 32 c 	509 131 l 	492 105 417 60 343 60 c 	267 60 204 127 197 229 c 	406 229 l 	430 301 l 	191 301 l 	191 372 l 	455 372 l 	479 444 l 	194 444 l 	201 531 245 624 348 624 c 	433 624 484 583 509 534 c 	cp 	556 0 m 	}ct_PSBuildGlyph} def/AdobeSerifMM { 500 0 10 -12 484 692 	{ 	347 298 m 	171 298 l 	170 310 170 322 170 335 c 	170 362 l 	362 362 l 	374 403 l 	172 403 l 	184 580 244 642 308 642 c 	380 642 434 574 457 457 c 	481 462 l 	474 691 l 	449 691 l 	433 670 429 657 410 657 c 	394 657 360 692 299 692 c 	204 692 94 604 73 403 c 	22 403 l 	10 362 l 	70 362 l 	69 352 69 341 69 330 c 	69 319 69 308 70 298 c 	22 298 l 	10 257 l 	73 257 l 	97 57 216 -12 295 -12 c 	364 -12 427 25 484 123 c 	458 142 l 	425 101 384 37 316 37 c 	256 37 189 84 173 257 c 	335 257 l 	cp 	500 0 m 	} ct_PSBuildGlyph } def end		%%EndFilesetglobalAdobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
3 3010 Adobe_AGM_Core/ds gx
false Adobe_AGM_Core/begin_feature gx false {
%%BeginFeature: *CustomPageSize True
552.841064 977.952759 0.000000 0.000000 1 

%%EndFeature
} Adobe_AGM_Core/end_feature gx
Adobe_AGM_Core/driver_media_override gx
Adobe_CoolType_Core/ds get execAdobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 1 1
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (1)]
[/TrimBox [10.503936767578 0 546.33703613281 957.44879150391]]
[/BleedBox [2 0 552.84106445312 965.95275878906]]
]xpdfm
Adobe_AGM_Core/ps gx
false Adobe_AGM_Core/begin_feature gx false {
%%BeginFeature: *CustomPageSize True
552.841064 977.952759 0.000000 0.000000 1 

%%EndFeature
} Adobe_AGM_Core/end_feature gx
Adobe_AGM_Core/driver_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -977.953 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
2 12 mo
2 1745.27 li
554.841 1745.27 li
554.841 12 li
cp
clp
268.49 193.422 mo
10.5416 193.422 li
10.5416 20.504 li
268.49 20.504 li
268.49 193.422 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.976013 .869596 .440589 .485817 cmyk
f
gsave
105.716 91.3755 mo
173.316 91.3755 li
173.316 122.55 li
105.716 122.55 li
cp
clp
105.716 100.852 mo
128.306 100.852 li
128.306 91.3755 li
105.716 91.3755 li
cp
.012 .144 .998 0 cmyk
f
130.984 91.3754 mo
130.984 103.846 li
105.716 103.846 li
105.716 122.55 li
138.203 122.55 li
138.203 91.3754 li
cp
112.935 110.408 mo
130.984 110.408 li
130.984 115.987 li
112.935 115.987 li
cp
0 0 0 0 cmyk
f
140.828 91.3754 mo
140.828 122.55 li
173.316 122.55 li
173.316 103.846 li
153.627 103.846 li
153.627 110.408 li
166.096 110.408 li
166.096 115.987 li
148.048 115.987 li
148.048 97.9388 li
173.316 97.9388 li
173.316 91.3754 li
cp
f
grestore
546.312 193.422 mo
288.365 193.422 li
288.365 20.504 li
546.312 20.504 li
546.312 193.422 li
cp
0 0 0 1 cmyk
f
gsave
383.538 91.3755 mo
451.138 91.3755 li
451.138 122.55 li
383.538 122.55 li
cp
clp
383.538 100.852 mo
406.128 100.852 li
406.128 91.3755 li
383.538 91.3755 li
cp
0 0 0 0 cmyk
f
408.806 91.3754 mo
408.806 103.846 li
383.538 103.846 li
383.538 122.55 li
416.026 122.55 li
416.026 91.3754 li
cp
390.758 110.408 mo
408.806 110.408 li
408.806 115.987 li
390.758 115.987 li
cp
f
418.651 91.3754 mo
418.651 122.55 li
451.138 122.55 li
451.138 103.846 li
431.449 103.846 li
431.449 110.408 li
443.919 110.408 li
443.919 115.987 li
425.87 115.987 li
425.87 97.9388 li
451.138 97.9388 li
451.138 91.3754 li
cp
f
grestore
268.364 386.34 mo
10.5416 386.34 li
10.5416 213.422 li
268.364 213.422 li
268.364 386.34 li
cp
0 0 0 0 cmyk
f
.976013 .869596 .440589 .485817 cmyk
%ADOBeginSubsetFont: Roboto-Light Initial
ct_T42Dict begin
-0.734 -0.27 1.137 1.055
 256 array 0 1 255 {1 index exch /.notdef put} for  /Roboto-Light
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c000000586670676d0000000000000184000001bc
676c796600000000000027b00001e4566865616400000000000003400000
003668686561000000000000037800000024686d7478000000000000039c
000014386c6f636100000000000017d400000a1e6d617870000000000000
21f4000000206e616d650000000000002214000004607072657000000000
000026740000013a676469720000000000000000000000000003046f012c
00050000059a05330000011f059a0533000003d100660200000002000000
000000000000e00002ff5000205b0000002000000000474f4f4700400000
fffd0600fe000066079a02002000019f00000000043a05b0002000200003
002a0068005a0060005600a0004e006e008c00c8004e0060004600c40000
0014fe600014029b0010ff39000dfe9700120321000b043a0014048d0010
05b000140618001506c00010025b00120704000506d9000600000000b000
2c4bb0095058b101018e59b801ff85b0441db109035f5e2db0012c202045
6944b001602db0022cb0012a212db0032c2046b003254652582359208a20
8a49648a204620686164b004254620686164525823658a592f20b0005358
6920b000545821b040591b6920b000545821b0406559593a2db0042c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db0052c4b20b0032650585158b080441bb04044591b21212045b0c05058
b0c0441b2159592db0062c2020456944b001602020457d691844b001602d
b0072cb0062a2db0082c4b20b003265358b0401bb000598a8a20b0032653
582321b0808a8a1b8a235920b0032653582321b0c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b003265358b0032545b8018050582321b8018023211bb00325452321
2321591b2159442db0092c4b535845441b2121592db00a2cb02a452db00b
2cb02b452db00c2cb1270188208a5358b94000040063b80800885458b900
2a03e870591bb0235358b02088b810005458b9002a03e8705959592db00d
2cb04088b820005a58b12b00441bb9002b03e844592d0001000000022312
3852f56f5f0f3cf50019080000000000c4f0112e00000000d50152e3fa20
fdd5091a087300000009000200000000000000010000076cfe0c00000937
fa20fe45091a00010000000000000000000000000000050e038c00640000
00000000000001f2000001f2000001ce0099024c008f04a70055046f0073
05e9006d04ec006c015c0077028d008c029b00210365001d0484004b0188
003c024a003101e90091032d001e046f0078046f00b2046f0069046f0062
046f0043046f00a8046f0082046f004d046f006a046f006501ae007f018f
003c0417004d046d00950425007c03a20054074e007104ff001e04e700b8
05320083053d00b8048d00b8048000b80578009105a900b8022100d30467
0047050c00b8043700b806ec00b805ae00b8056a007d04ed00b8056a0079
051400b504bd005804c70034054200a204ef001f072c003d04e5003704ca
001804c9005a01eb00a30327003001eb00000354004d0374000102490067
04490064046f009b041f005e0472006c0422005a02a6003f0470006c0464
009c01cb009501d3ff9803eb009c01cb00aa071700960465009c047b005a
046f009b0476006c02b1009c040d0065029200170465009803d900260608
003f03e4003003cd002003e4005702a4004401c400b202a40009057a0091
01c4008c045b00770492005d05c9006d0420001801bc009f04d700660371
00890665006b038a009d03a5007b045d007c066a0066036a00890306008f
043d005402e4004c02e400470240007c047400a203cd005301f700a301f2
006202e4007e039a008703a0007305cc0073060c00640636007603ac0058
074900110430005d056a007d04be00b704b0009706c4005504a70095048c
004804740059047e009f0494006c0583001801c800a8045700a2043a0015
02110019059a00b50474009d0779006c0764005e01d100a70599007c029e
ffc505940084047a0059057200a204b0009801d4ff8c041f005c037000a0
0344008f036b00890361008a01cb0094027b00750200003c037b006a0305
0078026e009d0000fce00000fd990000fcaa0000fd6d0000fc2f0000fd60
020700c703d5009901f700a3046a00b90593002c05620076052f00440479
007405a900bd0479003f05b80058058e007b053d00780481006f04bd00b1
03ea002c0474005b0459006b03ef00490474009e0495008a026600b60467
003103ed007704c300330474009e0447006f0472005b0417004d0447009b
057c0071057800790698008904970085044affd1064a003805f400360548
00850871003308a200ba066f003605a400b9050500b105ca0047070a0017
04c2005a05ae00bc059e00280505003705f1004c05b500b3055300ac0768
00b6078a00b60631fff606ae00ba04e600b20548008d074800d104e4005c
04670061047900a9035f00a30496003406230018040d0062047f00a40425
00a30481002c05d900a9047f00a4047f00a403cd002805cc006f048e00a4
0442006e065900a4066b009e050a0023060200a9044800a90447006f0681
00a90458005d0464ffe60447006b06d6002406e400a40475fff0047f00a4
071a00aa0696009d0447ffe3072600d205f300a604cd0025043800190706
00e4060600c90685009d05a7009e08a500d1076a00a8041e007403df005e
056200760486005904ed001c03f1002c0562007604740059071000aa0663
008d071a00aa0696009d05100082042f006f04e100880000fca30000fc7f
0000fd740000fda70000fa200000fa2805b200bc049300a40447ffe3050e
00b40484009b046200b10380009e049e00b903fb009e0752001706350018
055900bd047a00a304e800b3045200a2067600510547003305a800b80489
00a4080f00b505ca009e082800b106d0009e05f2007b04c0007604f70037
03f3003006f20023053a001c055100ac044c006e054e00ac04660097054e
00a6060a002404b8fff604e800b3043800a205a500280494002c05a300ba
0474009e05b100b8049200a406ef00b805ee00a90599007c049b0071049b
0071048d0019038700110503003703fe00300495004b063f004c06df006f
065100330526002e044400620402007007bc00420670003307cb00bd069c
009604f100880418007505a80021051b00430548009005a700280496002c
02b6005f0414000008290000041400000829000002b90000020a0000015c
0000047f00000230000001a200000100000000d100000000000002420031
024200310536009f062c007d03a0002d016c0062016c003e01610029016c
005902640063026900440251002904670043048200540296009203a100a6
052100a6015a005b07ce005b0261006c026100610396003e02e4003b035e
007b0492006006270023068b00b9085e00b506130023061a009b046f0053
057d002303e80033041b002c0541006a0522002305e2007603b9005b0828
00b104f0006b05120095061f006306dc008006c40078066a006b0491006a
054200ae049e003f049000a5045e0040087400770207ff8904820065046d
00950417004504260077040a0037020700a7024c007501e7007904c3003f
044c0030045b003f069f003f069f003f04be003f067c006500000000082e
00580835005c02e3004c02e3007e02e30057040000550400005c04000043
0400007b040000910400003c040000550400005a0400009f040000690420
004b042300150439002a0627003204430018048700880421002b0418004a
0462009804a900650440009a04a9006904e0009a05f5009a03a2009a0458
009a03cb003b01da00b104dc009a04b2007803dc009a0418004a04060029
03a2001503b1009a0443001804a90069044300180393004704c4009a03e0
003b055f006904f0006904e70080055300220478006d073600250745009a
0559002b04c4009a0441009a05080034061900250435004e04e8009a0441
00a004af002504140020050d009a044c00430617009a0660009a05080004
0590009a0433009a0474005f0648009a046e0050041c000f065700250464
00a004ad00a0051d001105b90069045100150484002a06380022044c0043
044c009a0592000b04a9005e0435004e04a900690406002903be003507dc
009a0499002802e3004702e3003b02e3006c02e3006002e3003e02e3004f
02e3004b0360007d02a400b003e8009a0437003c04ab006f054400ba051c
00bd03ee009f052800bd03d6009f0480009a0478006d043c009a04530017
01c60097039f008a0000fcb7035e005c0375ff910409006d0379006d03b1
009a0382008a037d008a02e4005702e4003b02e4006c02e4006002e4003e
02e4004f02e4004b055c008005a10080057800bd05b5008005b6008003d5
00a004820083045e000f04cc003e046b0065042e004a039f00950194008e
06af0069049c007001d1ff8d0470003c0470006e0470001c047000730470
006c047000390470007c04700063047000690470011001e1ff8c01d5ff8c
01c800a801c8fffa01c800a8043c009a04f8007d03fa0038046e009b042c
00600479005f0477005f0482005a0476009b047d005f0422005a0470006c
0382007004da007803a200040625000e03dc009a04a9006904dc003f04e0
009a01f20000024a0031055b0021055b00210482000004c700340292000e
04ff001e04ff001e04ff001e04ff001e04ff001e04ff001e04ff001e0532
0083048d00b8048d00b8048d00b8048d00b80221000d022100ca0221fffe
0221ffe705ae00b8056a007d056a007d056a007d056a007d056a007d0542
00a2054200a2054200a2054200a204ca0018044900640449006404490064
04490064044900640449006404490064041f005e0422005a0422005a0422
005a0422005a01c8ffe201c8009f01c8ffd301c8ffbc0465009c047b005a
047b005a047b005a047b005a047b005a0465009804650098046500980465
009803cd002003cd002004ff001e0449006404ff001e0449006404ff001e
0449006405320083041f005e05320083041f005e05320083041f005e0532
0083041f005e053d00b80508006c048d00b80422005a048d00b80422005a
048d00b80422005a048d00b80422005a048d00b80422005a057800910470
006c057800910470006c057800910470006c057800910470006c05a900b8
0464009c0221ffc601c8ff9b0221ffe001c8ffb50221fff101c8ffc60221
002701cbfffc022100bf068800d3039e00950467004701d4ff8c050c00b8
03eb009c043700b001cb00a0043700b801cb0067043700b8026100aa0437
00b802a700aa05ae00b80465009c05ae00b80465009c05ae00b80465009c
0465ffd1056a007d047b005a056a007d047b005a056a007d047b005a0514
00b502b1009c051400b502b1005e051400b502b1008304bd0058040d0065
04bd0058040d006504bd0058040d006504bd0058040d006504bd0058040d
006504c700340292001704c700340292001704c7003402ba0017054200a2
04650098054200a204650098054200a204650098054200a2046500980542
00a204650098054200a204650098072c003d0608003f04ca001803cd0020
04ca001804c9005a03e4005704c9005a03e4005704c9005a03e400570749
001106c40055056a007d047400590480ffd40480ffd40421002b04530017
0453001704530017045300170453001704530017045300170478006d03e8
009a03e8009a03e8009a03e8009a01daffe901da00a601daffda01daffc3
04e0009a04a9006904a9006904a9006904a9006904a90069048700880487
00880487008804870088042300150453001704530017045300170478006d
0478006d0478006d0478006d0480009a03e8009a03e8009a03e8009a03e8
009a03e8009a04b2007804b2007804b2007804b2007804dc009a01daffa2
01daffbc01daffcd01da000b01da009b03cb003b0458009a03a2009103a2
009a03a2009a03a2009a04e0009a04e0009a04e0009a04a9006904a90069
04a900690462009804620098046200980418004a0418004a0418004a0418
004a0421002b0421002b0421002b04870088048700880487008804870088
04870088048700880627003204230015042300150420004b0420004b0420
004b04ff001e048dff3e05a9ff4b0221ff5b057e0000052eff330551000c
0266ffa304ff001e04e700b8048d00b804c9005a05a900b8022100d3050c
00b806ec00b805ae00b8056a007d04ed00b804c7003404ca001804e50037
0221ffe704ca00180481006f0459006b0474009e026600b60447009b0457
00a2047b005a047400a203d9002603e400300266ffcb0447009b047b005a
0447009b06980089048d00b8046a00b904bd0058022100d30221ffe70467
0047051c00bd050c00b80505003704ff001e04e700b8046a00b9048d00b8
05ae00bc06ec00b805a900b8056a007d05a900bd04ed00b80532008304c7
003404e50037044900640422005a047f00a4047b005a046f009b041f005e
03cd002003e400300422005a035f00a3040d006501cb009501c8ffbc01d3
ff98042500a303cd0020072c003d0608003f072c003d0608003f072c003d
0608003f04ca001803cd0020015c0077024c008f039c009901d4ff8c016c
003e06ec00b80717009604ff001e04490064048d00b805ae00bc0422005a
047f00a4058e007b0578007904ed001c03f100090848005a0937007d04c2
005a040d006205320083041f005e04ca001803ea002c022100d3070a0017
06230018022100d304ff001e0449006404ff001e044900640749001106c4
0055048d00b80422005a0599007c041f005c041f005c070a001706230018
04c2005a040d006205ae00bc047f00a405ae00bc047f00a4056a007d047b
005a056200760486005905620076048600590548008d0447006f05050037
03cd00200505003703cd00200505003703cd0020055300ac0442006e06ae
00ba060200a90472006c04ff001e0449006404ff001e0449006404ff001e
0449006404ff001e0449001c04ff001e0449006404ff001e0449006404ff
001e0449006404ff001e0449006404ff001e0449006404ff001e04490064
04ff001e0449006404ff001e04490064048d00b80422005a048d00b80422
005a048d00b80422005a048d00b80422005a048d00440422000f048d00b8
0422005a048d00b80422005a048d00b80422005a022100c401c800990221
00b901cb008d056a007d047b005a056a007d047b005a056a007d047b005a
056a007d047b0014056a007d047b005a056a007d047b005a056a007d047b
005a05940084047a005905940084047a005905940084047a005905940084
047a005905940084047a0059054200a204650098054200a2046500980572
00a204b00098057200a204b00098057200a204b00098057200a204b00098
057200a204b0009804ca001803cd002004ca001803cd002004ca001803cd
00200490006c04c7003403cd0028055300ac0442006e046a00b9035f00a3
060a002404b8fff60464009c04e6fffd04e6fffd046a002b035f00000530
fff30402fff504ca001803ea002c04e5003703e400300459006b04800019
062c007d046f0069046f0062046f0043046f00a8048300960497007e0483
00650497008c057800910470006c05ae00b80465009c04ff001e04490064
048d00900422005a0221ff3601c8ff0b056a007d047b005a0514008402b1
ffbf054200a20465006204aefeec04e700b8046f009b053d00b80472006c
053d00b80472006c05a900b80464009c050c00b803eb009c050c00b803eb
009c043700b801cb008f06ec00b80717009605ae00b80465009c056a007d
04ed00b8046f009b051400b502b1008604bd0058040d006504c700340292
0017054200a204ef001f03d9002604ef001f03d90026072c003d0608003f
04c9005a03e4005705b0fe83045300170424ff8a0518ff9f0216ffab04b3
fffc045fff3c04f1002704530017043c009a03e8009a0420004b04dc009a
01da00b10458009a05f5009a04e0009a04a900690440009a0421002b0423
00150439002a01daffc30423001503e8009a03b1009a0418004a01da00b1
01daffc303cb003b0458009a0414002004530017043c009a03b1009a03e8
009a04e8009a05f5009a04dc009a04a9006904c4009a0440009a0478006d
0421002b0439002a0435004e04dc009a0478006d042300150592000b04e8
009a04140020055f006905a500b10625000e04a900690418004a06270032
06270032062700320423001504ff001e04490064048d00b80422005a0453
001703e8009a01c8008d000000600060006000600060009a00bc013d01ba
024402d502eb03190347037a03a003bb03d203f3040a0461048f04e1055f
05a30607067506a20729079607a207ae07e00808083508920940098709f4
0a460a940ad80b100b790bb90bd40c080c490c6d0cbb0cf70d520d9e0e02
0e5e0ecd0ef80f370f660fbc10051035106d109210a910ce10f71112112f
11b11212126612c4132a138013fe1446147f14cb1510152b159d15ea163d
16a51709174817b7180b1852188218d719201964199c19dc19f31a321a76
1ab01b0c1b7a1bdf1c411c601d071d381dde1e571e631e811f321f4c1f8f
1fcf2020209220af210421302155219d21c82212221e22382252226c22d2
2340237d23fa244f24b6257825ef264026bb271e279c27ff281a286728b2
28f0294829a62a2f2ad62b082b712bdb2c4d2cb52d0b2d6b2d9d2e042e30
2e582e602e8e2ead2eea2f202f622f972fdb2ffa30193022305e309530b4
30d13116311e3145317531fe322b328032af32ec336633c1342c34a6351d
355035c93648369c36e63768379737ef386338b73911397139cb3a103a55
3ac33b223b8d3c083c633cd93d3e3db63e2f3eab3f003f3d3f963ff14060
40dc4115416141a6421e4258429d42db4324437e43e2442f44a64531458d
4603467f46a646fd477147eb4824487748bf49074954498349af4a3d4a73
4ab74af54b3a4b934bf64c424cb84d404d9d4e184e8e4f054f774fde501a
507f50e5515151d8526452b052ff536a53da545054c1554e55d856715712
579c5818585e58a45913597d5a395af95b7f5c065c5d5cb05ce55cff5d33
5d495d5f5e335e9c5eb75ed25f415f99600e603d606660bc6113611f612b
6137614361a16204625d62bd62c962d56321637b63da643a64dc6570657c
658865d8661d66296635668766d76719678f6800685c68c268ce68da6941
69a969b569c169cd69d96a446aa96b086b176b266b326b3e6b8c6bf06c78
6cec6d5c6dc56e286e986f036f7e6ffb705670ab70ff715271ce71da71e6
721b721b721b721b721b721b721b721b721b721b721b721b721b721b7223
722b723572407272728f72aa72c872e472f072fc732e736d73cf73f373ff
740f7432750a752675437556756a75b4764276e877797785786778d17953
79fd7a687ae67b3f7bb17c4e7cb27d457da37e077e217e3b7e557e6f7edf
7f067f3f7f567f8b8025806980ef8131814481578190819d81c781e981f5
825f82bc835183dd8464852a852a86f8875e87b087de882a889289208951
89bb8a228a708af88b4e8b808bd18c098c398c828cd78d068d448d6f8ddb
8e3b8e948edf8f328f6b8fbc8fe090269059907490b39122915991d2923e
929f92c992ff937a93ac93fb942d947194eb954595ab9609967e96f3977d
97d09810986998c1993c99b899f49a439a8d9ad49b0f9b539b939bdd9c33
9c3f9c8d9d039d899de49e279eb19f159f749fd5a063a06fa0c3a110a160
a1a3a211a273a2d6a350a3dda46aa502a574a5e3a62ba690a6f1a71ea79d
a804a81ba878a8bda96fa9dcaa41aa8caad2ab13ab55ab9eabf3ac67acad
accfad0cad82adcbae13ae68aedaaf07af43af93afa7afbbafcdafe1aff3
b00ab01eb07bb0e7b138b19ab202b22db283b2dcb324b387b3aeb412b428
b4b2b51cb547b54fb557b55fb567b56fb577b57fb587b58fb597b59fb5a7
b5afb5bab5c2b632b689b6b6b71ab76eb7ccb846b89cb904b969b9cbba46
ba4ebad9bb23bb90bbe0bc58bcc6bd17bd17bd1fbd8fbdf8be5fbea2bf11
bf28bf3fbf56bf6dbf79bf91bf9dbfa9bfc0bfd7bfeebffac011c028c03f
c04bc062c079c090c0a7c0bec0cac0e1c0f8c10fc11bc132c149c160c177
c18ec19ac1b2c1bec1cac1e1c1f8c20fc21bc22dc23ec255c261c278c28f
c2a6c2bdc2d4c2e0c2f7c30ec325c331c348c353c36ac37cc38ec3a0c40e
c4b0c4c2c4d4c4ebc501c513c525c537c548c55ac566c57dc58ec5a0c5b2
c5c9c5dbc64ec6d9c6f0c702c719c72fc741c753c765c777c783c795c7ac
c7bec7d5c7ecc803c81ac82cc83ec849c854c86bc877c883c89ac8b1c8bd
c8c9c8e0c8f2c8fec90ac91fc92fc93fc94fc966c978c984c990c9a7c9b9
c9d0c9e2c9f4ca06ca18ca2bca3eca50ca62ca6eca7aca91caa2cab9cad0
cae7cafdcb09cb15cb21cb2dcb3fcb50cb5ccb68cb74cb80cb97cba3cbba
cbd1cbe3cbf5cc07cc19cc2ccc3fcc52cc65cccacd39cd50cd67cd7ecd94
cda0cdb7cdcecde5cdfcce13ce29ce40ce52ce69ce80ceaaced4cedfcef1
cf03cf19cf2fcf3acf52cf5ecf6acf81cf98cfaecfb9cfcfcfe5cffcd008
d01fd036d048d05fd076d082d099d0b0d0c7d0d3d0ead100d112d17fd191
d1a8d1bad1ccd1ddd1f3d204d21bd28fd2a5d2bcd2ced2e0d2ecd303d31a
d331d343d34ed364d37bd387d39dd3a9d3bed3ced3e5d3f1d408d41ad42c
d43fd451d45dd46ed480d496d4a2d4b3d4bfd4d5d4e1d4f8d50ad51cd534
d547d5aad5c1d5d7d5e2d5f9d610d626d631d63dd649d655d661d66dd679
d694d69cd6a4d6acd6b4d6bcd6c4d6ccd6d4d6dcd6e4d6ecd6f4d6fcd704
d710d71cd733d74ad761d777d791d799d7a1d7a9d7b1d81ed82ad835d847
d859d86bd877d88ed8fdd905d911d919d921d938d94ad952d95ad962d96a
d981d989d991d999d9a1d9a9d9b1d9b9d9c1d9c9d9d1d9e3d9ebd9f3da47
da4fda57da63da7ada82da8ada96da9edab5dacbdae2daf9db10db27db33
db3fdb56db6ddb75db7ddb89db9bdba3dbbadbd1dbdddbe9dc00dc17dc2e
dc45dc4ddc55dc6ddc85dc91dc9ddca9dcb5dcc1dccddcd5dcdddce5dcfc
dd13dd1bdd2ddd3fdd4bdd57dd5fdd67dd7edd90dd9cdda4ddafddbbddc7
ddd3dddeddf5de0cde18de24de30de3cde44de4cde58de63de6fde7ade8c
de9ddea9deb4deccdedfdeebdef6df06df16df1edf2adf36df48df5adf72
df8adfa2dfbadfd2dfeae002e01ae035e050e063e076e089e09ce0b4e0cc
e0dfe0f2e10de128e134e140e152e164e17be192e1aae1c2e1dae1f1e209
e221e239e250e26be286e298e2aae2b6e2c2e2cee2dae2f1e303e31be333
e34be363e37be393e3abe3c3e3dee3f9e410e427e43ee455e46ce483e49a
e4b1e4bde4c9e4d5e4e1e4f3e505e51ce533e54ae561e578e58fe5a6e5bd
e5c9e5d5e5e1e5ede5ffe611e628e63ee656e662e66ee67ae686e692e69e
e6aae6b6e6bee726e78ee7cee80ee877e8dce928e978e9d5ea35ea3dea4e
ea59ea61ea69ea71ea79ea81ea89ea91ea99eaabeabdead4eaebeb03eb1b
eb33eb4beb63eb7beb93ebabebc3ebdbebf3ec0bec17ec23ec2fec3bec47
ec53ec5fec6bec77ec8eeca0ecacecb8ecc4ecd0ecdcece8ecf4ed00ed18
ed2fed46ed52ed5eed6aed76ed82ed8eeda1edb8edceeddaede6edf2edfe
ee0aee16ee22ee2eee3aee46ee52ee5eee6aee76ee7eee86ee8eee96ee9e
eea6eeaeeeb6eebeeec6eeceeed6eedeeee6eef2eefdef08ef1aef22ef2a
ef36ef3eef55ef6bef73ef7bef83ef8befa2efaaefb2efbaefc2efcaefd2
efdaefe2f06bf0d1f138f140f14cf15ef16ff177f183f18ff19bf1a7f1b3
f1bff1cbf1d7f1e3f1eff1fbf207f213f21ff22b000000010000050e008f
001600590005000100000000000e000002000272000600010000001c0156
0001000000000000002f00000001000000000001000c002f000100000000
00020007003b0001000000000003000c002f0001000000000004000c002f
0001000000000005001300420001000000000006000c0055000100000000
000700200061000100000000000900060081000100000000000b000a0087
000100000000000c00130091000100000000000d002e00a4000100000000
000e002a00d20003000104090000005e00fc00030001040900010018015a
0003000104090002000e017200030001040900030018015a000300010409
00040018015a0003000104090005002601800003000104090006001801a6
0003000104090007004001be0003000104090009000c01fe000300010409
000b0014020a000300010409000c0026021e000300010409000d005c0244
000300010409000e005402a00003000104090010000c02f4000300010409
0011000a0300436f70797269676874203230313120476f6f676c6520496e
632e20416c6c205269676874732052657365727665642e526f626f746f20
4c69676874526567756c617256657273696f6e20322e3133373b20323031
37526f626f746f2d4c69676874526f626f746f2069732061207472616465
6d61726b206f6620476f6f676c652e476f6f676c65476f6f676c652e636f
6d43687269737469616e20526f62657274736f6e4c6963656e7365642075
6e6465722074686520417061636865204c6963656e73652c205665727369
6f6e20322e30687474703a2f2f7777772e6170616368652e6f72672f6c69
63656e7365732f4c4943454e53452d322e300043006f0070007900720069
0067006800740020003200300031003100200047006f006f0067006c0065
00200049006e0063002e00200041006c006c002000520069006700680074
0073002000520065007300650072007600650064002e0052006f0062006f
0074006f0020004c00690067006800740052006500670075006c00610072
00560065007200730069006f006e00200032002e003100330037003b0020
00320030003100370052006f0062006f0074006f002d004c006900670068
00740052006f0062006f0074006f00200069007300200061002000740072
006100640065006d00610072006b0020006f006600200047006f006f0067
006c0065002e0047006f006f0067006c00650047006f006f0067006c0065
002e0063006f006d00430068007200690073007400690061006e00200052
006f00620065007200740073006f006e004c006900630065006e00730065
006400200075006e00640065007200200074006800650020004100700061
0063006800650020004c006900630065006e00730065002c002000560065
007200730069006f006e00200032002e00300068007400740070003a002f
002f007700770077002e006100700061006300680065002e006f00720067
002f006c006900630065006e007300650073002f004c004900430045004e
00530045002d0032002e00300052006f0062006f0074006f004c00690067
00680074b00c2bb0002b00b2010c022b01b20d01022b01b70d3a30291e12
00082b00b7016d5945321d00082bb7027e6750381d00082bb70376604b36
1d00082bb70483644e3a1d00082bb705473a291e1200082bb70691775c3a
2300082bb7076d5945321d00082bb708514234251700082bb709392f241a
1000082bb70a91775c3a2300082bb70b76604b361d00082bb70ca184674a
2c00082b00b20e0e072bb00020457d691844b2b0120173b250120174b280
120174b270120175b23f1a0173b25f1a0173b27f1a0173b22f1a0174b24f
1a0174b26f1a0174b28f1a0174b2af1a0174b2ff1a0174b21f1a0175b23f
1a0175b25f1a0175b27f1a0175b20f1e0173b26f1e0175b27f1e0173b2ef
1e0173b21f1e0174b25f1e0174b28f1e0174b2cf1e0174b2ff1e0174b23f
1e0175b22f200173b26f200173b23f280173000000>
[16025 16233 16293 15297 15429 16117 15929 12675 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 4736 37 <0002001e000004e105b00007000a0054b20a0b0c111239b00a10b004d000
b0004558b0042f1bb1041e3e59b0004558b0022f1bb1020e3e59b0004558
b0062f1bb1060e3e59b2080402111239b0082fb10001b00a2b5821d81bf4
59b20a04021112393031012103230133012301210103cafd6b9681022775
022780fcfa0248fedc0198fe6805b0fa500201031900>Roboto-Light AddT42Char 
1 4878 38 <000300b80000047605b0000e001700200070b2022122111239b00210b011
d0b00210b01fd000b0004558b0012f1bb1011e3e59b0004558b0002f1bb1
000e3e59b2180100111239b0182fb22f18015db10f01b00a2b5821d81bf4
59b2080f18111239b00010b11001b00a2b5821d81bf459b00110b11f01b0
0a2b5821d81bf45930313311213216151406071616151406230111213236
35342623252136363534262321b801aeeaf27b6b7f9bf9defe9401719eb9
b19cfe8501509aa9afb1fecd05b0c1bc71a7241cc27fc1d902bcfdaca18f
879d67038b858c85>Roboto-Light AddT42Char 
1 5260 40 <000200b8000004bd05b0000b00150048b2151617111239b01510b002d000
b0004558b0012f1bb1011e3e59b0004558b0002f1bb1000e3e59b00110b1
0c01b00a2b5821d81bf459b00010b10d01b00a2b5821d81bf45930313311
2132041215151402042301112132001135340027b80197b3011c9f9efee1
bafeed0114e60116feeee005b0a3fed0c286c3fed2a40547fb2101310104
80fb012e0100>Roboto-Light AddT42Char 
1 5664 43 <00010091ffec04d305c40022005fb20b232411123900b0004558b00b2f1b
b10b1e3e59b0004558b0032f1bb1030e3e59b20f030b111239b00b10b112
01b00a2b5821d81bf459b00310b11a01b00a2b5821d81bf459b2220b0311
1239b0222fb11f01b00a2b5821d81bf45930312506042322240227351000
21320417232626232202111514161633323736371121352104d340feefa9
abfef6920101320102e101121a7b1bcfa7ccee71d3899f724a24fe790202
ad5b66a4012cc2b8012f015fe5c9a0a5fedefef8aca6ff8c32212c017868
>Roboto-Light AddT42Char 
1 6002 45 <000100d30000014e05b00003001d00b0004558b0022f1bb1021e3e59b000
4558b0002f1bb1000e3e59303121231133014e7b7b05b000>Roboto-Light AddT42Char 
1 6290 48 <000100b80000040305b00005002900b0004558b0042f1bb1041e3e59b000
4558b0022f1bb1020e3e59b10001b00a2b5821d81bf45930312521152111
33013402cffcb57c686805b0>Roboto-Light AddT42Char 
1 6638 51 <0002007dffec04ec05c4000f001d0048b2041e1f111239b00410b013d000
b0004558b00b2f1bb10b1e3e59b0004558b0042f1bb1040e3e59b00b10b1
1301b00a2b5821d81bf459b00410b11a01b00a2b5821d81bf45930310114
0204232200113534122420041217071002232202111510123332121104ec
8bfefea9fffec68d0102015001018c037beecfcbf1f0ced1ea0289c9fed0
a4016d013696c70133a5a2fed8c3100107012afed5fef498fefdfed1012b
010b>Roboto-Light AddT42Char 
1 8056 60 <00010037000004af05b0000b005300b0004558b0012f1bb1011e3e59b000
4558b00a2f1bb10a1e3e59b0004558b0042f1bb1040e3e59b0004558b007
2f1bb1070e3e59b2000104111239b2060104111239b2030006111239b209
060011123930310101330101230101230101330273019a93fe1e01f194fe
58fe569201f2fe1d9303480268fd32fd1e027cfd8402e202ce00>Roboto-Light AddT42Char 
1 0 0 <000500640000032805b0000300060009000c000f006fb20c1011111239b0
0c10b000d0b00c10b006d0b00c10b009d0b00c10b00dd000b0004558b002
2f1bb1021e3e59b0004558b0002f1bb1000e3e59b2040200111239b20502
00111239b2070200111239b2080200111239b00adcb20c0200111239b20d
0200111239b00210b00edc30312121112103110101110103210135012103
28fd3c02c436feeefeba010ce40203fefe0102fdfd05b0faa40507fd7d02
77fb110278fd5e025e88025e>Roboto-Light AddT42Char 
Roboto-Light /CharStrings get begin
/A 37 def
/B 38 def
/D 40 def
/G 43 def
/I 45 def
/L 48 def
/O 51 def
/X 60 def
end
Roboto-Light /Encoding get
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 79 /O put
dup 88 /X put
pop
end
%ADOEndSubsetFont
/FKJHMM+Roboto-Light /Roboto-Light findfont ct_VMDictPut/FKJHMM+Roboto-Light*1 [65{/.notdef}rp /A /B /.notdef /D 2{/.notdef}rp /G /.notdef /I 2{/.notdef}rp /L 2{/.notdef}rp /O 8{/.notdef}rp /X 167{/.notdef}rp]FKJHMM+Roboto-Light nfFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6777 252.447 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6777 263.447 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4554 244.461 mo
87.6551 244.461 li
87.6551 265.766 li
41.4554 265.766 li
cp
clp
41.4554 250.937 mo
56.894 250.937 li
56.894 244.461 li
41.4554 244.461 li
cp
.012 .144 .998 0 cmyk
f
58.7243 244.46 mo
58.7243 252.983 li
41.4555 252.983 li
41.4555 265.766 li
63.6583 265.766 li
63.6583 244.46 li
cp
46.3893 257.468 mo
58.7243 257.468 li
58.7243 261.281 li
46.3893 261.281 li
cp
.949 .859 .441 .484 cmyk
f
65.4524 244.46 mo
65.4524 265.766 li
87.6551 265.766 li
87.6551 252.983 li
74.1989 252.983 li
74.1989 257.468 li
82.721 257.468 li
82.721 261.281 li
70.3863 261.281 li
70.3863 248.946 li
87.6551 248.946 li
87.6551 244.46 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium Initial
ct_T42Dict begin
-0.73 -0.27 1.168 1.055
 256 array 0 1 255 {1 index exch /.notdef put} for  /Roboto-Medium
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c0000005c6670676d0000000000000188000001bc
676c796600000000000027d40001e33c6865616400000000000003440000
003668686561000000000000037c00000024686d747800000000000003a0
000014386c6f636100000000000017d800000a1e6d617870000000000000
21f8000000206e616d650000000000002218000004687072657000000000
0000268000000153676469720000000000000000000000000003049801f4
00050000059a05330000011f059a0533000003d100660200000002000000
000000000000e00002ff5000205b0000002000000000474f4f4700400000
fffd0600fe000066079a02002000019f00000000043a05b0002000200003
002a00cc0091009e009100ec007200b2007d0056005f004e0060010400aa
00c400000014fe600014029b0010ff39000dfe9700120321000b043a0014
048d001005b000140618001506c00010025b00120704000506de00010000
0000b0002c4bb0095058b101018e59b801ff85b0441db109035f5e2db001
2c2020456944b001602db0022cb0012a212db0032c2046b0032546525823
59208a208a49648a204620686164b004254620686164525823658a592f20
b00053586920b000545821b040591b6920b000545821b0406559593a2db0
042c2046b00425465258238a592046206a6164b0042546206a6164525823
8a592ffd2db0052c4b20b0032650585158b080441bb04044591b21212045
b0c05058b0c0441b2159592db0062c2020456944b001602020457d691844
b001602db0072cb0062a2db0082c4b20b003265358b0401bb000598a8a20
b0032653582321b0808a8a1b8a235920b0032653582321b0c08a8a1b8a23
5920b0032653582321b801008a8a1b8a235920b0032653582321b801408a
8a1b8a235920b003265358b0032545b8018050582321b8018023211bb003
254523212321591b2159442db0092c4b535845441b2121592db00a2cb02c
452db00b2cb02d452db00c2cb1270188208a5358b94000040063b8080088
5458b9002c03e870591bb0235358b02088b810005458b9002c03e8705959
592db00d2cb04088b820005a58b12d00441bb9002d03e844592d00010000
00022312b4d324365f0f3cf50019080000000000c4f0112e00000000d501
52ecfa24fdd5095c087300000009000200000000000000010000076cfe0c
0000096bfa24fe41095c00010000000000000000000000000000050e038c
0064000000000000000001fe000001fe00000225008f0298006504e20060
048c006405e00063051d0056015a005202ca008002d200280389001b0475
004401c2001c02a00047023c0087032a0002048c0069048c00a8048c0051
048c004f048c0034048c0081048c0075048c0045048c0068048c005d021f
008201e7002e0411003f047a0091042a008003e4003c0728005b05530012
050c009405390066053a009404860094046500940572006a05af00940242
00a30471002d050b0094045400940701009405ae009405860066051d0094
0586006004fe009404d4004a04db002d0537007d052d0012070a00300510
002904e0000704d1005002310084035800140231000c036b0035039c0003
029400310454005a0481007c0430004f0484004f044b005302d6002d0489
005204710079020b007d0201ffb5042d007d020b008c06f6007c04730079
048e004f0481007c048b004f02d0007c0421004b02a900080472007703f5
001605f200210406001f03e5000c0406005202af0038020200ae02af001b
05510075021e0086047d006404b5005e059d005d0440000b01fc008804f8
005a0385005d064400570391008d03e20057046d007f0644005703db009b
030a007f044a005f02f6003c02f60037029b007004bb009203ed00450242
008e0210006d02f6008003a7007703e2005d05d00059062b005006570067
03e400420785fff60444004d0584006904ca009404e7008806c1004804a7
0067049100430488004f0497008204ed004f05b0001f021a008f0498008e
04640022024f0021059300900488007e07b40064073a005b020c008b0588
005102d0ffe4058a0058049e004f05a4007d04f200770226ffb5043c0059
03e6009403b0007203dc009b037c0075020b008102b20078024d002903d8
007a031f0049026c00820000fc8e0000fd5e0000fc730000fd3e0000fc0c
0000fd1c025d00c6043c00670242008e0475009b05bf0019057a005b0538
00200490006c05b1009b0490004705ef004a05aa0044055b006b04840056
04c60096040e00200488005404600060041a00610488007e04a1007302aa
00a9046a00160413006404f3002d048800800437005204900052042d003f
0460008005d0004405c9004f0694006604b30076047bffe10671003305fe
0022055900680888002d088f009b065b003105aa00920508009006060024
07a2001604d6004905a8009405a9002d050a0039065f004f05f900920589
008e079b009807f90098061a001806f9009b050700900550006b075400a0
04f70020047d005b048f008f035a008504f600270676001e0416004d0498
0086046e008f049a00210603008f049700860498008603f5002305d30054
04d300860466005f068e008606ec007e0517001f066f008f0468008f043c
005106840091047000270471ffdb043c005406d1001e06e400860489ffee
0498008607490088064f00700467ffe00728009806010086050c001c0460
000a074200ac0636009d06ed008005e60082093200a307f9008f04200028
03f00033057a005f0488004f051a0010040e0020057a005f0488004f0745
00880644007407490088064f0070051a0066044a005c04ff006d0000fc66
0000fc730000fd7b0000fda50000fa240000fa4d062a0094051b00860467
ffe0051300940486007c046a008f03a1007e04f2009b0420007e081c0016
06d3001e05cc009b04fa008f052c009004ab008e0695003405a4003d0628
0094050d008607d0009405aa007e0847009b06f5007e062a006704ff0061
053900290446001f0731002d0570002605fa008e04dc005f057400800473
0074058600840624001604c3ffcb052100900478008e0628002d051d0021
05af009b0488007e06350094051a0086077e00940678008f0588005104a6
005b04a6005d04c7003403af002d056700290474001f0507005206f10068
06dd005e0653003c0528002f047b0048043e007407be0042069d004007fd
0094069e00770504005d042c005505aa0021051d0044055500810649002d
053e0021032c00670414000008290000041400000829000002b90000020a
0000015c0000047f00000230000001a200000100000000d1000000000000
02a1004702a100470529009d06300081039c000301c0006301bc003301ce
003201a8004a0314006c031b004003080032045d00400499005c02cb0088
03fa008a05a6008a01c8005a07a7004a0272006c02690054039c002d02f6
0035035c006904b5005f0670002106b800980893009406280021068c007c
048c005e05f500210434002804a20021055e004f057d002805e4007003e2
004c082e00900509006d051400960635005906dd005406d1005b06a20058
04910062059600a604d900400483009e04b2003b0845005e022dffaf048e
0065047a00910411003c042a0080040c0024025b00a10298006301f10045
051b002d04a8001804bc002d0723002d0723002d0511002d06b7004b0000
0000083000590835005c02f6003c02f6008002f6004b041d004f041d0058
041d0039041c0060041d0067041d0030041d003e041d0042041d0096041d
0059042a0041043c0005045e001506070028047b000904840067043b0024
0434003e045c007604c0004c046d007604c0004f04dd00760606007603b9
0076045b007603d5002401fc008504de007604a6005403c500760434003e
0466003803a4000903b90076047b000904c0004f047b00090398004204d8
007604190044059d00500554005004e4005f059100240480004f07540024
075700760597002404d700760471007605590027063a001a0446004204e4
0076045c007604cb00240446001f055d0076048c004106840076070a0076
055a000a06200076046700760480003c06920076048800430422000a0692
001a049d0076051a0076056e002405f0004f045a000504c4001506950024
048c0041048c007605fe000a04d2004f0446004204c0004f0466003803f7
00460836007604eb002802f6003702f6003502f6004f02f6004d02f60036
02f6004b02f6004603b9009002b2009603e00076043b000a04bb00560544
009b0528009b043000810539009b042d0081047a00760480004f04600076
049e00090205009403a100750000fc9d040b007a040bff4c040b0075040b
007503b9007603a1007503a1007502f6004b02f6003502f6004f02f6004d
02f6003602f6004b02f60046057a006b05a2006b0586009b05e0006b05e2
006b041b00970482006e0457000f04be0035046b0066042e004303a10075
01b3005c0698004f04b400730210ffb0048c0039048c006a048c002c048c
0066048c0063048c0035048c006f048c0059048c0068048c00e30226ffb5
0226ffb5021b008f021bfffb021b008f0460007604eb00620433003a0488
007c043d00500498004f0493004f04a1004c0494007c049f004f044b0053
0489005103a4005b0503005d03c400030646fff10409007604c0004f0509
003104dd007601fe000002a000470558fff70558fff7048fffd404db002d
02a9ffe80553001205530012055300120553001205530012055300120553
001205390066048600940486009404860094048600940242ffc8024200a3
0242ffcb0242ffbf05ae0094058600660586006605860066058600660586
00660537007d0537007d0537007d0537007d04e000070454005a0454005a
0454005a0454005a0454005a0454005a0454005a0430004f044b0053044b
0053044b0053044b0053021affb4021a008f021affb7021affab04730079
048e004f048e004f048e004f048e004f048e004f04720077047200770472
00770472007703e5000c03e5000c055300120454005a055300120454005a
055300120454005a053900660430004f053900660430004f053900660430
004f053900660430004f053a0094051a004f04860094044b005304860094
044b005304860094044b005304860094044b005304860094044b00530572
006a048900520572006a048900520572006a048900520572006a04890052
05af0094047100790242ffb3021aff9f0242ffcd021affb90242ffdf021a
ffcb02420017020b00000242009d06b300a3040c007d0471002d0226ffb5
050b0094042d007d04540094020b008a04540094020b00550454009402a1
008c0454009402e7008c05ae00940473007905ae00940473007905ae0094
047300790473ffa505860066048e004f05860066048e004f05860066048e
004f04fe009402d0007c04fe009402d0004f04fe009402d0003804d4004a
0421004b04d4004a0421004b04d4004a0421004b04d4004a0421004b04d4
004a0421004b04db002d02a9000804db002d02a9000804db002d02d10008
0537007d047200770537007d047200770537007d047200770537007d0472
00770537007d047200770537007d04720077070a003005f2002104e00007
03e5000c04e0000704d100500406005204d100500406005204d100500406
00520785fff606c10048058400690488004f047affa6047affa6043b0024
049e0009049e0009049e0009049e0009049e0009049e0009049e00090480
004f03e0007603e0007603e0007603e0007601fcffa601fc008301fcffa9
01fcff9d04dd007604c0004f04c0004f04c0004f04c0004f04c0004f0484
0067048400670484006704840067043c0005049e0009049e0009049e0009
0480004f0480004f0480004f0480004f047a006a03e0007603e0007603e0
007603e0007603e0007604a6005404a6005404a6005404a6005404de0076
01fcff9101fcffab01fcffbd01fc001501fc007c03d50024045b007603b9
007603b9007603b9007603b9007604dd007604dd007604dd007604c0004f
04c0004f04c0004f045c0076045c0076045c00760434003e0434003e0434
003e0434003e043b0024043b0024043b0024048400670484006704840067
04840067048400670484006706070028043c0005043c0005042a0041042a
0041042a0041055300120486fee705affef00242fef3059affa70544fee1
056fffb202aaff8705530012050c00940486009404d1005005af00940242
00a3050b00940701009405ae009405860066051d009404db002d04e00007
051000290242ffbf04e0000704840056046000600488007e02aa00a90460
00800498008e048e004f04bb009203f500160406001f02aaffcc04600080
048e004f0460008006940066048600940475009b04d4004a024200a30242
ffbf0471002d0528009b050b0094050a003905530012050c00940475009b
0486009405a800940701009405af00940586006605b1009b051d00940539
006604db002d051000290454005a044b005304980086048e004f0481007c
0430004f03e5000c0406001f044b0053035a00850421004b020b007d021a
ffab0201ffb5046e008f03e5000c070a003005f20021070a003005f20021
070a003005f2002104e0000703e5000c015a005202980065044a008f0226
ffb101bc00330701009406f6007c055300120454005a0486009405a80094
044b00530498008605aa004405c9004f051a0010040efff10873004f096b
006604d600490416004d053900660430004f04e00007040e0020024200a3
07a200160676001e024200a3055300120454005a055300120454005a0785
fff606c1004804860094044b005305880051043c0059043c005907a20016
0676001e04d600490416004d05a800940498008605a80094049800860586
0066048e004f057a005f0488004f057a005f0488004f0550006b043c0051
050a003903e5000c050a003903e5000c050a003903e5000c0589008e0466
005f06f9009b066f008f0484004f055300120454005a055300120454005a
055300120454005a055300100454ff9a055300120454005a055300120454
005a055300120454005a055300120454005a055300120454005a05530012
0454005a055300120454005a055300120454005a04860094044b00530486
0094044b005304860094044b005304860094044b00530486ffd5044bff8e
04860094044b005304860094044b005304860094044b0053024200a3021a
008f02420094020b007805860066048e004f05860066048e004f05860066
048e004f05860027048effa305860066048e004f05860066048e004f0586
0066048e004f058a0058049e004f058a0058049e004f058a0058049e004f
058a0058049e004f058a0058049e004f0537007d047200770537007d0472
007705a4007d04f2007705a4007d04f2007705a4007d04f2007705a4007d
04f2007705a4007d04f2007704e0000703e5000c04e0000703e5000c04e0
000703e5000c04a2004f04db002d03f500230589008e0466005f0475009b
035a00850624001604c3ffcb047100790507ffd00507ffd00475fff0035a
ffe2053cffe30444ffae04e00007040e0020051000290406001f04600060
0465000206300081048c0051048c004f048c0034048c008104a0008904b4
007c04a0005d04b4007d0572006a0489005205ae00940473007905530012
0454000d04860048044b00010242fef6021afee205860066048e001604fe
003202d0ff6e053700710472000f04dffeac050c00940481007c053a0094
0484004f053a00940484004f05af009404710079050b0094042d007d050b
0094042d007d04540094020b00780701009406f6007c05ae009404730079
05860066051d00940481007c04fe009402d0007204d4004a0421004b04db
002d02a900080537007d052d001203f50016052d001203f50016070a0030
05f2002104d100500406005205ccfe1c049e0009041cff2a051aff370238
ff3904caff930478fee804eeffa4049e00090460007603e00076042a0041
04de007601fc0085045b00760606007604dd007604c0004f046d0076043b
0024043c0005045e001501fcff9d043c000503e0007603b900760434003e
01fc008501fcff9d03d50024045b00760446001f049e00090460007603b9
007603e0007604e400760606007604de007604c0004f04d80076046d0076
0480004f043b0024045e00150446004204de00760480004f043c000505fe
000a04e400760446001f059d005005d100850646fff104c0004f0434003e
060700280607002806070028043c0005055300120454005a04860094044b
0053049e000903e00076021a0078000000600060006000600060009b00c5
014201c2025d02fa03140340036f03a203c803ea04010428043f049404c2
0514058805cc0633069c06c9074807b307bf07cb07ea0812083108980946
098709f30a470a910ad30b0a0b6b0ba90bc40bf80c3f0c630cbc0cf80d53
0d9f0e000e5a0ec90ef40f330f640fb30ffe102f1068108d10a410ca10f1
110c112d11ae120f126412c21337138113fd143d147714c3150a15251591
15da1629168e16ef172d179c17e8182f185f18ad18f61937197019b319ca
1a0c1a511a8f1af21b571bb91c1b1c3a1cd71d091dac1e2c1e381e561f08
1f221f621fa61ffa206d208d20df210b212c2162219121dc21e82202221c
223622a02306234423c02412247f254025b92611268426e4276027bf27da
2827287128af2907296329e92a862ab72b1c2b842bf22c572cac2d072d38
2d9c2dd32dfb2e032e322e552e8e2ebb2eff2f342f792f992fb92fc22ff3
30253041305a30a030a830cf30fd317831a631e83217325432c93323338d
3402347334a6351c359b35f6364036b436e2373b37ac37fe385838b6390d
3952399239ff3a523ab33b2c3b7c3bf23c553cc53d3c3db23e043e413e9a
3ef73f633fe3401c406640ad411f4155419641d4421d427742dc432943a0
4420447b44e44550457745cd463a46ba46f34744478c47d64830485f488b
4916494c498e49cc4a114a664ac94b144b864bff4c594cd34d424db84e29
4e8e4eca4f2a4f8a4ff3507950fb514851975203527152e4535653e05469
5509559d560c567756bc5703576f57d75899595359cd5a4d5aa35af75b2c
5b485b7c5b925ba85c7c5cea5d055d205d895de15e515e815eaa5f015f4d
5f595f655f715f7d5fd36026607760cd60d960e56145619461f4624b62dc
63686374638063c7640b64176423647664c56508657965f9665a66af66bb
66c767266782678e679a67a667b2681a687d68d968e868f8690469106960
69c96a526ac56b306b986bfd6c6a6cd66d3b6da96e056e586eab6efd6f74
6f806f8c6fbb6fbb6fbb6fbb6fbb6fbb6fbb6fbb6fbb6fbb6fbb6fbb6fbb
6fbb6fc36fcb6fd56fdf6ff7701a703c705c707b7087709370c671057167
718b719771a771ca729a72b672d272e572f9734173c5746874f6750275ca
763076b0776777ce784978a2791279b17a137aaa7b087b6c7b867ba07bba
7bd47c417c687ca17cb87ced7d807dc37e447e847e937ea27edb7ee87f16
7f2f7f3b7f9f7ff58090811c818f82598259840d847684c984f3853c85a1
8626865786be8723876d87f38849887a88c889018932897b89c589f68a2f
8a5a8ac58b1e8b7a8bc48c198c528ca48cc88d0b8d368d518dac8e0b8e42
8eb98f248f868fb08fe6905a908d90d8910a914e91bd920f927392d2934d
93c2945394a494e4953b9592960d968d96c99722976c97af97e9982b9864
98a398fb9907995499cb9a5c9ab09af39b759bdb9c419ca49d359d419d93
9de09e2e9e709ee09f469fa6a01da0b1a138a1d0a247a2bba2fda35da3bb
a3e8a46ea4d0a4e7a53ba57da62ea698a6fca745a78ca7cea80fa858a8ae
a933a972a995a9e3aa44aa8baad1ab28ab9aabc7ac15ac70ac84ac98acaa
acbeacd0ace7acfbad4fadb2adfeae5baebdaee8af40af98afe0b03fb066
b0d7b0edb16db1d2b203b214b225b238b249b25ab26db280b293b2a9b2b1
b2b9b2c1b2c9b2d4b2dcb343b396b3c3b423b477b4d8b556b5a3b609b66d
b6dfb75bb763b7e6b821b88fb8dfb958b9c6ba18ba18ba20ba91bb02bb64
bba7bc0cbc23bc3abc51bc63bc7bbc8ebc9abca6bcbdbcd4bcebbd03bd1a
bd31bd48bd60bd72bd89bda0bdb7bdcebde6bdfdbe0fbe26be3ebe55be6c
be7ebe94beaabec1bed9bee5bef1bf08bf1abf30bf47bf5dbf73bf8abfa2
bfb3bfcabfdcbff2c003c01bc032c044c05ac071c083c09ac0b1c0c2c0d9
c0f0c15bc1ffc211c223c23ac250c267c27ec290c2a1c2b3c2c3c2dac2eb
c302c318c32fc346c3b5c44ec465c476c48dc4a3c4bac4d0c4e7c4fec50a
c51cc533c545c55cc56ec585c59cc5b3c5cac5d5c5e0c5f7c603c60fc626
c63dc649c655c66cc683c68fc69bc6b0c6c5c6d1c6ddc6f4c706c712c71e
c735c746c75bc772c783c79ac7b1c7c9c7e1c7f3c805c811c81dc82fc840
c852c864c87bc891c89dc8a9c8b5c8c1c8d3c8e4c8f0c8fcc908c914c92b
c937c94ec964c976c98cc9a3c9bac9cdc9e0c9f8ca0bca6acacdcae4cafb
cb12cb28cb40cb57cb6ecb85cb9ccbaecbbfcbd6cbe8cbffcc16cc46cc76
cc86cc9dccb4cccaccdbccf3cd0bcd17cd23cd3acd51cd67cd7ecd95cdab
cdc2cddacdecce03ce15ce2bce3cce54ce6bce82ce98ceb0cec7ceddcef4
cf5ccf6ecf84cf9bcfaccfbdcfd3cfe9d000d06fd085d09bd0b2d0c9d0d5
d0ebd0fdd114d12bd136d14cd163d16fd185d191d1a6d1b2d1c9d1d5d1ec
d1fdd214d227d239d245d256d268d27ed28ad29bd2a7d2bdd2c9d2dfd2f0
d307d31ad32dd38fd3a6d3bcd3d3d3ead401d417d422d42ed43ad446d452
d45ed46ad485d48dd495d49dd4a5d4add4b5d4bdd4c5d4cdd4d5d4ddd4e5
d4edd4f5d50dd525d537d549d55bd56cd586d58ed596d59ed5a6d611d629
d640d652d664d676d68ed6a5d714d71cd734d73cd744d75bd772d77ad782
d78ad792d7a9d7b1d7b9d7c1d7c9d7d1d7d9d7e1d7e9d7f1d7f9d810d818
d820d875d87dd885d89cd8b3d8bbd8c3d8dbd8e3d8fad910d927d93ed955
d96cd984d99cd9b3d9c9d9ddd9fcda08da1ada22da39da4bda57da63da7a
da91daa8dabfdac7dacfdae7daffdb0bdb17db23db2fdb3bdb47db4fdb57
db5fdb76db8ddb95dbacdbc3dbdbdbf2dbfadc02dc19dc2fdc47dc4fdc66
dc7edc96dcaedcc5dcdcdcf2dd0add22dd3add52dd5add62dd7add91dda9
ddc0ddd2dde3ddfbde12de2ade42de5ade71de8ddea9deb1debddec9dedb
deeddf06df1ddf36df4ddf65df7cdf94dfabdfc6dfe0dff3e005e018e02a
e03de04fe067e07ee099e0b4e0c0e0cce0dee0f0e102e113e12ce143e15c
e173e18be1a2e1bae1d1e1ece206e218e22ae236e242e24ee25ae271e283
e29be2b2e2cae2e1e2f9e310e328e33fe35ae374e38be3a2e3b9e3d0e3e7
e3fee415e42be437e443e44fe45be46de47fe496e4ade4c4e4dbe4f2e509
e520e536e542e54ee55ae566e578e58ae59ce5ade5c7e5d3e5dfe5ebe5f7
e603e60fe61be627e62fe696e6fde73ce77ce7dbe83be886e8d5e930e989
e991e99de9a7e9afe9b7e9bfe9c7e9cfe9d7e9dfe9e7e9f9ea0bea22ea39
ea51ea69ea81ea99eab1eac9eae1eaf9eb11eb29eb41eb59eb65eb71eb7d
eb89eb95eba1ebb4ebc0ebccebdeebf0ebfcec08ec14ec20ec2cec38ec44
ec50ec68ec7aec8cec98eca4ecb0ecbcecc8ecd4ece7ecf9ed0aed16ed22
ed2eed3aed46ed52ed5eed6aed76ed82ed8eed9aeda6edb2edbaedc2edca
edd2eddaede2edeaedf2edfaee02ee0aee12ee1aee22ee3aee51ee68ee7a
ee82ee8aeea2eeaaeebceed2eedaeee2eeeaeef2ef09ef11ef19ef21ef29
ef31ef39ef41ef49efd7f049f0abf0b3f0bff0d1f0e2f0eaf0f6f102f10e
f11af126f132f13ef14af156f162f16ef17af186f192f19e000000010000
050e008f0016004e0005000100000000000e000002000230000600010000
001c01560001000000000000002f00000001000000000001000d002f0001
0000000000020007003c0001000000000003000d002f0001000000000004
000d002f0001000000000005001300430001000000000006000d00560001
00000000000700200063000100000000000900060083000100000000000b
000a0089000100000000000c00130093000100000000000d002e00a60001
00000000000e002a00d40003000104090000005e00fe0003000104090001
001a015c0003000104090002000e01760003000104090003001a015c0003
000104090004001a015c0003000104090005002601840003000104090006
001a01aa0003000104090007004001c40003000104090009000c02040003
00010409000b00140210000300010409000c00260224000300010409000d
005c024a000300010409000e005402a60003000104090010000c02fa0003
000104090011000c0306436f70797269676874203230313120476f6f676c
6520496e632e20416c6c205269676874732052657365727665642e526f62
6f746f204d656469756d526567756c617256657273696f6e20322e313337
3b2032303137526f626f746f2d4d656469756d526f626f746f2069732061
2074726164656d61726b206f6620476f6f676c652e476f6f676c65476f6f
676c652e636f6d43687269737469616e20526f62657274736f6e4c696365
6e73656420756e6465722074686520417061636865204c6963656e73652c
2056657273696f6e20322e30687474703a2f2f7777772e6170616368652e
6f72672f6c6963656e7365732f4c4943454e53452d322e300043006f0070
0079007200690067006800740020003200300031003100200047006f006f
0067006c006500200049006e0063002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0052
006f0062006f0074006f0020004d0065006400690075006d005200650067
0075006c0061007200560065007200730069006f006e00200032002e0031
00330037003b002000320030003100370052006f0062006f0074006f002d
004d0065006400690075006d0052006f0062006f0074006f002000690073
00200061002000740072006100640065006d00610072006b0020006f0066
00200047006f006f0067006c0065002e0047006f006f0067006c00650047
006f006f0067006c0065002e0063006f006d004300680072006900730074
00690061006e00200052006f00620065007200740073006f006e004c0069
00630065006e00730065006400200075006e006400650072002000740068
006500200041007000610063006800650020004c006900630065006e0073
0065002c002000560065007200730069006f006e00200032002e00300068
007400740070003a002f002f007700770077002e00610070006100630068
0065002e006f00720067002f006c006900630065006e007300650073002f
004c004900430045004e00530045002d0032002e00300052006f0062006f
0074006f004d0065006400690075006db00c2bb0002b00b2010e022b01b2
0f01022b01b70f3a30251b1000082b00b701382e241a1100082bb7024e40
32231500082bb703483b2e211400082bb7044e4032231500082bb7053028
1f160e00082bb70663513f2d1b00082bb7074034241a1100082bb7085b4a
3a291900082bb70983644e3a2300082bb70a77624c362100082bb70b9177
5c3a2300082bb70c76604b361d00082bb70d2c241c140c00082bb70e4337
2b1f1200082b00b2100e072bb00020457d691844b280140173b2b0140173
b250140174b280140174b23f1c0173b25f1c0173b27f1c0173b22f1c0174
b24f1c0174b26f1c0174b28f1c0174b2af1c0174b2ff1c0174b21f1c0175
b23f1c0175b25f1c0175b27f1c0175b20f200173b26f200175b27f200173
b2ef200173b21f200174b25f200174b28f200174b2cf200174b2ff200174
b23f200175b22f220173b26f220173b22f2a0173b23f2a01730000>
[16373 15681 15629 16177 16345 16365 16377 10769 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 4 <> Roboto-Medium AddT42Char 
1 4748 37 <000200120000054205b00007000a004700b0004558b0042f1bb104203e59
b0004558b0022f1bb102103e59b0004558b0062f1bb106103e59b2090402
111239b0092fb10001b00a2b5821d81bf459b20a04021112393031012103
210133012101210303c3fdcc76fef90226e30227fef8fd9c01a6d30153fe
ad05b0fa50021f025c00>Roboto-Medium AddT42Char 
1 5094 39 <00010066ffec04eb05c4001d0042b2031e1f11123900b0004558b00c2f1b
b10c203e59b0004558b0032f1bb103103e59b00c10b11301b00a2b5821d8
1bf459b00310b11a01b00a2b5821d81bf459303101060023222402273534
122433320017232626232206071514163332363704eb16fed4f9aefef790
03920111b3f1012618fc12938ea5b102a9a395961401dae9fefba50130c9
88ce013aaafefaef9d8bf1e981ecf8869c00>Roboto-Medium AddT42Char 
1 5410 41 <000100940000044c05b0000b005100b0004558b0062f1bb106203e59b000
4558b0042f1bb104103e59b20b0604111239b00b2fb10001b00a2b5821d8
1bf459b00410b10201b00a2b5821d81bf459b00610b10801b00a2b5821d8
1bf459303101211121152111211521112103e7fdaa02bbfc4803b1fd4c02
56028afe40ca05b0ccfe6e00>Roboto-Medium AddT42Char 
1 8794 69 <0002005affec03fb044e001e00290088b2172a2b111239b01710b020d000
b0004558b0172f1bb1171c3e59b0004558b0042f1bb104103e59b0004558
b0002f1bb100103e59b2021704111239b20b1704111239b00b2fb01710b1
0f01b00a2b5821d81bf459b2120b0f11123940090c121c122c123c12045d
b00410b11f01b00a2b5821d81bf459b00b10b12307b00a2b5821d81bf459
303121262706232226353424333335342623220615233436363332161711
14171525323637352322061514160303100c74a8a3ce0101ef955e60536a
f376cb7dbee20329fdfd487f208387885d1f4679ba89adb9475465534059
9b58bfadfe18925711af463bcc5e56465300>Roboto-Medium AddT42Char 
1 9604 73 <00020053ffec040b044e0015001d0086b2161e1f111239b01610b008d000
b0004558b0082f1bb1081c3e59b0004558b0002f1bb100103e59b21a0008
111239b01a2fb4bf1acf1a025db45f1a6f1a0271b41f1a2f1a0271b4ef1a
ff1a0271b28c1a015db10c07b00a2b5821d81bf459b00010b11001b00a2b
5821d81bf459b2120800111239b00810b11601b00a2b5821d81bf4593031
052200353534363633321211152116163332371706060322060721352626
0259e7fee17de28bddf1fd3d0b9d77a7698341d9a4647b1101cf08721401
23f21ea2ff8efee6fefe62869c877d616b039f8c7d127a7d>Roboto-Medium AddT42Char 
1 9838 74 <0001002d000002d6061500140055b207151611123900b0004558b0082f1b
b108223e59b0004558b0042f1bb1041c3e59b0004558b0002f1bb100103e
59b00410b010d0b11301b00a2b5821d81bf459b001d0b00810b10d01b00a
2b5821d81bf4593031331123353335343633321707262322151533152311
d2a5a5c8b44048062835aedcdc0386b463b4c412be08b360b4fc7a00>Roboto-Medium AddT42Char 
1 10234 76 <00010079000003f8060000100043b20a111211123900b0102fb0004558b0
022f1bb1021c3e59b0004558b00d2f1bb10d103e59b0004558b0062f1bb1
06103e59b00210b10a01b00a2b5821d81bf4593031013633201311231134
2623220711231133016c77b6015a05f3615e9248f3f303c48afe75fd3d02
ba705d82fcfb0600>Roboto-Medium AddT42Char 
1 10362 77 <0002007d0000019005d50003000d003fb2060e0f111239b00610b001d000
b0004558b0022f1bb1021c3e59b0004558b0012f1bb101103e59b00210b0
0cd0b00c2fb1060db00a2b5821d81bf45930312123113301343632161514
062226017ff3f3fefe478448488447043a0119384a4a38374949>Roboto-Medium AddT42Char 
1 10772 80 <0001008c0000017f06000003001d00b0004558b0022f1bb102223e59b000
4558b0002f1bb100103e59303121231133017ff3f3060000>Roboto-Medium AddT42Char 
1 10826 81 <0001007c00000679044e001d0078b2041e1f11123900b0004558b0032f1b
b1031c3e59b0004558b0072f1bb1071c3e59b0004558b0002f1bb1001c3e
59b0004558b01b2f1bb11b103e59b0004558b0152f1bb115103e59b00045
58b00c2f1bb10c103e59b201031b111239b2050715111239b00710b11001
b00a2b5821d81bf459b018d0303101173633321736333216171123113426
232206071323112623220711231101610772c6d95076d6b3af02f35a6853
691501f305be923df3043a7185a6a6c6c1fd3902c067605948fd1a02c8bf
77fcf0043a00>Roboto-Medium AddT42Char 
1 11042 82 <00010079000003f8044e00100054b20b111211123900b0004558b0032f1b
b1031c3e59b0004558b0002f1bb1001c3e59b0004558b00e2f1bb10e103e
59b0004558b0072f1bb107103e59b2010e03111239b00310b10b01b00a2b
5821d81bf45930310117363320131123113426232207112311015e0778c3
015206f359659348f3043a7d91fe7dfd3502bd676385fcfe043a>Roboto-Medium AddT42Char 
1 11188 83 <0002004fffec043d044e000f001a0045b20c1b1c111239b00c10b018d000
b0004558b0042f1bb1041c3e59b0004558b00c2f1bb10c103e59b11201b0
0a2b5821d81bf459b00410b11801b00a2b5821d81bf45930311334363633
320017171406062322003517141632363534262322064f7ee494db01110b
017be596e5feedf38af6898d79778c02279fff89fee6e939a0fc8a0131fe
09a7bdc0b9a4c0bd>Roboto-Medium AddT42Char 
1 11742 86 <0001007c000002b4044e000d0047b2090e0f11123900b0004558b0082f1b
b1081c3e59b0004558b00b2f1bb10b1c3e59b0004558b0052f1bb105103e
59b00b10b10201b00a2b5821d81bf459b2090b0511123930310126232207
11231133173633321702b33033a73af3e806589c3422035c0880fd1c043a
798d0e00>Roboto-Medium AddT42Char 
1 11866 87 <0001004bffec03ca044e0026006bb209272811123900b0004558b0092f1b
b1091c3e59b0004558b01c2f1bb11c103e59b2021c09111239b00210b016
d0b00910b11001b00a2b5821d81bf459b20d1610111239b40c0d1c0d025d
b01c10b12401b00a2b5821d81bf459b2212402111239b403211321025d30
310134262627263534363332161523342623220615141604161615140623
2226263533161633323602db6bf853b6ecb6c2eff3685650655e011ea34f
f2c485d074ec057863606401264144342858a78cbcc099465d4a3e383e3f
577a5792b560a861565d4900>Roboto-Medium AddT42Char 
1 12088 88 <00010008ffec0272054100140054b200151611123900b0004558b0132f1b
b1131c3e59b0004558b00d2f1bb10d103e59b01310b001d0b000d0b0002f
b00110b10401b00a2b5821d81bf459b00d10b10801b00a2b5821d81bf459
b00410b010d0303101113315231114163332371506232011112335331101
adbfbf313f2a2b534dfee8b2b20541fef9b4fda43e370abc1701350265b4
0107>Roboto-Medium AddT42Char 
1 12240 89 <00010077ffec03f7043a00100054b20a111211123900b0004558b0072f1b
b1071c3e59b0004558b00d2f1bb10d1c3e59b0004558b0022f1bb102103e
59b0004558b00f2f1bb10f103e59b200020d111239b00210b10a01b00a2b
5821d81bf45930312506232226351133111433323711331123030c6bc5b0
b5f3abb13ef3e56a7ecec302bdfd46ce7f0309fbc600>Roboto-Medium AddT42Char 
1 12780 93 <0001000cfe4b03d6043a000f0040b200101111123900b0004558b00f2f1b
b10f1c3e59b0004558b0052f1bb105123e59b200050f111239b00f10b001
d0b00510b10901b00a2b5821d81bf4593031011321010223222735173236
3737012101f7dc0103fe5263ed35402e5c5d1b23fe840106015c02defb22
feef12bc03434f5d0435>Roboto-Medium AddT42Char 
1 0 0 <000500640000032805b0000300060009000c000f006fb20c1011111239b0
0c10b000d0b00c10b006d0b00c10b009d0b00c10b00dd000b0004558b002
2f1bb102203e59b0004558b0002f1bb100103e59b2040200111239b20502
00111239b2070200111239b2080200111239b00adcb20c0200111239b20d
0200111239b00210b00edc30312121112103110101110103210135012103
28fd3c02c436feeefeba010ce40203fefe0102fdfd05b0faa40507fd7d02
77fb110278fd5e025e88025e>Roboto-Medium AddT42Char 
Roboto-Medium /CharStrings get begin
/space 4 def
/A 37 def
/C 39 def
/E 41 def
/a 69 def
/e 73 def
/f 74 def
/h 76 def
/i 77 def
/l 80 def
/m 81 def
/n 82 def
/o 83 def
/r 86 def
/s 87 def
/t 88 def
/u 89 def
/y 93 def
end
Roboto-Medium /Encoding get
dup 32 /space put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/FKJHMN+Roboto-Medium /Roboto-Medium findfont ct_VMDictPut/FKJHMN+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /.notdef /E 27{/.notdef}rp /a 3{/.notdef}rp /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMN+Roboto-Medium nfFKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4551 320.103 mo(Anthony Claret Eufemio)[7.70508 6.67383 3.99023 6.66211 6.83203 6.67383 5.8418 2.98828 7.83398 3.06445 6.49219 4.10742 6.43945 3.99023 2.98828 6.68555 6.66797 4.11328 6.43945 10.4414 3.06445 0 ]xsh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMM+Roboto-Light gcheck setglobal} if

1 0 4 <> FKJHMM+Roboto-Light AddT42Char 
1 1160 10 <0003006cffec04cf05c4001e00290035007bb22d3637111239b02d10b017
d0b02d10b020d000b0004558b0062f1bb1061e3e59b0004558b0132f1bb1
130e3e59b0004558b0182f1bb1180e3e59b20d0613111239b21506131112
39b21e0613111239b11f01b00a2b5821d81bf459b2240613111239b22c06
13111239b00610b13301b00a2b5821d81bf4593031012626353436333216
151407070136353314071723270606232226353436371332363701270706
1514160314173736363534262322060194574fb6998baca6a001905b6f80
c7907e4fcf73d0f47d9daa5bab44fe690e2ec4b431878340526c5a627403
1a69a55199b2a17c908b7cfe2e93baf8abe8924e58d5b26abd76fd414d47
01d80f23a096839f042c7aa6642e6e4a4e697e00>FKJHMM+Roboto-Light AddT42Char 
1 1494 12 <0001008cfe2a026d066000120010b208131411123900b0042fb00f2f3031
1334121237170e02021514121217072602028c70d87c1d4282663f5fa664
1d7fd86d024cda019b01554a512fb4f8fecbc4d1fe7efed94a4d4c015301
9700>FKJHMM+Roboto-Light AddT42Char 
1 1586 13 <00010021fe2a0202066000110010b207121311123900b0042fb00e2f3031
01140202072736121235340202273716121202026dd6811d62a76060a960
1d7ed670023ddcfe69feae4e4d4601260187e5cf0181012f454d4dfeaefe
6400>FKJHMM+Roboto-Light AddT42Char 
1 1780 15 <0001004b0092043104b6000b001b00b0092fb000d0b00910b10601b00a2b
5821d81bf459b003d03031012115211123112135211133027601bbfe4579
fe4e01b27902e470fe1e01e27001d200>FKJHMM+Roboto-Light AddT42Char 
1 1910 17 <000100310250021002b50003001200b0022fb10101b00a2b5821d81bf459
3031012135210210fe2101df02506500>FKJHMM+Roboto-Light AddT42Char 
1 1956 18 <00010091fff8013c009c0008001c00b0004558b0072f1bb1070e3e59b102
05b00a2b5821d81bf4593031373436321614062226912d502e2e502d4823
3131462d2d00>FKJHMM+Roboto-Light AddT42Char 
1 2068 20 <00020078ffec03f705c4000d001b0048b20a1c1d111239b00a10b011d000
b0004558b00a2f1bb10a1e3e59b0004558b0032f1bb1030e3e59b00a10b1
1101b00a2b5821d81bf459b00310b11801b00a2b5821d81bf45930310110
022322020311101233321213073402232206071114123332123703f7e2dc
d8e603e4dbd8e40478a3a5a2a402a9a1a0a501025ffeccfec10139012b01
050133013cfecffed706fa0100faf4fee2f9fef80102f900>FKJHMM+Roboto-Light AddT42Char 
1 2242 21 <000100b2000002b605b50006003a00b0004558b0052f1bb1051e3e59b000
4558b0002f1bb1000e3e59b2040005111239b0042fb10301b00a2b5821d8
1bf459b202030511123930312123110535253302b678fe7401f014052093
70b8>FKJHMM+Roboto-Light AddT42Char 
1 2334 22 <000100690000041905c400190050b2091a1b11123900b0004558b0112f1b
b1111e3e59b0004558b0002f1bb1000e3e59b11801b00a2b5821d81bf459
b002d0b2041100111239b01110b10901b00a2b5821d81bf459b216110011
123930312121350136363534262322061523343636333216151406070121
0419fc7001f37c60a28e93b5776fcd83c8e17fa0fe6a02fd5c02368fba58
8aa1bc967bca73d2b566f2b5fe35>FKJHMM+Roboto-Light AddT42Char 
1 2750 24 <000200430000044b05b0000a000e004a00b0004558b0092f1bb1091e3e59
b0004558b0042f1bb1040e3e59b2010904111239b0012fb10201b00a2b58
21d81bf459b006d0b00110b00bd0b208060b111239b20d09041112393031
0133152311231121350133012111070368e3e378fd5302a283fd6e021a35
01d565fe9001704403fcfc2503405c00>FKJHMM+Roboto-Light AddT42Char 
1 2886 25 <000100a8ffec041605b0001d0069b21a1e1f11123900b0004558b0012f1b
b1011e3e59b0004558b00d2f1bb10d0e3e59b00110b10301b00a2b5821d8
1bf459b207010d111239b0072fb2110d01111239b00d10b11401b00a2b58
21d81bf459b00710b11a01b00a2b5821d81bf459b21d010d111239303113
1321152103363332121514062322262733161633323635342623220607da
4702d8fd8f33759dc5eae4cfbeec117311a88f9c9fb29a557e4602ea02c6
6ffe1450ff00d5e6fed4bf9599c6b7a0ca2b3e00>FKJHMM+Roboto-Light AddT42Char 
1 3086 26 <00020082ffec040805bb001600230065b2032425111239b00310b017d000
b0004558b0002f1bb1001e3e59b0004558b00f2f1bb10f0e3e59b00010b1
0101b00a2b5821d81bf459b208000f111239b0082fb205080f111239b117
01b00a2b5821d81bf459b00f10b11e01b00a2b5821d81bf4593031011523
200003363633321215140606232200353510002503220607151416333236
353426034b0efefbfed4103cba73c0e36ac67fd1fefa01640147db72c521
c39c8cadad05bb69fecdfeef535bfef7d68ee47f012ff078018701ad04fd
9a876866bef0dea9acd0>FKJHMM+Roboto-Light AddT42Char 
1 3306 27 <0001004d0000040a05b00006003300b0004558b0052f1bb1051e3e59b000
4558b0012f1bb1010e3e59b00510b10301b00a2b5821d81bf459b2000305
111239303101012301213521040afd927d026afcc403bd056bfa95054a66
>FKJHMM+Roboto-Light AddT42Char 
1 3666 29 <00020065fff503ec05c4001700240061b21f2526111239b01f10b00bd000
b0004558b00b2f1bb10b1e3e59b0004558b0122f1bb1120e3e59b203120b
111239b0032fb01210b11401b00a2b5821d81bf459b00310b11801b00a2b
5821d81bf459b00b10b11f01b00a2b5821d81bf459303101060623222626
353436363332121115100021233733240025323637353426232206151416
037440be6f7cbe686fc782dbf4feb0fea716012a01050110fea978bf28b9
9d8eb6af02a25e6780e28690ec83fecdfee66cfe76fe7468040120c38f72
45def5e5aea7df00>FKJHMM+Roboto-Light AddT42Char 
1 4388 36 <00020071fe3b06e6058c003600420080b2244344111239b02410b040d000
b02b2fb0332fb0004558b0042f1bb1040e3e59b0004558b0092f1bb1090e
3e59b2073304111239b2103304111239b0102fb00910b13a03b00a2b5821
d81bf459b017d0b03310b11d02b00a2b5821d81bf459b02b10b12402b00a
2b5821d81bf459b01010b13f02b00a2b5821d81bf4593031010e02232226
2706232226373e0233321617030616333236371200212204020212043332
363717060623222402131212243332041201161633323713262322060206
da0562ad72617a146cbe8c8a120f77bf6d4d744d330a4f577b990913fea6
fea1d3feadc4189d013ddb5cb23c1f39cc68fafe98b30c0cdd0180f5ff01
62aafbbb0b5a4ab9582d435b6fa34c020193fb87665cc2f2cda3ff8f2b41
fdc67480f1ce01950199d3fe7efe08fe81ce2c23502633e101a7011b0116
01adebd5fe66fe01646dff020431b1fec900>FKJHMM+Roboto-Light AddT42Char 
1 5096 39 <00010083ffec04bf05c4001c0042b2031d1e11123900b0004558b00c2f1b
b10c1e3e59b0004558b0032f1bb1030e3e59b00c10b11201b00a2b5821d8
1bf459b00310b11901b00a2b5821d81bf459303101060423222602273534
1236333204172302212202111514123332363704bf19fee9e8a2f9880188
ffa6ea010f167c2efe9bc6ebe5c3c1c41701c6e6f4a20129bfbdc2012ca3
fddf0173fed8fefbb2fcfed4b9b9>FKJHMM+Roboto-Light AddT42Char 
1 5416 41 <000100b80000044205b0000b005600b0004558b0062f1bb1061e3e59b000
4558b0042f1bb1040e3e59b20b0604111239b00b2fb22f0b015db10001b0
0a2b5821d81bf459b00410b10201b00a2b5821d81bf459b00610b10801b0
0a2b5821d81bf459303101211121152111211521112103dcfd57030ffc76
0385fcf602a902bafdae6805b069fddb>FKJHMM+Roboto-Light AddT42Char 
1 5552 42 <000100b80000043e05b00009004400b0004558b0042f1bb1041e3e59b000
4558b0022f1bb1020e3e59b20904021112397cb0092f18b10001b00a2b58
21d81bf459b00410b10601b00a2b5821d81bf45930310121112311211521
112103dafd597b0386fcf502a702a8fd5805b069fdca>FKJHMM+Roboto-Light AddT42Char 
1 6518 50 <000100b8000004f405b00009004cb2010a0b11123900b0004558b0052f1b
b1051e3e59b0004558b0082f1bb1081e3e59b0004558b0002f1bb1000e3e
59b0004558b0032f1bb1030e3e59b2020500111239b20705001112393031
2123011123113301113304f47bfcbb7c7c03467a04defb2205b0fb2104df
>FKJHMM+Roboto-Light AddT42Char 
1 7172 54 <000200b5000004bb05b0000e00170063b2161819111239b01610b005d000
b0004558b0042f1bb1041e3e59b0004558b0022f1bb1020e3e59b0004558
b00d2f1bb10d0e3e59b2100402111239b0102fb10001b00a2b5821d81bf4
59b20b0004111239b00410b11601b00a2b5821d81bf45930310121112311
2132041514060701152301213236353426232102d8fe597c01d9e90106a4
8a016c83fcf901799bbcc4b1fea5025efda205b0e2cb8cd629fd950d02c7
b08c9aaa>FKJHMM+Roboto-Light AddT42Char 
1 7578 56 <000100340000049405b00007002f00b0004558b0062f1bb1061e3e59b000
4558b0022f1bb1020e3e59b00610b10001b00a2b5821d81bf459b004d030
3101211123112135210494fe0d7bfe0e04600547fab905476900>FKJHMM+Roboto-Light AddT42Char 
1 7664 57 <000100a2ffec04a305b00011003db205121311123900b0004558b0002f1b
b1001e3e59b0004558b0092f1bb1091e3e59b0004558b0052f1bb1050e3e
59b10e01b00a2b5821d81bf459303101110e022322242711331114162036
351104a30180e997e6feeb057ad20168d105b0fc1e93da75fbde03ebfc27
b8cbccb603da>FKJHMM+Roboto-Light AddT42Char 
1 8798 69 <00020064ffec03c7044e001e00290088b2172a2b111239b01710b020d000
b0004558b0172f1bb1171a3e59b0004558b0002f1bb1000e3e59b0004558
b0052f1bb1050e3e59b2021700111239b20c1700111239b00c2fb42f0c3f
0c025db01710b11001b00a2b5821d81bf459b213170c1112397cb0132f18
b00510b11f01b00a2b5821d81bf459b00c10b12301b00a2b5821d81bf459
303121262706062322263534243333353426232206152734363332161711
1417152532363735230606151416034712053fc36d9cc10107ebd98f897d
a478f0afb5d10321fe0878bd2bd6b3ca8733645259ae859eb87b7485805a
0181bdb5a2fe009d4e0c567461ee027f6f5b7800>FKJHMM+Roboto-Light AddT42Char 
1 9058 70 <0002009bffec04030600000f001b0066b2131c1d111239b01310b00cd000
b0082fb0004558b00c2f1bb10c1a3e59b0004558b0062f1bb1060e3e59b0
004558b0032f1bb1030e3e59b2050c06111239b20a0c06111239b00c10b1
1301b00a2b5821d81bf459b00310b11901b00a2b5821d81bf45930310114
02232227072311331136333212112734262322060711163332360403e0bd
e27405707772e0c0df78a69773a0295ae494a70212fdfed7a8940600fd9d
b1fedbfefb03d6e9716dfe18ccea>FKJHMM+Roboto-Light AddT42Char 
1 9252 71 <0001005effec03cc044e001d004db2101e1f11123900b0004558b0102f1b
b1101a3e59b0004558b0082f1bb1080e3e59b10001b00a2b5821d81bf459
b2030810111239b2141008111239b01010b11701b00a2b5821d81bf45930
3125323637330e0223220235353436363332161723262623220615151416
022c7da907730572bd6cd5f970d18cb2e7087308a77fa2b3b3518d7063a3
5c0128fa24a0f686d4ad7f9cead323cfe800>FKJHMM+Roboto-Light AddT42Char 
1 9420 72 <0002006cffec03d30600000f001a0063b2181b1c111239b01810b003d000
b0062fb0004558b0032f1bb1031a3e59b0004558b0082f1bb1080e3e59b0
004558b00c2f1bb10c0e3e59b2050308111239b20a0308111239b11301b0
0a2b5821d81bf459b00310b11801b00a2b5821d81bf45930311334123332
171133112327062322021117141633323711262322066ce1c1db73777005
73dfbbe579a697dd5d5ddb97a80227fc012bad025ffa0090a4012d010007
cfefc301fcd3ed00>FKJHMM+Roboto-Light AddT42Char 
1 9608 73 <0002005affec03d5044e0017001f0065b2092021111239b00910b018d000
b0004558b0092f1bb1091a3e59b0004558b0002f1bb1000e3e59b21c0900
111239b01c2fb10d01b00a2b5821d81bf459b00010b11201b00a2b5821d8
1bf459b2150900111239b00910b11801b00a2b5821d81bf4593031052226
263535343636333212151521151416333236371706012206072135262602
3f8adf7c79d87ec5e7fcfcd3a060933c4b84feef87b914028905a81488f3
972b9cfa8ffef3e94317b8f5464d39bf03fcc6a70d9cc400>FKJHMM+Roboto-Light AddT42Char 
1 9984 75 <0002006cfe5103d4044e001a00260086b2242728111239b02410b00bd000
b0004558b0032f1bb1031a3e59b0004558b0062f1bb1061a3e59b0004558
b00b2f1bb10b103e59b0004558b0172f1bb1170e3e59b2050317111239b2
0f0b17111239b00b10b11101b00a2b5821d81bf459b2150317111239b017
10b11e01b00a2b5821d81bf459b00310b12401b00a2b5821d81bf4593031
133412333217373311140623222627371633323637350623220235171416
3332371126262322066ce1c1dd730670eac871cd3b437faf96a80373dcbc
e479a697dd5c2a9e6f97a80227fe0129b09cfbdcd1f46554489cb19d88a0
012cff05cfefc601f7686ded>FKJHMM+Roboto-Light AddT42Char 
1 10380 77 <000200950000013a05c40003000c003fb2060d0e111239b00610b001d000
b0004558b0022f1bb1021a3e59b0004558b0002f1bb1000e3e59b00210b0
0bd0b00b2fb10605b00a2b5821d81bf45930312123113303343632161406
2226012278788d2c4c2d2d4c2c043a0139222f2f442e2e00>FKJHMM+Roboto-Light AddT42Char 
1 10784 80 <000100aa0000012206000003001d00b0004558b0022f1bb102203e59b000
4558b0002f1bb1000e3e5930312123113301227878060000>FKJHMM+Roboto-Light AddT42Char 
1 11066 82 <0001009c000003cc044e00130054b20d141511123900b0004558b0042f1b
b1041a3e59b0004558b0002f1bb1001a3e59b0004558b0082f1bb1080e3e
59b0004558b0112f1bb1110e3e59b2010408111239b00410b10d01b00a2b
5821d81bf45930310117363633321617112311262623220607112311010e
043db66eaeaa01770179856fab2977043ab96469c4c4fd3a02c7918e8b76
fd1b043a>FKJHMM+Roboto-Light AddT42Char 
1 11220 83 <0002005affec0420044e000f001e0045b2041f20111239b00410b013d000
b0004558b0042f1bb1041a3e59b0004558b00c2f1bb10c0e3e59b11301b0
0a2b5821d81bf459b00410b11b01b00a2b5821d81bf45930311334363633
32001515140606232200351714163332363535342626232206155a79dd8c
d8010c79dc8dd7fef378c9a3a2c95ca66ba0ca022d9cfa8bfed1fa199dfb
88012ffa09c2f9f9cc177cce71fbcb00>FKJHMM+Roboto-Light AddT42Char 
1 12142 88 <00010017ffec0249054f00150061b20e161711123900b0004558b0012f1b
b1011a3e59b0004558b0132f1bb1131a3e59b0004558b00d2f1bb10d0e3e
59b00110b000d0b0002fb00110b10301b00a2b5821d81bf459b00d10b108
01b00a2b5821d81bf459b00310b011d0b012d03031011133152311141633
323717062322263511233533110156e0e0414c1e43052f517b70c7c7054f
feeb62fd2f5a580a62118f8b02d262011500>FKJHMM+Roboto-Light AddT42Char 
1 12718 92 <00010030000003b2043a000b005300b0004558b0012f1bb1011a3e59b000
4558b00a2f1bb10a1a3e59b0004558b0042f1bb1040e3e59b0004558b007
2f1bb1070e3e59b2000a04111239b2060a04111239b2030006111239b209
0600111239303101013301012301012301013301f001248efe91017f8dfe
ccfecc8d017efe918d028301b7fdedfdd901cafe360227021300>FKJHMM+Roboto-Light AddT42Char 
FKJHMM+Roboto-Light /CharStrings get begin
/space 4 def
/ampersand 10 def
/parenleft 12 def
/parenright 13 def
/plus 15 def
/hyphen 17 def
/period 18 def
/zero 20 def
/one 21 def
/two 22 def
/four 24 def
/five 25 def
/six 26 def
/seven 27 def
/nine 29 def
/at 36 def
/C 39 def
/E 41 def
/F 42 def
/N 50 def
/R 54 def
/T 56 def
/U 57 def
/a 69 def
/b 70 def
/c 71 def
/d 72 def
/e 73 def
/g 75 def
/i 77 def
/l 80 def
/n 82 def
/o 83 def
/t 88 def
/x 92 def
end
FKJHMM+Roboto-Light /Encoding get
dup 32 /space put
dup 38 /ampersand put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 64 /at put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 78 /N put
dup 82 /R put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 116 /t put
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMM+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /seven /.notdef /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /.notdef /I 2{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /.notdef /T /U 2{/.notdef}rp /X 8{/.notdef}rp /a /b /c /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o 4{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]FKJHMM+Roboto-Light nfFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4551 331.103 mo(CO-FOUNDER & CTO)[7.11523 7.33398 4.20898 6.42041 7.33398 7.17773 7.59961 7.1582 6.4707 6.99854 3.86523 6.8418 3.86523 7.00195 6.58789 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf41.3398 354.872 mo(e)shFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf45.2363 354.872 mo( ace@digix.global      )[1.84229 3.88916 3.74609 3.75635 6.53174 4.0293 1.70898 4.02295 1.7085 3.54443 1.81152 4.02295 1.7085 4.06055 4.01953 3.88965 1.7085 1.84229 1.84229 1.8418 1.84229 1.84229 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf112.291 354.872 mo(m )[6.23096 0 ]xshFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf120.404 354.872 mo(+1 \(206\) 775 2594      )[4.09131 4.01904 1.84229 2.37207 4.01953 4.01904 4.01953 2.41992 1.8418 4.01953 4.01953 4.01953 1.8418 4.01953 4.01953 4.01953 4.01904 1.84229 1.84229 1.8418 1.84229 1.84229 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf190.08 354.872 mo(s )[3.75293 0 ]xshFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf195.716 354.872 mo(tonton.e)[2.3208 4.06006 3.98535 2.3208 4.06055 3.98486 1.81152 0 ]xsh546.25 386.34 mo
288.427 386.34 li
288.427 213.422 li
546.25 213.422 li
546.25 386.34 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.563 252.447 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.563 263.447 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.341 244.461 mo
365.54 244.461 li
365.54 265.766 li
319.341 265.766 li
cp
clp
319.341 250.937 mo
334.779 250.937 li
334.779 244.461 li
319.341 244.461 li
cp
f
336.61 244.46 mo
336.61 252.983 li
319.341 252.983 li
319.341 265.766 li
341.544 265.766 li
341.544 244.46 li
cp
324.275 257.468 mo
336.61 257.468 li
336.61 261.281 li
324.275 261.281 li
cp
f
343.338 244.46 mo
343.338 265.766 li
365.54 265.766 li
365.54 252.983 li
352.084 252.983 li
352.084 257.468 li
360.606 257.468 li
360.606 261.281 li
348.272 261.281 li
348.272 248.946 li
365.54 248.946 li
365.54 244.46 li
cp
f
grestore
FKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.341 320.103 mo(Anthony Claret Eufemio)[7.70508 6.67383 3.99023 6.66211 6.83203 6.67383 5.8418 2.98828 7.83398 3.06445 6.49219 4.10742 6.43945 3.99023 2.98828 6.68555 6.66797 4.11328 6.43945 10.4414 3.06445 0 ]xshFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.341 331.103 mo(CO-FOUNDER & CTO)[7.11523 7.33398 4.20898 6.42041 7.33398 7.17773 7.59961 7.1582 6.4707 6.99854 3.86523 6.8418 3.86523 7.00195 6.58789 0 ]xshFKJHMN+Roboto-Medium*1 [6.8 0 0 -6.8 0 0 ]msf319.225 354.722 mo(e)shFKJHMM+Roboto-Light*1 [6.8 0 0 -6.8 0 0 ]msf323.01 354.722 mo( ace@digix.global      )[1.78955 3.77832 3.63916 3.64844 6.34521 3.91406 1.66016 3.90771 1.66016 3.44287 1.75977 3.90771 1.66016 3.94434 3.90479 3.77832 1.66016 1.78955 1.78906 1.78955 1.78906 1.78955 0 ]xshFKJHMN+Roboto-Medium*1 [6.8 0 0 -6.8 0 0 ]msf388.147 354.722 mo(m )[6.05322 0 ]xshFKJHMM+Roboto-Light*1 [6.8 0 0 -6.8 0 0 ]msf396.029 354.722 mo(+1 \(206\) 775 2594      )[3.97461 3.9043 1.78955 2.30371 3.90479 3.9043 3.90479 2.35059 1.78955 3.9043 3.90479 3.9043 1.78955 3.9043 3.90479 3.9043 3.90479 1.78955 1.78906 1.78955 1.78906 1.78955 0 ]xshFKJHMN+Roboto-Medium*1 [6.8 0 0 -6.8 0 0 ]msf463.712 354.722 mo(s )[3.646 0 ]xshFKJHMM+Roboto-Light*1 [6.8 0 0 -6.8 0 0 ]msf469.188 354.722 mo(tonton.e)[2.25439 3.94434 3.87158 2.25391 3.94482 3.87109 1.75977 0 ]xsh268.364 579.257 mo
10.5416 579.257 li
10.5416 406.34 li
268.364 406.34 li
268.364 579.257 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6777 445.365 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6777 456.365 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4554 437.379 mo
87.6551 437.379 li
87.6551 458.684 li
41.4554 458.684 li
cp
clp
41.4554 443.855 mo
56.894 443.855 li
56.894 437.379 li
41.4554 437.379 li
cp
.012 .144 .998 0 cmyk
f
58.7243 437.378 mo
58.7243 445.901 li
41.4555 445.901 li
41.4555 458.684 li
63.6583 458.684 li
63.6583 437.378 li
cp
46.3893 450.386 mo
58.7243 450.386 li
58.7243 454.199 li
46.3893 454.199 li
cp
.949 .859 .441 .484 cmyk
f
65.4524 437.378 mo
65.4524 458.684 li
87.6551 458.684 li
87.6551 445.901 li
74.1989 445.901 li
74.1989 450.386 li
82.721 450.386 li
82.721 454.199 li
70.3863 454.199 li
70.3863 441.864 li
87.6551 441.864 li
87.6551 437.378 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMN+Roboto-Medium gcheck setglobal} if
1 6128 47 <000100940000051805b0000c005300b0004558b0042f1bb104203e59b000
4558b0082f1bb108203e59b0004558b0022f1bb102103e59b0004558b00b
2f1bb10b103e59b2000402111239b46a007a00025db2060402111239b465
067506025d3031010711231133113701210101210236a5fdfd8c01aa0132
fde3023cfed40275affe3a05b0fd55ad01fefd7bfcd5>FKJHMN+Roboto-Medium AddT42Char 
1 9986 75 <00020052fe56040c044e001900240086b2222526111239b02210b00bd000
b0004558b0032f1bb1031c3e59b0004558b0062f1bb1061c3e59b0004558
b00b2f1bb10b123e59b0004558b0172f1bb117103e59b2050317111239b0
0b10b11101b00a2b5821d81bf459b20f1117111239b2150317111239b017
10b11d01b00a2b5821d81bf459b00310b12201b00a2b5821d81bf4593031
133412333217373311140423222627371633323635350623220237141633
3237112623220652edc4b96a0bdbfef7e177e33b7370a4798c69afbef1f2
85769347459378850225fc012d816dfbe7d5f663509285837f4975012ef6
a3bb7e01dc7bbe00>FKJHMN+Roboto-Medium AddT42Char 
FKJHMN+Roboto-Medium /CharStrings get begin
/K 47 def
/g 75 def
end
FKJHMN+Roboto-Medium /Encoding get
dup 75 /K put
dup 103 /g put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMN+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /.notdef /E 5{/.notdef}rp /K 21{/.notdef}rp /a 3{/.notdef}rp /e /f /g /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMN+Roboto-Medium nfFKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4551 513.021 mo(KC Chng)[7.38281 7.83398 2.98828 7.83398 6.66211 6.67383 0 ]xsh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMM+Roboto-Light gcheck setglobal} if
1 10236 76 <0001009c000003cc06000013004ab20c141511123900b0122fb0004558b0
032f1bb1031a3e59b0004558b0072f1bb1070e3e59b0004558b0102f1bb1
100e3e59b2000307111239b00310b10c01b00a2b5821d81bf45930310136
36333216171123112626232206071123113301133bb86daeaa0177017985
6fab2977770383616ac4c4fd3a02c7918e8b76fd1b060000>FKJHMM+Roboto-Light AddT42Char 
1 10646 79 <0001009c000003e20600000c005100b0004558b0042f1bb104203e59b000
4558b0082f1bb1081a3e59b0004558b0022f1bb1020e3e59b0004558b00b
2f1bb10b0e3e59b20a0208111239b00a10b000d0b2060802111239b00610
b001d0303101071123113311370133010123019d89787871019e97fe3501
f38f022184fe630600fc297a0197fe38fd8e>FKJHMM+Roboto-Light AddT42Char 
FKJHMM+Roboto-Light /CharStrings get begin
/h 76 def
/k 79 def
end
FKJHMM+Roboto-Light /Encoding get
dup 104 /h put
dup 107 /k put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMM+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /seven /.notdef /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /.notdef /I 2{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /.notdef /T /U 2{/.notdef}rp /X 8{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /.notdef /k /l /.notdef /n /o 4{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]FKJHMM+Roboto-Light nfFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4551 524.021 mo(CO-FOUNDER & CEO)[7.11523 7.33398 4.20898 6.42041 7.33398 7.17773 7.59961 7.1582 6.4707 6.99854 3.86523 6.8418 3.86523 7.11523 6.4707 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf41.3398 547.79 mo(e)shFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf45.2363 547.79 mo( kcchng@digix.global      )[1.84229 3.49951 3.74609 3.74609 3.98193 3.98486 4.02295 6.53174 4.0293 1.70898 4.02295 1.70898 3.54395 1.81152 4.02295 1.70898 4.06006 4.01953 3.88965 1.7085 1.84229 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf123.88 547.79 mo(m )[6.23096 0 ]xshFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf131.994 547.79 mo(+65 9150 2066      )[4.09131 4.01904 4.01953 1.84229 4.01953 4.01904 4.01953 4.01953 1.8418 4.01953 4.01953 4.01953 4.01904 1.84229 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf191.017 547.79 mo(s )[3.75293 0 ]xshFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf196.652 547.79 mo(kc.chng)[3.5 3.74561 1.81152 3.74609 3.98193 3.98486 0 ]xsh546.25 579.257 mo
288.427 579.257 li
288.427 406.34 li
546.25 406.34 li
546.25 579.257 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.563 445.365 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.563 456.365 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.341 437.379 mo
365.54 437.379 li
365.54 458.684 li
319.341 458.684 li
cp
clp
319.341 443.855 mo
334.779 443.855 li
334.779 437.379 li
319.341 437.379 li
cp
f
336.61 437.378 mo
336.61 445.901 li
319.341 445.901 li
319.341 458.684 li
341.544 458.684 li
341.544 437.378 li
cp
324.275 450.386 mo
336.61 450.386 li
336.61 454.199 li
324.275 454.199 li
cp
f
343.338 437.378 mo
343.338 458.684 li
365.54 458.684 li
365.54 445.901 li
352.084 445.901 li
352.084 450.386 li
360.606 450.386 li
360.606 454.199 li
348.272 454.199 li
348.272 441.864 li
365.54 441.864 li
365.54 437.378 li
cp
f
grestore
FKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.341 513.021 mo(KC Chng)[7.38281 7.83398 2.98828 7.83398 6.66211 6.67383 0 ]xshFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.341 524.021 mo(CO-FOUNDER & CEO)[7.11523 7.33398 4.20898 6.42041 7.33398 7.17773 7.59961 7.1582 6.4707 6.99854 3.86523 6.8418 3.86523 7.11523 6.4707 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf319.225 547.79 mo(e)shFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf323.122 547.79 mo( kcchng@digix.global      )[1.84229 3.49951 3.74609 3.74609 3.98193 3.98486 4.02295 6.53174 4.0293 1.70898 4.02295 1.70898 3.54395 1.81152 4.02295 1.70898 4.06006 4.01953 3.88965 1.7085 1.84229 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf401.766 547.79 mo(m )[6.23096 0 ]xshFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf409.879 547.79 mo(+65 9150 2066      )[4.09131 4.01904 4.01953 1.84229 4.01953 4.01904 4.01953 4.01953 1.8418 4.01953 4.01953 4.01953 4.01904 1.84229 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf468.902 547.79 mo(s )[3.75293 0 ]xshFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf474.538 547.79 mo(kc.chng)[3.5 3.74561 1.81152 3.74609 3.98193 3.98486 0 ]xsh268.364 772.175 mo
10.5416 772.175 li
10.5416 599.257 li
268.364 599.257 li
268.364 772.175 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6777 638.283 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6777 649.283 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4554 630.296 mo
87.6551 630.296 li
87.6551 651.602 li
41.4554 651.602 li
cp
clp
41.4554 636.773 mo
56.894 636.773 li
56.894 630.296 li
41.4554 630.296 li
cp
.012 .144 .998 0 cmyk
f
58.7243 630.296 mo
58.7243 638.819 li
41.4555 638.819 li
41.4555 651.602 li
63.6583 651.602 li
63.6583 630.296 li
cp
46.3893 643.304 mo
58.7243 643.304 li
58.7243 647.117 li
46.3893 647.117 li
cp
.949 .859 .441 .484 cmyk
f
65.4524 630.296 mo
65.4524 651.602 li
87.6551 651.602 li
87.6551 638.819 li
74.1989 638.819 li
74.1989 643.304 li
82.721 643.304 li
82.721 647.117 li
70.3863 647.117 li
70.3863 634.782 li
87.6551 634.782 li
87.6551 630.296 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMN+Roboto-Medium gcheck setglobal} if
1 5262 40 <00020094000004d205b0000b00150048b2021617111239b00210b015d000
b0004558b0012f1bb101203e59b0004558b0002f1bb100103e59b00110b1
0c01b00a2b5821d81bf459b00010b10d01b00a2b5821d81bf45930313311
21320412151514020423031133323637353426239401aec1012ba4a5fecf
c5a6a5c7d502cec405b0acfec4cc49cffec6aa04e4fbe6f9e951edfa>FKJHMN+Roboto-Medium AddT42Char 
1 7348 55 <0001004affec048a05c400270066b211282911123900b0004558b0092f1b
b109203e59b0004558b01d2f1bb11d103e59b2021d09111239b20e091d11
1239b00910b11101b00a2b5821d81bf459b00210b11701b00a2b5821d81b
f459b2221d09111239b01d10b12501b00a2b5821d81bf459303101342624
272635342433321616152334262322061514160416161514042322242635
331416333236038d87fea068c7011fe598ee88fc8f857c89940154ce60fe
e9ef9efef793fda4998485017760686a417dc9b0e470cf7e72816a5f506b
6581a770b6d775ce897c886b>FKJHMN+Roboto-Medium AddT42Char 
1 10478 78 <0002ffb5fe4b018505d5000c0016004bb2031718111239b00310b010d000
b0004558b00c2f1bb10c1c3e59b0004558b0042f1bb104123e59b10901b0
0a2b5821d81bf459b00c10b015d0b0152fb10f0db00a2b5821d81bf45930
310111140623222735163332371103343632161514062226017aa59f433e
2630790315478448488447043afb66a6af11c0098404a30119384a4a3837
4949>FKJHMN+Roboto-Medium AddT42Char 
FKJHMN+Roboto-Medium /CharStrings get begin
/D 40 def
/S 55 def
/j 78 def
end
FKJHMN+Roboto-Medium /Encoding get
dup 68 /D put
dup 83 /S put
dup 106 /j put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMN+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /D /E 5{/.notdef}rp /K 7{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp /e /f /g /h /i /j /.notdef /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMN+Roboto-Medium nfFKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4551 705.938 mo(Shaun Djie)sh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMM+Roboto-Light gcheck setglobal} if
1 3396 28 <0003006affec040905c400160020002c0083b2242d2e111239b02410b009
d0b02410b01ed000b0004558b0142f1bb1141e3e59b0004558b0092f1bb1
090e3e59b22a0914111239b02a2fb25f2a015db22f2a015db44f2a5f2a02
71b11a01b00a2b5821d81bf459b2032a1a111239b20f1a2a111239b00910
b11e01b00a2b5821d81bf459b01410b12401b00a2b5821d81bf459303101
140607161615140623222635343637262635343620160334262006101633
323603342623220615141633323603e3846c7e98fed1d3fd927f6c80e901
80eb52c2fed2c0ba9f9bbc26ad8688a9a98987ab043971b32a2bc07ebbdb
dabc7cc22b2ab371b5d6d8fc9588afacfeeaa5a403457da7a183809c9d00
>FKJHMM+Roboto-Light AddT42Char 
1 10494 78 <0002ff98fe4b013505c4000c0016004bb20d1718111239b00d10b000d000
b0004558b00c2f1bb10c1a3e59b0004558b0042f1bb104103e59b10901b0
0a2b5821d81bf459b00c10b013d0b0132fb10d05b00a2b5821d81bf45930
310111140623222737163332351113321614062322263436011d908c3633
022c2eb23c272c2c27262b2b043afb45969e13630dcd04b9018a2f442e2e
442f>FKJHMM+Roboto-Light AddT42Char 
1 11920 87 <00010065ffec039c044e0025006db209262711123900b0004558b0092f1b
b1091a3e59b0004558b01c2f1bb11c0e3e59b2021c09111239b20d091c11
1239b42b0d3b0d025db00910b11001b00a2b5821d81bf459b00210b11601
b00a2b5821d81bf459b2201c09111239b01c10b12301b00a2b5821d81bf4
593031013426242626353436333216152334262322061514160416161514
062322263533161633323603248ffee09f4dd6a7b5db789f79768f77013b
9d4cddb2bdeb7807a3867d9a0113596c3d4f725180a7b3905f7e69545159
4a54765489a4b78c69756e00>FKJHMM+Roboto-Light AddT42Char 
1 12310 89 <00010098ffec03ca043a00100051b20a111211123900b0004558b0062f1b
b1061a3e59b0004558b00d2f1bb10d1a3e59b0004558b00f2f1bb10f0e3e
59b0004558b0022f1bb1020e3e59b2000d0f111239b10a01b00a2b5821d8
1bf4593031250623222627113311103320371133112303546cedadb40277
fa0104457874899dc9c502c0fd4ffecbd7030ffbc600>FKJHMM+Roboto-Light AddT42Char 
FKJHMM+Roboto-Light /CharStrings get begin
/eight 28 def
/j 78 def
/s 87 def
/u 89 def
end
FKJHMM+Roboto-Light /Encoding get
dup 56 /eight put
dup 106 /j put
dup 115 /s put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMM+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /seven /eight /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /.notdef /I 2{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /.notdef /T /U 2{/.notdef}rp /X 8{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /j /k /l /.notdef /n /o 3{/.notdef}rp /s /t /u 2{/.notdef}rp /x 135{/.notdef}rp]FKJHMM+Roboto-Light nfFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4551 716.938 mo(CO-FOUNDER & COO)[7.11523 7.33398 4.20898 6.42041 7.33398 7.17773 7.59961 7.1582 6.4707 6.99854 3.86523 6.8418 3.86523 7.11523 7.33398 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf41.3398 740.708 mo(e)shFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf45.2363 740.708 mo( shaundjie@digix.global      )[1.84229 3.68408 3.98193 3.88965 3.98535 3.98486 4.02979 1.73633 1.7085 3.75635 6.53174 4.02979 1.7085 4.02295 1.70898 3.54443 1.81104 4.02295 1.70898 4.06006 4.01953 3.88965 1.70898 1.8418 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf131.656 740.708 mo(m )[6.23096 0 ]xshFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf139.77 740.708 mo(+65 8112 2578      )[4.09131 4.01904 4.01953 1.84229 4.01953 4.01904 4.01953 4.01953 1.8418 4.01953 4.01953 4.01953 4.01904 1.84229 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf198.792 740.708 mo(s )[3.75293 0 ]xshFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf204.428 740.708 mo(shaun.djie)[3.68457 3.98145 3.88965 3.98535 3.98535 1.81104 4.02979 1.73633 1.7085 0 ]xsh546.25 772.175 mo
288.427 772.175 li
288.427 599.257 li
546.25 599.257 li
546.25 772.175 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.563 638.283 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.563 649.283 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.341 630.296 mo
365.54 630.296 li
365.54 651.602 li
319.341 651.602 li
cp
clp
319.341 636.773 mo
334.779 636.773 li
334.779 630.296 li
319.341 630.296 li
cp
f
336.61 630.296 mo
336.61 638.819 li
319.341 638.819 li
319.341 651.602 li
341.544 651.602 li
341.544 630.296 li
cp
324.275 643.304 mo
336.61 643.304 li
336.61 647.117 li
324.275 647.117 li
cp
f
343.338 630.296 mo
343.338 651.602 li
365.54 651.602 li
365.54 638.819 li
352.084 638.819 li
352.084 643.304 li
360.606 643.304 li
360.606 647.117 li
348.272 647.117 li
348.272 634.782 li
365.54 634.782 li
365.54 630.296 li
cp
f
grestore
FKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.341 705.938 mo(Shaun Djie)shFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.341 716.938 mo(CO-FOUNDER & COO)[7.11523 7.33398 4.20898 6.42041 7.33398 7.17773 7.59961 7.1582 6.4707 6.99854 3.86523 6.8418 3.86523 7.11523 7.33398 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf319.225 740.708 mo(e)shFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf323.122 740.708 mo( shaundjie@digix.global      )[1.84229 3.68408 3.98193 3.88965 3.98535 3.98486 4.02979 1.73633 1.7085 3.75635 6.53174 4.02979 1.7085 4.02295 1.70898 3.54443 1.81104 4.02295 1.70898 4.06006 4.01953 3.88965 1.70898 1.8418 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf409.541 740.708 mo(m )[6.23096 0 ]xshFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf417.655 740.708 mo(+65 8112 2578      )[4.09131 4.01904 4.01953 1.84229 4.01953 4.01904 4.01953 4.01953 1.8418 4.01953 4.01953 4.01953 4.01904 1.84229 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMN+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf476.677 740.708 mo(s )[3.75293 0 ]xshFKJHMM+Roboto-Light*1 [7 0 0 -7 0 0 ]msf482.313 740.708 mo(shaun.djie)[3.68457 3.98145 3.88965 3.98535 3.98535 1.81104 4.02979 1.73633 1.7085 0 ]xsh268.327 1158.01 mo
10.504 1158.01 li
10.504 985.093 li
268.327 985.093 li
268.327 1158.01 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6396 1024.12 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6396 1035.12 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4176 1016.13 mo
87.6173 1016.13 li
87.6173 1037.44 li
41.4176 1037.44 li
cp
clp
41.4176 1022.61 mo
56.8561 1022.61 li
56.8561 1016.13 li
41.4176 1016.13 li
cp
.012 .144 .998 0 cmyk
f
58.6865 1016.13 mo
58.6865 1024.65 li
41.4177 1024.65 li
41.4177 1037.44 li
63.6204 1037.44 li
63.6204 1016.13 li
cp
46.3514 1029.14 mo
58.6865 1029.14 li
58.6865 1032.95 li
46.3514 1032.95 li
cp
.949 .859 .441 .484 cmyk
f
65.4145 1016.13 mo
65.4145 1037.44 li
87.6173 1037.44 li
87.6173 1024.65 li
74.1611 1024.65 li
74.1611 1029.14 li
82.6831 1029.14 li
82.6831 1032.95 li
70.3485 1032.95 li
70.3485 1020.62 li
87.6173 1020.62 li
87.6173 1016.13 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMN+Roboto-Medium gcheck setglobal} if
1 5846 44 <000100940000051805b0000b004d00b0004558b0062f1bb106203e59b000
4558b00a2f1bb10a203e59b0004558b0002f1bb100103e59b0004558b004
2f1bb104103e59b2090600111239b0092fb10201b00a2b5821d81bf45930
312123112111231133112111330518fcfd75fdfd028bfc0287fd7905b0fd
a2025e00>FKJHMN+Roboto-Medium AddT42Char 
1 9246 71 <0001004fffec03f5044e001c004db2001d1e11123900b0004558b00f2f1b
b10f1c3e59b0004558b0082f1bb108103e59b10001b00a2b5821d81bf459
b203080f111239b2130f08111239b00f10b11601b00a2b5821d81bf45930
3125323637330e0223220011353400333216172326262322060715141602
395b7804e50476ca75e3fef60108e4c1f306e504775c7680017fae6a4e65
af660126010319f70129e1b75d78abae27b0ad00>FKJHMN+Roboto-Medium AddT42Char 
FKJHMN+Roboto-Medium /CharStrings get begin
/H 44 def
/c 71 def
end
FKJHMN+Roboto-Medium /Encoding get
dup 72 /H put
dup 99 /c put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMN+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /D /E 2{/.notdef}rp /H 2{/.notdef}rp /K 7{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e /f /g /h /i /j /.notdef /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMN+Roboto-Medium nfFKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4175 1091.77 mo(Chris Hitchcott)sh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMM+Roboto-Light gcheck setglobal} if
1 2498 23 <00010062ffec03f405c4002b0081b21c2c2d11123900b0004558b0102f1b
b1101e3e59b0004558b01c2f1bb11c0e3e59b2011c10111239b0012fb25f
01015db22f01015db44f015f010271b01010b10801b00a2b5821d81bf459
b20b101c111239b00110b12a01b00a2b5821d81bf459b2162a01111239b2
211c10111239b01c10b12401b00a2b5821d81bf459303101333236363534
262322061523343636333216151406071616151406232226263533141633
3236353426232301937c679a519e948cb37872ca7bc6e48574888cf4cc82
d97778c2989badbbb6780319497f538c9ea58771bb66d8bc69b12c26b980
bbe468bb7c8baf9f97929a00>FKJHMM+Roboto-Light AddT42Char 
1 6820 52 <000200b80000049205b0000a0013004fb20a1415111239b00a10b00cd000
b0004558b0032f1bb1031e3e59b0004558b0012f1bb1010e3e59b20b0301
111239b00b2fb10001b00a2b5821d81bf459b00310b11201b00a2b5821d8
1bf4593031011123112132041514062325213236353426272101337b01f0
e30107fdf0fe8e0175b3bcbbacfe830251fdaf05b0e8cbcddf68aa9897b3
0200>FKJHMM+Roboto-Light AddT42Char 
1 7790 58 <0001001f000004d105b00008003100b0004558b0032f1bb1031e3e59b000
4558b0072f1bb1071e3e59b0004558b0052f1bb1050e3e59b20103051112
393031251737013301230133026f080901ca87fde276fde286b41f1f04fc
fa5005b0>FKJHMM+Roboto-Light AddT42Char 
1 11794 86 <0001009c00000293044e000e0047b20b0f1011123900b0004558b00c2f1b
b10c1a3e59b0004558b0082f1bb1081a3e59b0004558b0062f1bb1060e3e
59b00c10b10207b00a2b5821d81bf459b20a0c0611123930310126232206
071123113317363332170290262b709b217775025fd2321d03d4077d77fd
19043aacc00d>FKJHMM+Roboto-Light AddT42Char 
1 13240 96 <000100b2fef2011705b00003001300b0002fb0004558b0022f1bb1021e3e
5930310123113301176565fef206be00>FKJHMM+Roboto-Light AddT42Char 
FKJHMM+Roboto-Light /CharStrings get begin
/three 23 def
/P 52 def
/V 58 def
/r 86 def
/bar 96 def
end
FKJHMM+Roboto-Light /Encoding get
dup 51 /three put
dup 80 /P put
dup 86 /V put
dup 114 /r put
dup 124 /bar put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMM+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /.notdef /I 2{/.notdef}rp /L /.notdef /N /O /P /.notdef /R /.notdef /T /U /V /.notdef /X 8{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /j /k /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u 2{/.notdef}rp /x 3{/.notdef}rp /bar 131{/.notdef}rp]FKJHMM+Roboto-Light nfFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4175 1102.77 mo(CORE DEVELOPER)[7.11523 7.33398 6.99805 6.47119 3.86523 7.1582 6.4707 6.85352 6.4707 5.88135 7.33398 6.8457 6.4707 0 ]xsh41.3018 1127.86 mo(chris@digix.global   |   +65 8823 5363)[4.28125 4.55029 2.85156 1.95313 4.21045 7.46484 4.60547 1.95264 4.59766 1.95313 4.05029 2.07031 4.59766 1.95313 4.64014 4.59375 4.44531 1.95264 2.10547 2.10547 2.10498 1.92578 2.10547 2.10498 2.10547 4.67578 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 0 ]xsh546.337 1158.01 mo
288.514 1158.01 li
288.514 985.093 li
546.337 985.093 li
546.337 1158.01 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.65 1024.12 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.65 1035.12 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.428 1016.13 mo
365.628 1016.13 li
365.628 1037.44 li
319.428 1037.44 li
cp
clp
319.428 1022.61 mo
334.867 1022.61 li
334.867 1016.13 li
319.428 1016.13 li
cp
f
336.697 1016.13 mo
336.697 1024.65 li
319.428 1024.65 li
319.428 1037.44 li
341.631 1037.44 li
341.631 1016.13 li
cp
324.362 1029.14 mo
336.697 1029.14 li
336.697 1032.95 li
324.362 1032.95 li
cp
f
343.425 1016.13 mo
343.425 1037.44 li
365.628 1037.44 li
365.628 1024.65 li
352.172 1024.65 li
352.172 1029.14 li
360.694 1029.14 li
360.694 1032.95 li
348.359 1032.95 li
348.359 1020.62 li
365.628 1020.62 li
365.628 1016.13 li
cp
f
grestore
FKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.428 1091.77 mo(Chris Hitchcott)shFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.428 1102.77 mo(CORE DEVELOPER)[7.11523 7.33398 6.99805 6.47119 3.86523 7.1582 6.4707 6.85352 6.4707 5.88135 7.33398 6.8457 6.4707 0 ]xsh319.312 1127.86 mo(chris@digix.global   |   +65 8823 5363)[4.28125 4.55029 2.85156 1.95313 4.21045 7.46484 4.60547 1.95264 4.59766 1.95313 4.05029 2.07031 4.59766 1.95313 4.64014 4.59375 4.44531 1.95264 2.10547 2.10547 2.10498 1.92578 2.10547 2.10498 2.10547 4.67578 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 0 ]xsh268.327 965.967 mo
10.504 965.967 li
10.504 793.049 li
268.327 793.049 li
268.327 965.967 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6396 832.074 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6396 843.074 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4176 824.088 mo
87.6173 824.088 li
87.6173 845.393 li
41.4176 845.393 li
cp
clp
41.4176 830.564 mo
56.8561 830.564 li
56.8561 824.088 li
41.4176 824.088 li
cp
.012 .144 .998 0 cmyk
f
58.6865 824.088 mo
58.6865 832.61 li
41.4177 832.61 li
41.4177 845.393 li
63.6204 845.393 li
63.6204 824.088 li
cp
46.3514 837.095 mo
58.6865 837.095 li
58.6865 840.908 li
46.3514 840.908 li
cp
.949 .859 .441 .484 cmyk
f
65.4145 824.088 mo
65.4145 845.393 li
87.6173 845.393 li
87.6173 832.61 li
74.1611 832.61 li
74.1611 837.095 li
82.6831 837.095 li
82.6831 840.908 li
70.3485 840.908 li
70.3485 828.573 li
87.6173 828.573 li
87.6173 824.088 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMN+Roboto-Medium gcheck setglobal} if
1 7570 56 <0001002d000004b005b00007002f00b0004558b0062f1bb106203e59b000
4558b0022f1bb102103e59b00610b10001b00a2b5821d81bf459b004d030
31012111231121352104b0fe3afbfe3e048304e4fb1c04e4cc00>FKJHMN+Roboto-Medium AddT42Char 
FKJHMN+Roboto-Medium /CharStrings get begin
/T 56 def
end
FKJHMN+Roboto-Medium /Encoding get
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMN+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /D /E 2{/.notdef}rp /H 2{/.notdef}rp /K 7{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /.notdef /e /f /g /h /i /j /.notdef /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMN+Roboto-Medium nfFKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4175 899.73 mo(Teo Hye Chng)[6.76172 6.43945 6.83203 2.98828 8.52539 5.76563 6.43945 2.98828 7.83398 6.66211 6.67383 0 ]xsh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMM+Roboto-Light gcheck setglobal} if
1 5874 44 <000100b8000004ef05b0000b005200b0004558b0062f1bb1061e3e59b000
4558b00a2f1bb10a1e3e59b0004558b0002f1bb1000e3e59b0004558b004
2f1bb1040e3e59b2090600111239b0092fb22f09015db10201b00a2b5821
d81bf459303121231121112311331121113304ef7cfcc07b7b03407c02ba
fd4605b0fd72028e>FKJHMM+Roboto-Light AddT42Char 
1 6362 49 <000100b80000063305b0000e005900b0004558b0002f1bb1001e3e59b000
4558b0022f1bb1021e3e59b0004558b0042f1bb1040e3e59b0004558b008
2f1bb1080e3e59b0004558b00c2f1bb10c0e3e59b2010004111239b20700
04111239b20a000411123930310902331123111301230113112311015b02
19021ba47b0afde25ffde40a7b05b0fafb0505fa50027a028afafc04fffd
7ffd8205b000>FKJHMM+Roboto-Light AddT42Char 
FKJHMM+Roboto-Light /CharStrings get begin
/H 44 def
/M 49 def
end
FKJHMM+Roboto-Light /Encoding get
dup 72 /H put
dup 77 /M put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMM+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /H /I 2{/.notdef}rp /L /M /N /O /P /.notdef /R /.notdef /T /U /V /.notdef /X 8{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /j /k /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u 2{/.notdef}rp /x 3{/.notdef}rp /bar 131{/.notdef}rp]FKJHMM+Roboto-Light nfFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4175 910.73 mo(CHAIRMAN)[7.11523 7.65039 6.91602 4.04932 6.99805 8.91211 6.91602 0 ]xsh41.3018 935.816 mo(chngth@digix.global   |   +65 9817 1926)[4.28125 4.55029 4.55469 4.59766 2.72998 4.55078 7.46484 4.60498 1.95313 4.59766 1.95264 4.05078 2.07031 4.59766 1.95264 4.64063 4.59375 4.44482 1.95313 2.10547 2.10498 2.10547 1.92578 2.10498 2.10547 2.10547 4.67529 4.59375 4.59375 2.10498 4.59375 4.59375 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 0 ]xsh546.337 965.967 mo
288.514 965.967 li
288.514 793.049 li
546.337 793.049 li
546.337 965.967 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.65 832.074 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.65 843.074 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.428 824.088 mo
365.628 824.088 li
365.628 845.393 li
319.428 845.393 li
cp
clp
319.428 830.564 mo
334.867 830.564 li
334.867 824.088 li
319.428 824.088 li
cp
f
336.697 824.088 mo
336.697 832.61 li
319.428 832.61 li
319.428 845.393 li
341.631 845.393 li
341.631 824.088 li
cp
324.362 837.095 mo
336.697 837.095 li
336.697 840.908 li
324.362 840.908 li
cp
f
343.425 824.088 mo
343.425 845.393 li
365.628 845.393 li
365.628 832.61 li
352.172 832.61 li
352.172 837.095 li
360.694 837.095 li
360.694 840.908 li
348.359 840.908 li
348.359 828.573 li
365.628 828.573 li
365.628 824.088 li
cp
f
grestore
FKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.428 899.73 mo(Teo Hye Chng)[6.76172 6.43945 6.83203 2.98828 8.52539 5.76563 6.43945 2.98828 7.83398 6.66211 6.67383 0 ]xshFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.428 910.73 mo(CHAIRMAN)[7.11523 7.65039 6.91602 4.04932 6.99805 8.91211 6.91602 0 ]xsh319.312 935.816 mo(chngth@digix.global   |   +65 9817 1926)[4.28125 4.55029 4.55469 4.59766 2.72998 4.55078 7.46484 4.60498 1.95313 4.59766 1.95264 4.05078 2.07031 4.59766 1.95264 4.64063 4.59375 4.44482 1.95313 2.10547 2.10498 2.10547 1.92578 2.10498 2.10547 2.10547 4.67529 4.59375 4.59375 2.10498 4.59375 4.59375 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 0 ]xsh268.327 1350.93 mo
10.504 1350.93 li
10.504 1178.01 li
268.327 1178.01 li
268.327 1350.93 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6396 1217.04 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6396 1228.04 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4176 1209.05 mo
87.6173 1209.05 li
87.6173 1230.36 li
41.4176 1230.36 li
cp
clp
41.4176 1215.53 mo
56.8561 1215.53 li
56.8561 1209.05 li
41.4176 1209.05 li
cp
.012 .144 .998 0 cmyk
f
58.6865 1209.05 mo
58.6865 1217.57 li
41.4177 1217.57 li
41.4177 1230.36 li
63.6204 1230.36 li
63.6204 1209.05 li
cp
46.3514 1222.06 mo
58.6865 1222.06 li
58.6865 1225.87 li
46.3514 1225.87 li
cp
.949 .859 .441 .484 cmyk
f
65.4145 1209.05 mo
65.4145 1230.36 li
87.6173 1230.36 li
87.6173 1217.57 li
74.1611 1217.57 li
74.1611 1222.06 li
82.6831 1222.06 li
82.6831 1225.87 li
70.3485 1225.87 li
70.3485 1213.54 li
87.6173 1213.54 li
87.6173 1209.05 li
cp
f
grestore
FKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4175 1284.69 mo(Teo Chen Shien)[6.76172 6.43945 6.83203 2.98828 7.83398 6.66211 6.43945 6.67383 2.98828 7.24219 6.66211 3.06445 6.43945 0 ]xsh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMM+Roboto-Light gcheck setglobal} if
1 7356 55 <00010058ffec046c05c400270066b209282911123900b0004558b0092f1b
b1091e3e59b0004558b01d2f1bb11d0e3e59b2021d09111239b20e091d11
1239b00910b11101b00a2b5821d81bf459b00210b11701b00a2b5821d81b
f459b2221d09111239b01d10b12501b00a2b5821d81bf459303101342624
272635342433321616152334262322061514160416161514042322242635
33141633323603f0aafe3c68940113d691e57e7cccaca7c6b20188ca66fe
ede19afeff857be6bfaace0166798d7f4b6aaca7d170c87b95b595786f8c
6b73a06dacd06ec6809ab296>FKJHMM+Roboto-Light AddT42Char 
1 8202 61 <00010018000004ae05b00008003100b0004558b0012f1bb1011e3e59b000
4558b0072f1bb1071e3e59b0004558b0042f1bb1040e3e59b20001041112
393031010133011123110133026301bd8efdf27bfdf3920296031afc74fd
dc0224038c00>FKJHMM+Roboto-Light AddT42Char 
FKJHMM+Roboto-Light /CharStrings get begin
/S 55 def
/Y 61 def
end
FKJHMM+Roboto-Light /Encoding get
dup 83 /S put
dup 89 /Y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMM+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /H /I 2{/.notdef}rp /L /M /N /O /P /.notdef /R /S /T /U /V /.notdef /X /Y 7{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /j /k /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u 2{/.notdef}rp /x 3{/.notdef}rp /bar 131{/.notdef}rp]FKJHMM+Roboto-Light nfFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4175 1295.69 mo(COMPANY COUNSEL)[7.11523 7.33398 8.8418 6.30713 6.91602 7.49023 6.70898 3.86523 7.11523 7.33447 7.17773 7.59961 6.6582 6.4707 0 ]xsh41.3018 1320.78 mo(csteo@digix.global   |   +65 9231 2718)[4.28125 4.21045 2.73047 4.29297 4.64014 7.46484 4.60547 1.95264 4.59766 1.95313 4.05029 2.07031 4.59766 1.95313 4.64014 4.59375 4.44531 1.95264 2.10547 2.10547 2.10498 1.92578 2.10547 2.10498 2.10547 4.67578 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 0 ]xsh546.337 1350.93 mo
288.514 1350.93 li
288.514 1178.01 li
546.337 1178.01 li
546.337 1350.93 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.65 1217.04 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.65 1228.04 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.428 1209.05 mo
365.628 1209.05 li
365.628 1230.36 li
319.428 1230.36 li
cp
clp
319.428 1215.53 mo
334.867 1215.53 li
334.867 1209.05 li
319.428 1209.05 li
cp
f
336.697 1209.05 mo
336.697 1217.57 li
319.428 1217.57 li
319.428 1230.36 li
341.631 1230.36 li
341.631 1209.05 li
cp
324.362 1222.06 mo
336.697 1222.06 li
336.697 1225.87 li
324.362 1225.87 li
cp
f
343.425 1209.05 mo
343.425 1230.36 li
365.628 1230.36 li
365.628 1217.57 li
352.172 1217.57 li
352.172 1222.06 li
360.694 1222.06 li
360.694 1225.87 li
348.359 1225.87 li
348.359 1213.54 li
365.628 1213.54 li
365.628 1209.05 li
cp
f
grestore
FKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.428 1284.69 mo(Teo Chen Shien)[6.76172 6.43945 6.83203 2.98828 7.83398 6.66211 6.43945 6.67383 2.98828 7.24219 6.66211 3.06445 6.43945 0 ]xshFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.428 1295.69 mo(COMPANY COUNSEL)[7.11523 7.33398 8.8418 6.30713 6.91602 7.49023 6.70898 3.86523 7.11523 7.33447 7.17773 7.59961 6.6582 6.4707 0 ]xsh319.312 1320.78 mo(csteo@digix.global   |   +65 9231 2718)[4.28125 4.21045 2.73047 4.29297 4.64014 7.46484 4.60547 1.95264 4.59766 1.95313 4.05029 2.07031 4.59766 1.95313 4.64014 4.59375 4.44531 1.95264 2.10547 2.10547 2.10498 1.92578 2.10547 2.10498 2.10547 4.67578 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 0 ]xsh268.327 1543.85 mo
10.504 1543.85 li
10.504 1370.93 li
268.327 1370.93 li
268.327 1543.85 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6396 1409.95 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6396 1420.95 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4176 1401.97 mo
87.6173 1401.97 li
87.6173 1423.27 li
41.4176 1423.27 li
cp
clp
41.4176 1408.44 mo
56.8561 1408.44 li
56.8561 1401.97 li
41.4176 1401.97 li
cp
.012 .144 .998 0 cmyk
f
58.6865 1401.97 mo
58.6865 1410.49 li
41.4177 1410.49 li
41.4177 1423.27 li
63.6204 1423.27 li
63.6204 1401.97 li
cp
46.3514 1414.98 mo
58.6865 1414.98 li
58.6865 1418.79 li
46.3514 1418.79 li
cp
.949 .859 .441 .484 cmyk
f
65.4145 1401.97 mo
65.4145 1423.27 li
87.6173 1423.27 li
87.6173 1410.49 li
74.1611 1410.49 li
74.1611 1414.98 li
82.6831 1414.98 li
82.6831 1418.79 li
70.3485 1418.79 li
70.3485 1406.45 li
87.6173 1406.45 li
87.6173 1401.97 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMN+Roboto-Medium gcheck setglobal} if
1 6520 50 <000100940000051705b00009004cb2010a0b11123900b0004558b0052f1b
b105203e59b0004558b0082f1bb108203e59b0004558b0002f1bb100103e
59b0004558b0032f1bb103103e59b2020500111239b20705001112393031
212301112311330111330517fdfd77fdfd028bfb0409fbf705b0fbf3040d
>FKJHMN+Roboto-Medium AddT42Char 
1 7782 58 <000100120000051d05b000060038b200070811123900b0004558b0012f1b
b101203e59b0004558b0052f1bb105203e59b0004558b0032f1bb103103e
59b2000103111239303101012101230121029501720116fdf4f5fdf60115
013d0473fa5005b0>FKJHMN+Roboto-Medium AddT42Char 
FKJHMN+Roboto-Medium /CharStrings get begin
/N 50 def
/V 58 def
end
FKJHMN+Roboto-Medium /Encoding get
dup 78 /N put
dup 86 /V put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMN+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /D /E 2{/.notdef}rp /H 2{/.notdef}rp /K 2{/.notdef}rp /N 4{/.notdef}rp /S /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e /f /g /h /i /j /.notdef /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMN+Roboto-Medium nfFKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4175 1477.61 mo(Vu Nguyen)[7.59961 6.66797 2.98828 8.51953 6.80273 6.66797 5.76563 6.43945 0 ]xsh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMM+Roboto-Light gcheck setglobal} if
1 12452 90 <00010026000003b1043a00060038b200070811123900b0004558b0012f1b
b1011a3e59b0004558b0052f1bb1051a3e59b0004558b0032f1bb1030e3e
59b200050311123930312501330123013301ed01497bfe6c61fe6a7ba503
95fbc6043a00>FKJHMM+Roboto-Light AddT42Char 
FKJHMM+Roboto-Light /CharStrings get begin
/v 90 def
end
FKJHMM+Roboto-Light /Encoding get
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMM+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /H /I 2{/.notdef}rp /L /M /N /O /P /.notdef /R /S /T /U /V /.notdef /X /Y 7{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /j /k /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u /v /.notdef /x 3{/.notdef}rp /bar 131{/.notdef}rp]FKJHMM+Roboto-Light nfFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4175 1488.61 mo(DEVELOPER)[7.1582 6.4707 6.85352 6.47119 5.88086 7.33398 6.8457 6.4707 0 ]xsh41.3018 1513.7 mo(vu@digix.global   |   +65 8272 7267)[4.00781 4.5542 7.46484 4.60547 1.95264 4.59766 1.95313 4.05029 2.07031 4.59766 1.95264 4.64063 4.59375 4.44531 1.95264 2.10547 2.10547 2.10498 1.92578 2.10547 2.10498 2.10547 4.67578 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 0 ]xsh546.337 1543.85 mo
288.514 1543.85 li
288.514 1370.93 li
546.337 1370.93 li
546.337 1543.85 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.65 1409.95 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.65 1420.95 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.428 1401.97 mo
365.628 1401.97 li
365.628 1423.27 li
319.428 1423.27 li
cp
clp
319.428 1408.44 mo
334.867 1408.44 li
334.867 1401.97 li
319.428 1401.97 li
cp
f
336.697 1401.97 mo
336.697 1410.49 li
319.428 1410.49 li
319.428 1423.27 li
341.631 1423.27 li
341.631 1401.97 li
cp
324.362 1414.98 mo
336.697 1414.98 li
336.697 1418.79 li
324.362 1418.79 li
cp
f
343.425 1401.97 mo
343.425 1423.27 li
365.628 1423.27 li
365.628 1410.49 li
352.172 1410.49 li
352.172 1414.98 li
360.694 1414.98 li
360.694 1418.79 li
348.359 1418.79 li
348.359 1406.45 li
365.628 1406.45 li
365.628 1401.97 li
cp
f
grestore
FKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.428 1477.61 mo(Vu Nguyen)[7.59961 6.66797 2.98828 8.51953 6.80273 6.66797 5.76563 6.43945 0 ]xshFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.428 1488.61 mo(DEVELOPER)[7.1582 6.4707 6.85352 6.47119 5.88086 7.33398 6.8457 6.4707 0 ]xsh319.312 1513.7 mo(vu@digix.global   |   +65 8272 7267)[4.00781 4.5542 7.46484 4.60547 1.95264 4.59766 1.95313 4.05029 2.07031 4.59766 1.95264 4.64063 4.59375 4.44531 1.95264 2.10547 2.10547 2.10498 1.92578 2.10547 2.10498 2.10547 4.67578 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 0 ]xsh268.327 1736.76 mo
10.504 1736.76 li
10.504 1563.85 li
268.327 1563.85 li
268.327 1736.76 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6396 1602.87 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6396 1613.87 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4176 1594.89 mo
87.6173 1594.89 li
87.6173 1616.19 li
41.4176 1616.19 li
cp
clp
41.4176 1601.36 mo
56.8561 1601.36 li
56.8561 1594.89 li
41.4176 1594.89 li
cp
.012 .144 .998 0 cmyk
f
58.6865 1594.89 mo
58.6865 1603.41 li
41.4177 1603.41 li
41.4177 1616.19 li
63.6204 1616.19 li
63.6204 1594.89 li
cp
46.3514 1607.89 mo
58.6865 1607.89 li
58.6865 1611.71 li
46.3514 1611.71 li
cp
.949 .859 .441 .484 cmyk
f
65.4145 1594.89 mo
65.4145 1616.19 li
87.6173 1616.19 li
87.6173 1603.41 li
74.1611 1603.41 li
74.1611 1607.89 li
82.6831 1607.89 li
82.6831 1611.71 li
70.3485 1611.71 li
70.3485 1599.37 li
87.6173 1599.37 li
87.6173 1594.89 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMN+Roboto-Medium gcheck setglobal} if
1 10630 79 <0001007d000004360600000c005300b0004558b0042f1bb104223e59b000
4558b0082f1bb1081c3e59b0004558b0022f1bb102103e59b0004558b00b
2f1bb10b103e59b2000802111239b46a007a00025db2060802111239b465
067506025d30310107112311331137012101012101dc6cf3f34c012b0124
fe6e01bdfee701d06ffe9f0600fc8a5f0151fe3dfd89>FKJHMN+Roboto-Medium AddT42Char 
FKJHMN+Roboto-Medium /CharStrings get begin
/k 79 def
end
FKJHMN+Roboto-Medium /Encoding get
dup 107 /k put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMN+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /D /E 2{/.notdef}rp /H 2{/.notdef}rp /K 2{/.notdef}rp /N 4{/.notdef}rp /S /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e /f /g /h /i /j /k /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMN+Roboto-Medium nfFKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4175 1670.53 mo(Takashi Sano)[6.29883 6.49219 6.26367 6.49219 6.19336 6.66211 3.06445 2.98828 7.24219 6.49219 6.67383 0 ]xshFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4175 1681.53 mo(BOARD DIRECTOR)[6.82227 7.25195 6.91602 6.99854 7.1582 3.86523 7.1582 4.04883 6.99805 6.47119 7.00195 6.58789 7.33398 0 ]xsh41.3018 1706.61 mo(takashi@digix.global   |   +65 9172 1703)[2.73047 4.44482 4.07813 4.44531 4.21045 4.55078 1.95313 7.46436 4.60547 1.95313 4.59717 1.95313 4.05078 2.07031 4.59717 1.95313 4.64063 4.59326 4.44531 1.95313 2.10498 2.10547 2.10547 1.92529 2.10547 2.10547 2.10498 4.67578 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 4.59375 2.10498 4.59375 4.59375 4.59375 0 ]xsh546.337 1736.76 mo
288.514 1736.76 li
288.514 1563.85 li
546.337 1563.85 li
546.337 1736.76 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.65 1602.87 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.65 1613.87 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.428 1594.89 mo
365.628 1594.89 li
365.628 1616.19 li
319.428 1616.19 li
cp
clp
319.428 1601.36 mo
334.867 1601.36 li
334.867 1594.89 li
319.428 1594.89 li
cp
f
336.697 1594.89 mo
336.697 1603.41 li
319.428 1603.41 li
319.428 1616.19 li
341.631 1616.19 li
341.631 1594.89 li
cp
324.362 1607.89 mo
336.697 1607.89 li
336.697 1611.71 li
324.362 1611.71 li
cp
f
343.425 1594.89 mo
343.425 1616.19 li
365.628 1616.19 li
365.628 1603.41 li
352.172 1603.41 li
352.172 1607.89 li
360.694 1607.89 li
360.694 1611.71 li
348.359 1611.71 li
348.359 1599.37 li
365.628 1599.37 li
365.628 1594.89 li
cp
f
grestore
FKJHMN+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.428 1670.53 mo(Takashi Sano)[6.29883 6.49219 6.26367 6.49219 6.19336 6.66211 3.06445 2.98828 7.24219 6.49219 6.67383 0 ]xshFKJHMM+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.428 1681.53 mo(BOARD DIRECTOR)[6.82227 7.25195 6.91602 6.99854 7.1582 3.86523 7.1582 4.04883 6.99805 6.47119 7.00195 6.58789 7.33398 0 ]xsh319.312 1706.61 mo(takashi@digix.global   |   +65 9172 1703)[2.73047 4.44482 4.07813 4.44531 4.21045 4.55078 1.95313 7.46436 4.60547 1.95313 4.59717 1.95313 4.05078 2.07031 4.59717 1.95313 4.64063 4.59326 4.44531 1.95313 2.10498 2.10547 2.10547 1.92529 2.10547 2.10547 2.10498 4.67578 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 4.59375 2.10498 4.59375 4.59375 4.59375 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11"
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/0 ]]
] del_res
/FKJHMN+Roboto-Medium*1 uf/FKJHMN+Roboto-Medium uf/Roboto-Medium uf/FKJHMM+Roboto-Light*1 uf/FKJHMM+Roboto-Light uf/Roboto-Light ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Page: 1 2
%%EndPageComments
%%BeginPageSetup
Adobe_AGM_Utils begin
[
[/Label (1)]
[/TrimBox [10.503936767578 219.14068603516 546.33703613281 977.95275878906]]
[/BleedBox [2 210.63671875 552.84106445312 977.95275878906]]
]xpdfm
Adobe_AGM_Core/ps gx
Adobe_AGM_Core/driver_check_media_override gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get execAdobe_AGM_Image/ps gx
%%EndPageSetup
1 -1 scale 0 -977.953 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
2 -965.953 mo
2 767.316 li
554.841 767.316 li
554.841 -965.953 li
cp
clp
268.49 -784.531 mo
10.5416 -784.531 li
10.5416 -957.449 li
268.49 -957.449 li
268.49 -784.531 li
cp
false sop
/1 
[/DeviceCMYK] /CSA add_res
.976013 .869596 .440589 .485817 cmyk
f
gsave
105.716 -886.577 mo
173.316 -886.577 li
173.316 -855.402 li
105.716 -855.402 li
cp
clp
105.716 -877.101 mo
128.306 -877.101 li
128.306 -886.577 li
105.716 -886.577 li
cp
.012 .144 .998 0 cmyk
f
130.984 -886.577 mo
130.984 -874.107 li
105.716 -874.107 li
105.716 -855.403 li
138.203 -855.403 li
138.203 -886.577 li
cp
112.935 -867.544 mo
130.984 -867.544 li
130.984 -861.966 li
112.935 -861.966 li
cp
0 0 0 0 cmyk
f
140.828 -886.577 mo
140.828 -855.403 li
173.316 -855.403 li
173.316 -874.107 li
153.627 -874.107 li
153.627 -867.544 li
166.096 -867.544 li
166.096 -861.965 li
148.048 -861.965 li
148.048 -880.014 li
173.316 -880.014 li
173.316 -886.577 li
cp
f
grestore
546.312 -784.531 mo
288.365 -784.531 li
288.365 -957.449 li
546.312 -957.449 li
546.312 -784.531 li
cp
0 0 0 1 cmyk
f
gsave
383.538 -886.577 mo
451.138 -886.577 li
451.138 -855.402 li
383.538 -855.402 li
cp
clp
383.538 -877.101 mo
406.128 -877.101 li
406.128 -886.577 li
383.538 -886.577 li
cp
0 0 0 0 cmyk
f
408.806 -886.577 mo
408.806 -874.107 li
383.538 -874.107 li
383.538 -855.403 li
416.026 -855.403 li
416.026 -886.577 li
cp
390.758 -867.544 mo
408.806 -867.544 li
408.806 -861.966 li
390.758 -861.966 li
cp
f
418.651 -886.577 mo
418.651 -855.403 li
451.138 -855.403 li
451.138 -874.107 li
431.449 -874.107 li
431.449 -867.544 li
443.919 -867.544 li
443.919 -861.965 li
425.87 -861.965 li
425.87 -880.014 li
451.138 -880.014 li
451.138 -886.577 li
cp
f
grestore
268.364 -591.613 mo
10.5416 -591.613 li
10.5416 -764.531 li
268.364 -764.531 li
268.364 -591.613 li
cp
0 0 0 0 cmyk
f
.976013 .869596 .440589 .485817 cmyk
%ADOBeginSubsetFont: Roboto-Light Initial
ct_T42Dict begin
-0.734 -0.27 1.137 1.055
 256 array 0 1 255 {1 index exch /.notdef put} for  /Roboto-Light
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c000000586670676d0000000000000184000001bc
676c796600000000000027b00001e4566865616400000000000003400000
003668686561000000000000037800000024686d7478000000000000039c
000014386c6f636100000000000017d400000a1e6d617870000000000000
21f4000000206e616d650000000000002214000004607072657000000000
000026740000013a676469720000000000000000000000000003046f012c
00050000059a05330000011f059a0533000003d100660200000002000000
000000000000e00002ff5000205b0000002000000000474f4f4700400000
fffd0600fe000066079a02002000019f00000000043a05b0002000200003
002a0068005a0060005600a0004e006e008c00c8004e0060004600c40000
0014fe600014029b0010ff39000dfe9700120321000b043a0014048d0010
05b000140618001506c00010025b00120704000506d9000600000000b000
2c4bb0095058b101018e59b801ff85b0441db109035f5e2db0012c202045
6944b001602db0022cb0012a212db0032c2046b003254652582359208a20
8a49648a204620686164b004254620686164525823658a592f20b0005358
6920b000545821b040591b6920b000545821b0406559593a2db0042c2046
b00425465258238a592046206a6164b0042546206a61645258238a592ffd
2db0052c4b20b0032650585158b080441bb04044591b21212045b0c05058
b0c0441b2159592db0062c2020456944b001602020457d691844b001602d
b0072cb0062a2db0082c4b20b003265358b0401bb000598a8a20b0032653
582321b0808a8a1b8a235920b0032653582321b0c08a8a1b8a235920b003
2653582321b801008a8a1b8a235920b0032653582321b801408a8a1b8a23
5920b003265358b0032545b8018050582321b8018023211bb00325452321
2321591b2159442db0092c4b535845441b2121592db00a2cb02a452db00b
2cb02b452db00c2cb1270188208a5358b94000040063b80800885458b900
2a03e870591bb0235358b02088b810005458b9002a03e8705959592db00d
2cb04088b820005a58b12b00441bb9002b03e844592d0001000000022312
3852f56f5f0f3cf50019080000000000c4f0112e00000000d50152e3fa20
fdd5091a087300000009000200000000000000010000076cfe0c00000937
fa20fe45091a00010000000000000000000000000000050e038c00640000
00000000000001f2000001f2000001ce0099024c008f04a70055046f0073
05e9006d04ec006c015c0077028d008c029b00210365001d0484004b0188
003c024a003101e90091032d001e046f0078046f00b2046f0069046f0062
046f0043046f00a8046f0082046f004d046f006a046f006501ae007f018f
003c0417004d046d00950425007c03a20054074e007104ff001e04e700b8
05320083053d00b8048d00b8048000b80578009105a900b8022100d30467
0047050c00b8043700b806ec00b805ae00b8056a007d04ed00b8056a0079
051400b504bd005804c70034054200a204ef001f072c003d04e5003704ca
001804c9005a01eb00a30327003001eb00000354004d0374000102490067
04490064046f009b041f005e0472006c0422005a02a6003f0470006c0464
009c01cb009501d3ff9803eb009c01cb00aa071700960465009c047b005a
046f009b0476006c02b1009c040d0065029200170465009803d900260608
003f03e4003003cd002003e4005702a4004401c400b202a40009057a0091
01c4008c045b00770492005d05c9006d0420001801bc009f04d700660371
00890665006b038a009d03a5007b045d007c066a0066036a00890306008f
043d005402e4004c02e400470240007c047400a203cd005301f700a301f2
006202e4007e039a008703a0007305cc0073060c00640636007603ac0058
074900110430005d056a007d04be00b704b0009706c4005504a70095048c
004804740059047e009f0494006c0583001801c800a8045700a2043a0015
02110019059a00b50474009d0779006c0764005e01d100a70599007c029e
ffc505940084047a0059057200a204b0009801d4ff8c041f005c037000a0
0344008f036b00890361008a01cb0094027b00750200003c037b006a0305
0078026e009d0000fce00000fd990000fcaa0000fd6d0000fc2f0000fd60
020700c703d5009901f700a3046a00b90593002c05620076052f00440479
007405a900bd0479003f05b80058058e007b053d00780481006f04bd00b1
03ea002c0474005b0459006b03ef00490474009e0495008a026600b60467
003103ed007704c300330474009e0447006f0472005b0417004d0447009b
057c0071057800790698008904970085044affd1064a003805f400360548
00850871003308a200ba066f003605a400b9050500b105ca0047070a0017
04c2005a05ae00bc059e00280505003705f1004c05b500b3055300ac0768
00b6078a00b60631fff606ae00ba04e600b20548008d074800d104e4005c
04670061047900a9035f00a30496003406230018040d0062047f00a40425
00a30481002c05d900a9047f00a4047f00a403cd002805cc006f048e00a4
0442006e065900a4066b009e050a0023060200a9044800a90447006f0681
00a90458005d0464ffe60447006b06d6002406e400a40475fff0047f00a4
071a00aa0696009d0447ffe3072600d205f300a604cd0025043800190706
00e4060600c90685009d05a7009e08a500d1076a00a8041e007403df005e
056200760486005904ed001c03f1002c0562007604740059071000aa0663
008d071a00aa0696009d05100082042f006f04e100880000fca30000fc7f
0000fd740000fda70000fa200000fa2805b200bc049300a40447ffe3050e
00b40484009b046200b10380009e049e00b903fb009e0752001706350018
055900bd047a00a304e800b3045200a2067600510547003305a800b80489
00a4080f00b505ca009e082800b106d0009e05f2007b04c0007604f70037
03f3003006f20023053a001c055100ac044c006e054e00ac04660097054e
00a6060a002404b8fff604e800b3043800a205a500280494002c05a300ba
0474009e05b100b8049200a406ef00b805ee00a90599007c049b0071049b
0071048d0019038700110503003703fe00300495004b063f004c06df006f
065100330526002e044400620402007007bc00420670003307cb00bd069c
009604f100880418007505a80021051b00430548009005a700280496002c
02b6005f0414000008290000041400000829000002b90000020a0000015c
0000047f00000230000001a200000100000000d100000000000002420031
024200310536009f062c007d03a0002d016c0062016c003e01610029016c
005902640063026900440251002904670043048200540296009203a100a6
052100a6015a005b07ce005b0261006c026100610396003e02e4003b035e
007b0492006006270023068b00b9085e00b506130023061a009b046f0053
057d002303e80033041b002c0541006a0522002305e2007603b9005b0828
00b104f0006b05120095061f006306dc008006c40078066a006b0491006a
054200ae049e003f049000a5045e0040087400770207ff8904820065046d
00950417004504260077040a0037020700a7024c007501e7007904c3003f
044c0030045b003f069f003f069f003f04be003f067c006500000000082e
00580835005c02e3004c02e3007e02e30057040000550400005c04000043
0400007b040000910400003c040000550400005a0400009f040000690420
004b042300150439002a0627003204430018048700880421002b0418004a
0462009804a900650440009a04a9006904e0009a05f5009a03a2009a0458
009a03cb003b01da00b104dc009a04b2007803dc009a0418004a04060029
03a2001503b1009a0443001804a90069044300180393004704c4009a03e0
003b055f006904f0006904e70080055300220478006d073600250745009a
0559002b04c4009a0441009a05080034061900250435004e04e8009a0441
00a004af002504140020050d009a044c00430617009a0660009a05080004
0590009a0433009a0474005f0648009a046e0050041c000f065700250464
00a004ad00a0051d001105b90069045100150484002a06380022044c0043
044c009a0592000b04a9005e0435004e04a900690406002903be003507dc
009a0499002802e3004702e3003b02e3006c02e3006002e3003e02e3004f
02e3004b0360007d02a400b003e8009a0437003c04ab006f054400ba051c
00bd03ee009f052800bd03d6009f0480009a0478006d043c009a04530017
01c60097039f008a0000fcb7035e005c0375ff910409006d0379006d03b1
009a0382008a037d008a02e4005702e4003b02e4006c02e4006002e4003e
02e4004f02e4004b055c008005a10080057800bd05b5008005b6008003d5
00a004820083045e000f04cc003e046b0065042e004a039f00950194008e
06af0069049c007001d1ff8d0470003c0470006e0470001c047000730470
006c047000390470007c04700063047000690470011001e1ff8c01d5ff8c
01c800a801c8fffa01c800a8043c009a04f8007d03fa0038046e009b042c
00600479005f0477005f0482005a0476009b047d005f0422005a0470006c
0382007004da007803a200040625000e03dc009a04a9006904dc003f04e0
009a01f20000024a0031055b0021055b00210482000004c700340292000e
04ff001e04ff001e04ff001e04ff001e04ff001e04ff001e04ff001e0532
0083048d00b8048d00b8048d00b8048d00b80221000d022100ca0221fffe
0221ffe705ae00b8056a007d056a007d056a007d056a007d056a007d0542
00a2054200a2054200a2054200a204ca0018044900640449006404490064
04490064044900640449006404490064041f005e0422005a0422005a0422
005a0422005a01c8ffe201c8009f01c8ffd301c8ffbc0465009c047b005a
047b005a047b005a047b005a047b005a0465009804650098046500980465
009803cd002003cd002004ff001e0449006404ff001e0449006404ff001e
0449006405320083041f005e05320083041f005e05320083041f005e0532
0083041f005e053d00b80508006c048d00b80422005a048d00b80422005a
048d00b80422005a048d00b80422005a048d00b80422005a057800910470
006c057800910470006c057800910470006c057800910470006c05a900b8
0464009c0221ffc601c8ff9b0221ffe001c8ffb50221fff101c8ffc60221
002701cbfffc022100bf068800d3039e00950467004701d4ff8c050c00b8
03eb009c043700b001cb00a0043700b801cb0067043700b8026100aa0437
00b802a700aa05ae00b80465009c05ae00b80465009c05ae00b80465009c
0465ffd1056a007d047b005a056a007d047b005a056a007d047b005a0514
00b502b1009c051400b502b1005e051400b502b1008304bd0058040d0065
04bd0058040d006504bd0058040d006504bd0058040d006504bd0058040d
006504c700340292001704c700340292001704c7003402ba0017054200a2
04650098054200a204650098054200a204650098054200a2046500980542
00a204650098054200a204650098072c003d0608003f04ca001803cd0020
04ca001804c9005a03e4005704c9005a03e4005704c9005a03e400570749
001106c40055056a007d047400590480ffd40480ffd40421002b04530017
0453001704530017045300170453001704530017045300170478006d03e8
009a03e8009a03e8009a03e8009a01daffe901da00a601daffda01daffc3
04e0009a04a9006904a9006904a9006904a9006904a90069048700880487
00880487008804870088042300150453001704530017045300170478006d
0478006d0478006d0478006d0480009a03e8009a03e8009a03e8009a03e8
009a03e8009a04b2007804b2007804b2007804b2007804dc009a01daffa2
01daffbc01daffcd01da000b01da009b03cb003b0458009a03a2009103a2
009a03a2009a03a2009a04e0009a04e0009a04e0009a04a9006904a90069
04a900690462009804620098046200980418004a0418004a0418004a0418
004a0421002b0421002b0421002b04870088048700880487008804870088
04870088048700880627003204230015042300150420004b0420004b0420
004b04ff001e048dff3e05a9ff4b0221ff5b057e0000052eff330551000c
0266ffa304ff001e04e700b8048d00b804c9005a05a900b8022100d3050c
00b806ec00b805ae00b8056a007d04ed00b804c7003404ca001804e50037
0221ffe704ca00180481006f0459006b0474009e026600b60447009b0457
00a2047b005a047400a203d9002603e400300266ffcb0447009b047b005a
0447009b06980089048d00b8046a00b904bd0058022100d30221ffe70467
0047051c00bd050c00b80505003704ff001e04e700b8046a00b9048d00b8
05ae00bc06ec00b805a900b8056a007d05a900bd04ed00b80532008304c7
003404e50037044900640422005a047f00a4047b005a046f009b041f005e
03cd002003e400300422005a035f00a3040d006501cb009501c8ffbc01d3
ff98042500a303cd0020072c003d0608003f072c003d0608003f072c003d
0608003f04ca001803cd0020015c0077024c008f039c009901d4ff8c016c
003e06ec00b80717009604ff001e04490064048d00b805ae00bc0422005a
047f00a4058e007b0578007904ed001c03f100090848005a0937007d04c2
005a040d006205320083041f005e04ca001803ea002c022100d3070a0017
06230018022100d304ff001e0449006404ff001e044900640749001106c4
0055048d00b80422005a0599007c041f005c041f005c070a001706230018
04c2005a040d006205ae00bc047f00a405ae00bc047f00a4056a007d047b
005a056200760486005905620076048600590548008d0447006f05050037
03cd00200505003703cd00200505003703cd0020055300ac0442006e06ae
00ba060200a90472006c04ff001e0449006404ff001e0449006404ff001e
0449006404ff001e0449001c04ff001e0449006404ff001e0449006404ff
001e0449006404ff001e0449006404ff001e0449006404ff001e04490064
04ff001e0449006404ff001e04490064048d00b80422005a048d00b80422
005a048d00b80422005a048d00b80422005a048d00440422000f048d00b8
0422005a048d00b80422005a048d00b80422005a022100c401c800990221
00b901cb008d056a007d047b005a056a007d047b005a056a007d047b005a
056a007d047b0014056a007d047b005a056a007d047b005a056a007d047b
005a05940084047a005905940084047a005905940084047a005905940084
047a005905940084047a0059054200a204650098054200a2046500980572
00a204b00098057200a204b00098057200a204b00098057200a204b00098
057200a204b0009804ca001803cd002004ca001803cd002004ca001803cd
00200490006c04c7003403cd0028055300ac0442006e046a00b9035f00a3
060a002404b8fff60464009c04e6fffd04e6fffd046a002b035f00000530
fff30402fff504ca001803ea002c04e5003703e400300459006b04800019
062c007d046f0069046f0062046f0043046f00a8048300960497007e0483
00650497008c057800910470006c05ae00b80465009c04ff001e04490064
048d00900422005a0221ff3601c8ff0b056a007d047b005a0514008402b1
ffbf054200a20465006204aefeec04e700b8046f009b053d00b80472006c
053d00b80472006c05a900b80464009c050c00b803eb009c050c00b803eb
009c043700b801cb008f06ec00b80717009605ae00b80465009c056a007d
04ed00b8046f009b051400b502b1008604bd0058040d006504c700340292
0017054200a204ef001f03d9002604ef001f03d90026072c003d0608003f
04c9005a03e4005705b0fe83045300170424ff8a0518ff9f0216ffab04b3
fffc045fff3c04f1002704530017043c009a03e8009a0420004b04dc009a
01da00b10458009a05f5009a04e0009a04a900690440009a0421002b0423
00150439002a01daffc30423001503e8009a03b1009a0418004a01da00b1
01daffc303cb003b0458009a0414002004530017043c009a03b1009a03e8
009a04e8009a05f5009a04dc009a04a9006904c4009a0440009a0478006d
0421002b0439002a0435004e04dc009a0478006d042300150592000b04e8
009a04140020055f006905a500b10625000e04a900690418004a06270032
06270032062700320423001504ff001e04490064048d00b80422005a0453
001703e8009a01c8008d000000600060006000600060009a00bc013d01ba
024402d502eb03190347037a03a003bb03d203f3040a0461048f04e1055f
05a30607067506a20729079607a207ae07e00808083508920940098709f4
0a460a940ad80b100b790bb90bd40c080c490c6d0cbb0cf70d520d9e0e02
0e5e0ecd0ef80f370f660fbc10051035106d109210a910ce10f71112112f
11b11212126612c4132a138013fe1446147f14cb1510152b159d15ea163d
16a51709174817b7180b1852188218d719201964199c19dc19f31a321a76
1ab01b0c1b7a1bdf1c411c601d071d381dde1e571e631e811f321f4c1f8f
1fcf2020209220af210421302155219d21c82212221e22382252226c22d2
2340237d23fa244f24b6257825ef264026bb271e279c27ff281a286728b2
28f0294829a62a2f2ad62b082b712bdb2c4d2cb52d0b2d6b2d9d2e042e30
2e582e602e8e2ead2eea2f202f622f972fdb2ffa30193022305e309530b4
30d13116311e3145317531fe322b328032af32ec336633c1342c34a6351d
355035c93648369c36e63768379737ef386338b73911397139cb3a103a55
3ac33b223b8d3c083c633cd93d3e3db63e2f3eab3f003f3d3f963ff14060
40dc4115416141a6421e4258429d42db4324437e43e2442f44a64531458d
4603467f46a646fd477147eb4824487748bf49074954498349af4a3d4a73
4ab74af54b3a4b934bf64c424cb84d404d9d4e184e8e4f054f774fde501a
507f50e5515151d8526452b052ff536a53da545054c1554e55d856715712
579c5818585e58a45913597d5a395af95b7f5c065c5d5cb05ce55cff5d33
5d495d5f5e335e9c5eb75ed25f415f99600e603d606660bc6113611f612b
6137614361a16204625d62bd62c962d56321637b63da643a64dc6570657c
658865d8661d66296635668766d76719678f6800685c68c268ce68da6941
69a969b569c169cd69d96a446aa96b086b176b266b326b3e6b8c6bf06c78
6cec6d5c6dc56e286e986f036f7e6ffb705670ab70ff715271ce71da71e6
721b721b721b721b721b721b721b721b721b721b721b721b721b721b7223
722b723572407272728f72aa72c872e472f072fc732e736d73cf73f373ff
740f7432750a752675437556756a75b4764276e877797785786778d17953
79fd7a687ae67b3f7bb17c4e7cb27d457da37e077e217e3b7e557e6f7edf
7f067f3f7f567f8b8025806980ef8131814481578190819d81c781e981f5
825f82bc835183dd8464852a852a86f8875e87b087de882a889289208951
89bb8a228a708af88b4e8b808bd18c098c398c828cd78d068d448d6f8ddb
8e3b8e948edf8f328f6b8fbc8fe090269059907490b39122915991d2923e
929f92c992ff937a93ac93fb942d947194eb954595ab9609967e96f3977d
97d09810986998c1993c99b899f49a439a8d9ad49b0f9b539b939bdd9c33
9c3f9c8d9d039d899de49e279eb19f159f749fd5a063a06fa0c3a110a160
a1a3a211a273a2d6a350a3dda46aa502a574a5e3a62ba690a6f1a71ea79d
a804a81ba878a8bda96fa9dcaa41aa8caad2ab13ab55ab9eabf3ac67acad
accfad0cad82adcbae13ae68aedaaf07af43af93afa7afbbafcdafe1aff3
b00ab01eb07bb0e7b138b19ab202b22db283b2dcb324b387b3aeb412b428
b4b2b51cb547b54fb557b55fb567b56fb577b57fb587b58fb597b59fb5a7
b5afb5bab5c2b632b689b6b6b71ab76eb7ccb846b89cb904b969b9cbba46
ba4ebad9bb23bb90bbe0bc58bcc6bd17bd17bd1fbd8fbdf8be5fbea2bf11
bf28bf3fbf56bf6dbf79bf91bf9dbfa9bfc0bfd7bfeebffac011c028c03f
c04bc062c079c090c0a7c0bec0cac0e1c0f8c10fc11bc132c149c160c177
c18ec19ac1b2c1bec1cac1e1c1f8c20fc21bc22dc23ec255c261c278c28f
c2a6c2bdc2d4c2e0c2f7c30ec325c331c348c353c36ac37cc38ec3a0c40e
c4b0c4c2c4d4c4ebc501c513c525c537c548c55ac566c57dc58ec5a0c5b2
c5c9c5dbc64ec6d9c6f0c702c719c72fc741c753c765c777c783c795c7ac
c7bec7d5c7ecc803c81ac82cc83ec849c854c86bc877c883c89ac8b1c8bd
c8c9c8e0c8f2c8fec90ac91fc92fc93fc94fc966c978c984c990c9a7c9b9
c9d0c9e2c9f4ca06ca18ca2bca3eca50ca62ca6eca7aca91caa2cab9cad0
cae7cafdcb09cb15cb21cb2dcb3fcb50cb5ccb68cb74cb80cb97cba3cbba
cbd1cbe3cbf5cc07cc19cc2ccc3fcc52cc65cccacd39cd50cd67cd7ecd94
cda0cdb7cdcecde5cdfcce13ce29ce40ce52ce69ce80ceaaced4cedfcef1
cf03cf19cf2fcf3acf52cf5ecf6acf81cf98cfaecfb9cfcfcfe5cffcd008
d01fd036d048d05fd076d082d099d0b0d0c7d0d3d0ead100d112d17fd191
d1a8d1bad1ccd1ddd1f3d204d21bd28fd2a5d2bcd2ced2e0d2ecd303d31a
d331d343d34ed364d37bd387d39dd3a9d3bed3ced3e5d3f1d408d41ad42c
d43fd451d45dd46ed480d496d4a2d4b3d4bfd4d5d4e1d4f8d50ad51cd534
d547d5aad5c1d5d7d5e2d5f9d610d626d631d63dd649d655d661d66dd679
d694d69cd6a4d6acd6b4d6bcd6c4d6ccd6d4d6dcd6e4d6ecd6f4d6fcd704
d710d71cd733d74ad761d777d791d799d7a1d7a9d7b1d81ed82ad835d847
d859d86bd877d88ed8fdd905d911d919d921d938d94ad952d95ad962d96a
d981d989d991d999d9a1d9a9d9b1d9b9d9c1d9c9d9d1d9e3d9ebd9f3da47
da4fda57da63da7ada82da8ada96da9edab5dacbdae2daf9db10db27db33
db3fdb56db6ddb75db7ddb89db9bdba3dbbadbd1dbdddbe9dc00dc17dc2e
dc45dc4ddc55dc6ddc85dc91dc9ddca9dcb5dcc1dccddcd5dcdddce5dcfc
dd13dd1bdd2ddd3fdd4bdd57dd5fdd67dd7edd90dd9cdda4ddafddbbddc7
ddd3dddeddf5de0cde18de24de30de3cde44de4cde58de63de6fde7ade8c
de9ddea9deb4deccdedfdeebdef6df06df16df1edf2adf36df48df5adf72
df8adfa2dfbadfd2dfeae002e01ae035e050e063e076e089e09ce0b4e0cc
e0dfe0f2e10de128e134e140e152e164e17be192e1aae1c2e1dae1f1e209
e221e239e250e26be286e298e2aae2b6e2c2e2cee2dae2f1e303e31be333
e34be363e37be393e3abe3c3e3dee3f9e410e427e43ee455e46ce483e49a
e4b1e4bde4c9e4d5e4e1e4f3e505e51ce533e54ae561e578e58fe5a6e5bd
e5c9e5d5e5e1e5ede5ffe611e628e63ee656e662e66ee67ae686e692e69e
e6aae6b6e6bee726e78ee7cee80ee877e8dce928e978e9d5ea35ea3dea4e
ea59ea61ea69ea71ea79ea81ea89ea91ea99eaabeabdead4eaebeb03eb1b
eb33eb4beb63eb7beb93ebabebc3ebdbebf3ec0bec17ec23ec2fec3bec47
ec53ec5fec6bec77ec8eeca0ecacecb8ecc4ecd0ecdcece8ecf4ed00ed18
ed2fed46ed52ed5eed6aed76ed82ed8eeda1edb8edceeddaede6edf2edfe
ee0aee16ee22ee2eee3aee46ee52ee5eee6aee76ee7eee86ee8eee96ee9e
eea6eeaeeeb6eebeeec6eeceeed6eedeeee6eef2eefdef08ef1aef22ef2a
ef36ef3eef55ef6bef73ef7bef83ef8befa2efaaefb2efbaefc2efcaefd2
efdaefe2f06bf0d1f138f140f14cf15ef16ff177f183f18ff19bf1a7f1b3
f1bff1cbf1d7f1e3f1eff1fbf207f213f21ff22b000000010000050e008f
001600590005000100000000000e000002000272000600010000001c0156
0001000000000000002f00000001000000000001000c002f000100000000
00020007003b0001000000000003000c002f0001000000000004000c002f
0001000000000005001300420001000000000006000c0055000100000000
000700200061000100000000000900060081000100000000000b000a0087
000100000000000c00130091000100000000000d002e00a4000100000000
000e002a00d20003000104090000005e00fc00030001040900010018015a
0003000104090002000e017200030001040900030018015a000300010409
00040018015a0003000104090005002601800003000104090006001801a6
0003000104090007004001be0003000104090009000c01fe000300010409
000b0014020a000300010409000c0026021e000300010409000d005c0244
000300010409000e005402a00003000104090010000c02f4000300010409
0011000a0300436f70797269676874203230313120476f6f676c6520496e
632e20416c6c205269676874732052657365727665642e526f626f746f20
4c69676874526567756c617256657273696f6e20322e3133373b20323031
37526f626f746f2d4c69676874526f626f746f2069732061207472616465
6d61726b206f6620476f6f676c652e476f6f676c65476f6f676c652e636f
6d43687269737469616e20526f62657274736f6e4c6963656e7365642075
6e6465722074686520417061636865204c6963656e73652c205665727369
6f6e20322e30687474703a2f2f7777772e6170616368652e6f72672f6c69
63656e7365732f4c4943454e53452d322e300043006f0070007900720069
0067006800740020003200300031003100200047006f006f0067006c0065
00200049006e0063002e00200041006c006c002000520069006700680074
0073002000520065007300650072007600650064002e0052006f0062006f
0074006f0020004c00690067006800740052006500670075006c00610072
00560065007200730069006f006e00200032002e003100330037003b0020
00320030003100370052006f0062006f0074006f002d004c006900670068
00740052006f0062006f0074006f00200069007300200061002000740072
006100640065006d00610072006b0020006f006600200047006f006f0067
006c0065002e0047006f006f0067006c00650047006f006f0067006c0065
002e0063006f006d00430068007200690073007400690061006e00200052
006f00620065007200740073006f006e004c006900630065006e00730065
006400200075006e00640065007200200074006800650020004100700061
0063006800650020004c006900630065006e00730065002c002000560065
007200730069006f006e00200032002e00300068007400740070003a002f
002f007700770077002e006100700061006300680065002e006f00720067
002f006c006900630065006e007300650073002f004c004900430045004e
00530045002d0032002e00300052006f0062006f0074006f004c00690067
00680074b00c2bb0002b00b2010c022b01b20d01022b01b70d3a30291e12
00082b00b7016d5945321d00082bb7027e6750381d00082bb70376604b36
1d00082bb70483644e3a1d00082bb705473a291e1200082bb70691775c3a
2300082bb7076d5945321d00082bb708514234251700082bb709392f241a
1000082bb70a91775c3a2300082bb70b76604b361d00082bb70ca184674a
2c00082b00b20e0e072bb00020457d691844b2b0120173b250120174b280
120174b270120175b23f1a0173b25f1a0173b27f1a0173b22f1a0174b24f
1a0174b26f1a0174b28f1a0174b2af1a0174b2ff1a0174b21f1a0175b23f
1a0175b25f1a0175b27f1a0175b20f1e0173b26f1e0175b27f1e0173b2ef
1e0173b21f1e0174b25f1e0174b28f1e0174b2cf1e0174b2ff1e0174b23f
1e0175b22f200173b26f200173b23f280173000000>
[16025 16233 16293 15297 15429 16117 15929 12675 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd
1 4736 37 <0002001e000004e105b00007000a0054b20a0b0c111239b00a10b004d000
b0004558b0042f1bb1041e3e59b0004558b0022f1bb1020e3e59b0004558
b0062f1bb1060e3e59b2080402111239b0082fb10001b00a2b5821d81bf4
59b20a04021112393031012103230133012301210103cafd6b9681022775
022780fcfa0248fedc0198fe6805b0fa500201031900>Roboto-Light AddT42Char 
1 4878 38 <000300b80000047605b0000e001700200070b2022122111239b00210b011
d0b00210b01fd000b0004558b0012f1bb1011e3e59b0004558b0002f1bb1
000e3e59b2180100111239b0182fb22f18015db10f01b00a2b5821d81bf4
59b2080f18111239b00010b11001b00a2b5821d81bf459b00110b11f01b0
0a2b5821d81bf45930313311213216151406071616151406230111213236
35342623252136363534262321b801aeeaf27b6b7f9bf9defe9401719eb9
b19cfe8501509aa9afb1fecd05b0c1bc71a7241cc27fc1d902bcfdaca18f
879d67038b858c85>Roboto-Light AddT42Char 
1 5260 40 <000200b8000004bd05b0000b00150048b2151617111239b01510b002d000
b0004558b0012f1bb1011e3e59b0004558b0002f1bb1000e3e59b00110b1
0c01b00a2b5821d81bf459b00010b10d01b00a2b5821d81bf45930313311
2132041215151402042301112132001135340027b80197b3011c9f9efee1
bafeed0114e60116feeee005b0a3fed0c286c3fed2a40547fb2101310104
80fb012e0100>Roboto-Light AddT42Char 
1 5664 43 <00010091ffec04d305c40022005fb20b232411123900b0004558b00b2f1b
b10b1e3e59b0004558b0032f1bb1030e3e59b20f030b111239b00b10b112
01b00a2b5821d81bf459b00310b11a01b00a2b5821d81bf459b2220b0311
1239b0222fb11f01b00a2b5821d81bf45930312506042322240227351000
21320417232626232202111514161633323736371121352104d340feefa9
abfef6920101320102e101121a7b1bcfa7ccee71d3899f724a24fe790202
ad5b66a4012cc2b8012f015fe5c9a0a5fedefef8aca6ff8c32212c017868
>Roboto-Light AddT42Char 
1 6002 45 <000100d30000014e05b00003001d00b0004558b0022f1bb1021e3e59b000
4558b0002f1bb1000e3e59303121231133014e7b7b05b000>Roboto-Light AddT42Char 
1 6290 48 <000100b80000040305b00005002900b0004558b0042f1bb1041e3e59b000
4558b0022f1bb1020e3e59b10001b00a2b5821d81bf45930312521152111
33013402cffcb57c686805b0>Roboto-Light AddT42Char 
1 6638 51 <0002007dffec04ec05c4000f001d0048b2041e1f111239b00410b013d000
b0004558b00b2f1bb10b1e3e59b0004558b0042f1bb1040e3e59b00b10b1
1301b00a2b5821d81bf459b00410b11a01b00a2b5821d81bf45930310114
0204232200113534122420041217071002232202111510123332121104ec
8bfefea9fffec68d0102015001018c037beecfcbf1f0ced1ea0289c9fed0
a4016d013696c70133a5a2fed8c3100107012afed5fef498fefdfed1012b
010b>Roboto-Light AddT42Char 
1 8056 60 <00010037000004af05b0000b005300b0004558b0012f1bb1011e3e59b000
4558b00a2f1bb10a1e3e59b0004558b0042f1bb1040e3e59b0004558b007
2f1bb1070e3e59b2000104111239b2060104111239b2030006111239b209
060011123930310101330101230101230101330273019a93fe1e01f194fe
58fe569201f2fe1d9303480268fd32fd1e027cfd8402e202ce00>Roboto-Light AddT42Char 
1 0 0 <000500640000032805b0000300060009000c000f006fb20c1011111239b0
0c10b000d0b00c10b006d0b00c10b009d0b00c10b00dd000b0004558b002
2f1bb1021e3e59b0004558b0002f1bb1000e3e59b2040200111239b20502
00111239b2070200111239b2080200111239b00adcb20c0200111239b20d
0200111239b00210b00edc30312121112103110101110103210135012103
28fd3c02c436feeefeba010ce40203fefe0102fdfd05b0faa40507fd7d02
77fb110278fd5e025e88025e>Roboto-Light AddT42Char 
Roboto-Light /CharStrings get begin
/A 37 def
/B 38 def
/D 40 def
/G 43 def
/I 45 def
/L 48 def
/O 51 def
/X 60 def
end
Roboto-Light /Encoding get
dup 65 /A put
dup 66 /B put
dup 68 /D put
dup 71 /G put
dup 73 /I put
dup 76 /L put
dup 79 /O put
dup 88 /X put
pop
end
%ADOEndSubsetFont
/FKJHMO+Roboto-Light /Roboto-Light findfont ct_VMDictPut/FKJHMO+Roboto-Light*1 [65{/.notdef}rp /A /B /.notdef /D 2{/.notdef}rp /G /.notdef /I 2{/.notdef}rp /L 2{/.notdef}rp /O 8{/.notdef}rp /X 167{/.notdef}rp]FKJHMO+Roboto-Light nfFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6777 -725.506 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6777 -714.506 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4554 -733.492 mo
87.6551 -733.492 li
87.6551 -712.186 li
41.4554 -712.186 li
cp
clp
41.4554 -727.016 mo
56.894 -727.016 li
56.894 -733.492 li
41.4554 -733.492 li
cp
.012 .144 .998 0 cmyk
f
58.7243 -733.492 mo
58.7243 -724.97 li
41.4555 -724.97 li
41.4555 -712.187 li
63.6583 -712.187 li
63.6583 -733.492 li
cp
46.3893 -720.484 mo
58.7243 -720.484 li
58.7243 -716.672 li
46.3893 -716.672 li
cp
.949 .859 .441 .484 cmyk
f
65.4524 -733.492 mo
65.4524 -712.187 li
87.6551 -712.187 li
87.6551 -724.97 li
74.1989 -724.97 li
74.1989 -720.484 li
82.721 -720.484 li
82.721 -716.672 li
70.3863 -716.672 li
70.3863 -729.007 li
87.6551 -729.007 li
87.6551 -733.492 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium Initial
ct_T42Dict begin
-0.73 -0.27 1.168 1.055
 256 array 0 1 255 {1 index exch /.notdef put} for  /Roboto-Medium
Type42DictBegin
[<00010000000c000c000c000c4f532f3200000000000000cc000000606376
7420000000000000012c0000005c6670676d0000000000000188000001bc
676c796600000000000027d40001e33c6865616400000000000003440000
003668686561000000000000037c00000024686d747800000000000003a0
000014386c6f636100000000000017d800000a1e6d617870000000000000
21f8000000206e616d650000000000002218000004687072657000000000
0000268000000153676469720000000000000000000000000003049801f4
00050000059a05330000011f059a0533000003d100660200000002000000
000000000000e00002ff5000205b0000002000000000474f4f4700400000
fffd0600fe000066079a02002000019f00000000043a05b0002000200003
002a00cc0091009e009100ec007200b2007d0056005f004e0060010400aa
00c400000014fe600014029b0010ff39000dfe9700120321000b043a0014
048d001005b000140618001506c00010025b00120704000506de00010000
0000b0002c4bb0095058b101018e59b801ff85b0441db109035f5e2db001
2c2020456944b001602db0022cb0012a212db0032c2046b0032546525823
59208a208a49648a204620686164b004254620686164525823658a592f20
b00053586920b000545821b040591b6920b000545821b0406559593a2db0
042c2046b00425465258238a592046206a6164b0042546206a6164525823
8a592ffd2db0052c4b20b0032650585158b080441bb04044591b21212045
b0c05058b0c0441b2159592db0062c2020456944b001602020457d691844
b001602db0072cb0062a2db0082c4b20b003265358b0401bb000598a8a20
b0032653582321b0808a8a1b8a235920b0032653582321b0c08a8a1b8a23
5920b0032653582321b801008a8a1b8a235920b0032653582321b801408a
8a1b8a235920b003265358b0032545b8018050582321b8018023211bb003
254523212321591b2159442db0092c4b535845441b2121592db00a2cb02c
452db00b2cb02d452db00c2cb1270188208a5358b94000040063b8080088
5458b9002c03e870591bb0235358b02088b810005458b9002c03e8705959
592db00d2cb04088b820005a58b12d00441bb9002d03e844592d00010000
00022312b4d324365f0f3cf50019080000000000c4f0112e00000000d501
52ecfa24fdd5095c087300000009000200000000000000010000076cfe0c
0000096bfa24fe41095c00010000000000000000000000000000050e038c
0064000000000000000001fe000001fe00000225008f0298006504e20060
048c006405e00063051d0056015a005202ca008002d200280389001b0475
004401c2001c02a00047023c0087032a0002048c0069048c00a8048c0051
048c004f048c0034048c0081048c0075048c0045048c0068048c005d021f
008201e7002e0411003f047a0091042a008003e4003c0728005b05530012
050c009405390066053a009404860094046500940572006a05af00940242
00a30471002d050b0094045400940701009405ae009405860066051d0094
0586006004fe009404d4004a04db002d0537007d052d0012070a00300510
002904e0000704d1005002310084035800140231000c036b0035039c0003
029400310454005a0481007c0430004f0484004f044b005302d6002d0489
005204710079020b007d0201ffb5042d007d020b008c06f6007c04730079
048e004f0481007c048b004f02d0007c0421004b02a900080472007703f5
001605f200210406001f03e5000c0406005202af0038020200ae02af001b
05510075021e0086047d006404b5005e059d005d0440000b01fc008804f8
005a0385005d064400570391008d03e20057046d007f0644005703db009b
030a007f044a005f02f6003c02f60037029b007004bb009203ed00450242
008e0210006d02f6008003a7007703e2005d05d00059062b005006570067
03e400420785fff60444004d0584006904ca009404e7008806c1004804a7
0067049100430488004f0497008204ed004f05b0001f021a008f0498008e
04640022024f0021059300900488007e07b40064073a005b020c008b0588
005102d0ffe4058a0058049e004f05a4007d04f200770226ffb5043c0059
03e6009403b0007203dc009b037c0075020b008102b20078024d002903d8
007a031f0049026c00820000fc8e0000fd5e0000fc730000fd3e0000fc0c
0000fd1c025d00c6043c00670242008e0475009b05bf0019057a005b0538
00200490006c05b1009b0490004705ef004a05aa0044055b006b04840056
04c60096040e00200488005404600060041a00610488007e04a1007302aa
00a9046a00160413006404f3002d048800800437005204900052042d003f
0460008005d0004405c9004f0694006604b30076047bffe10671003305fe
0022055900680888002d088f009b065b003105aa00920508009006060024
07a2001604d6004905a8009405a9002d050a0039065f004f05f900920589
008e079b009807f90098061a001806f9009b050700900550006b075400a0
04f70020047d005b048f008f035a008504f600270676001e0416004d0498
0086046e008f049a00210603008f049700860498008603f5002305d30054
04d300860466005f068e008606ec007e0517001f066f008f0468008f043c
005106840091047000270471ffdb043c005406d1001e06e400860489ffee
0498008607490088064f00700467ffe00728009806010086050c001c0460
000a074200ac0636009d06ed008005e60082093200a307f9008f04200028
03f00033057a005f0488004f051a0010040e0020057a005f0488004f0745
00880644007407490088064f0070051a0066044a005c04ff006d0000fc66
0000fc730000fd7b0000fda50000fa240000fa4d062a0094051b00860467
ffe0051300940486007c046a008f03a1007e04f2009b0420007e081c0016
06d3001e05cc009b04fa008f052c009004ab008e0695003405a4003d0628
0094050d008607d0009405aa007e0847009b06f5007e062a006704ff0061
053900290446001f0731002d0570002605fa008e04dc005f057400800473
0074058600840624001604c3ffcb052100900478008e0628002d051d0021
05af009b0488007e06350094051a0086077e00940678008f0588005104a6
005b04a6005d04c7003403af002d056700290474001f0507005206f10068
06dd005e0653003c0528002f047b0048043e007407be0042069d004007fd
0094069e00770504005d042c005505aa0021051d0044055500810649002d
053e0021032c00670414000008290000041400000829000002b90000020a
0000015c0000047f00000230000001a200000100000000d1000000000000
02a1004702a100470529009d06300081039c000301c0006301bc003301ce
003201a8004a0314006c031b004003080032045d00400499005c02cb0088
03fa008a05a6008a01c8005a07a7004a0272006c02690054039c002d02f6
0035035c006904b5005f0670002106b800980893009406280021068c007c
048c005e05f500210434002804a20021055e004f057d002805e4007003e2
004c082e00900509006d051400960635005906dd005406d1005b06a20058
04910062059600a604d900400483009e04b2003b0845005e022dffaf048e
0065047a00910411003c042a0080040c0024025b00a10298006301f10045
051b002d04a8001804bc002d0723002d0723002d0511002d06b7004b0000
0000083000590835005c02f6003c02f6008002f6004b041d004f041d0058
041d0039041c0060041d0067041d0030041d003e041d0042041d0096041d
0059042a0041043c0005045e001506070028047b000904840067043b0024
0434003e045c007604c0004c046d007604c0004f04dd00760606007603b9
0076045b007603d5002401fc008504de007604a6005403c500760434003e
0466003803a4000903b90076047b000904c0004f047b00090398004204d8
007604190044059d00500554005004e4005f059100240480004f07540024
075700760597002404d700760471007605590027063a001a0446004204e4
0076045c007604cb00240446001f055d0076048c004106840076070a0076
055a000a06200076046700760480003c06920076048800430422000a0692
001a049d0076051a0076056e002405f0004f045a000504c4001506950024
048c0041048c007605fe000a04d2004f0446004204c0004f0466003803f7
00460836007604eb002802f6003702f6003502f6004f02f6004d02f60036
02f6004b02f6004603b9009002b2009603e00076043b000a04bb00560544
009b0528009b043000810539009b042d0081047a00760480004f04600076
049e00090205009403a100750000fc9d040b007a040bff4c040b0075040b
007503b9007603a1007503a1007502f6004b02f6003502f6004f02f6004d
02f6003602f6004b02f60046057a006b05a2006b0586009b05e0006b05e2
006b041b00970482006e0457000f04be0035046b0066042e004303a10075
01b3005c0698004f04b400730210ffb0048c0039048c006a048c002c048c
0066048c0063048c0035048c006f048c0059048c0068048c00e30226ffb5
0226ffb5021b008f021bfffb021b008f0460007604eb00620433003a0488
007c043d00500498004f0493004f04a1004c0494007c049f004f044b0053
0489005103a4005b0503005d03c400030646fff10409007604c0004f0509
003104dd007601fe000002a000470558fff70558fff7048fffd404db002d
02a9ffe80553001205530012055300120553001205530012055300120553
001205390066048600940486009404860094048600940242ffc8024200a3
0242ffcb0242ffbf05ae0094058600660586006605860066058600660586
00660537007d0537007d0537007d0537007d04e000070454005a0454005a
0454005a0454005a0454005a0454005a0454005a0430004f044b0053044b
0053044b0053044b0053021affb4021a008f021affb7021affab04730079
048e004f048e004f048e004f048e004f048e004f04720077047200770472
00770472007703e5000c03e5000c055300120454005a055300120454005a
055300120454005a053900660430004f053900660430004f053900660430
004f053900660430004f053a0094051a004f04860094044b005304860094
044b005304860094044b005304860094044b005304860094044b00530572
006a048900520572006a048900520572006a048900520572006a04890052
05af0094047100790242ffb3021aff9f0242ffcd021affb90242ffdf021a
ffcb02420017020b00000242009d06b300a3040c007d0471002d0226ffb5
050b0094042d007d04540094020b008a04540094020b00550454009402a1
008c0454009402e7008c05ae00940473007905ae00940473007905ae0094
047300790473ffa505860066048e004f05860066048e004f05860066048e
004f04fe009402d0007c04fe009402d0004f04fe009402d0003804d4004a
0421004b04d4004a0421004b04d4004a0421004b04d4004a0421004b04d4
004a0421004b04db002d02a9000804db002d02a9000804db002d02d10008
0537007d047200770537007d047200770537007d047200770537007d0472
00770537007d047200770537007d04720077070a003005f2002104e00007
03e5000c04e0000704d100500406005204d100500406005204d100500406
00520785fff606c10048058400690488004f047affa6047affa6043b0024
049e0009049e0009049e0009049e0009049e0009049e0009049e00090480
004f03e0007603e0007603e0007603e0007601fcffa601fc008301fcffa9
01fcff9d04dd007604c0004f04c0004f04c0004f04c0004f04c0004f0484
0067048400670484006704840067043c0005049e0009049e0009049e0009
0480004f0480004f0480004f0480004f047a006a03e0007603e0007603e0
007603e0007603e0007604a6005404a6005404a6005404a6005404de0076
01fcff9101fcffab01fcffbd01fc001501fc007c03d50024045b007603b9
007603b9007603b9007603b9007604dd007604dd007604dd007604c0004f
04c0004f04c0004f045c0076045c0076045c00760434003e0434003e0434
003e0434003e043b0024043b0024043b0024048400670484006704840067
04840067048400670484006706070028043c0005043c0005042a0041042a
0041042a0041055300120486fee705affef00242fef3059affa70544fee1
056fffb202aaff8705530012050c00940486009404d1005005af00940242
00a3050b00940701009405ae009405860066051d009404db002d04e00007
051000290242ffbf04e0000704840056046000600488007e02aa00a90460
00800498008e048e004f04bb009203f500160406001f02aaffcc04600080
048e004f0460008006940066048600940475009b04d4004a024200a30242
ffbf0471002d0528009b050b0094050a003905530012050c00940475009b
0486009405a800940701009405af00940586006605b1009b051d00940539
006604db002d051000290454005a044b005304980086048e004f0481007c
0430004f03e5000c0406001f044b0053035a00850421004b020b007d021a
ffab0201ffb5046e008f03e5000c070a003005f20021070a003005f20021
070a003005f2002104e0000703e5000c015a005202980065044a008f0226
ffb101bc00330701009406f6007c055300120454005a0486009405a80094
044b00530498008605aa004405c9004f051a0010040efff10873004f096b
006604d600490416004d053900660430004f04e00007040e0020024200a3
07a200160676001e024200a3055300120454005a055300120454005a0785
fff606c1004804860094044b005305880051043c0059043c005907a20016
0676001e04d600490416004d05a800940498008605a80094049800860586
0066048e004f057a005f0488004f057a005f0488004f0550006b043c0051
050a003903e5000c050a003903e5000c050a003903e5000c0589008e0466
005f06f9009b066f008f0484004f055300120454005a055300120454005a
055300120454005a055300100454ff9a055300120454005a055300120454
005a055300120454005a055300120454005a055300120454005a05530012
0454005a055300120454005a055300120454005a04860094044b00530486
0094044b005304860094044b005304860094044b00530486ffd5044bff8e
04860094044b005304860094044b005304860094044b0053024200a3021a
008f02420094020b007805860066048e004f05860066048e004f05860066
048e004f05860027048effa305860066048e004f05860066048e004f0586
0066048e004f058a0058049e004f058a0058049e004f058a0058049e004f
058a0058049e004f058a0058049e004f0537007d047200770537007d0472
007705a4007d04f2007705a4007d04f2007705a4007d04f2007705a4007d
04f2007705a4007d04f2007704e0000703e5000c04e0000703e5000c04e0
000703e5000c04a2004f04db002d03f500230589008e0466005f0475009b
035a00850624001604c3ffcb047100790507ffd00507ffd00475fff0035a
ffe2053cffe30444ffae04e00007040e0020051000290406001f04600060
0465000206300081048c0051048c004f048c0034048c008104a0008904b4
007c04a0005d04b4007d0572006a0489005205ae00940473007905530012
0454000d04860048044b00010242fef6021afee205860066048e001604fe
003202d0ff6e053700710472000f04dffeac050c00940481007c053a0094
0484004f053a00940484004f05af009404710079050b0094042d007d050b
0094042d007d04540094020b00780701009406f6007c05ae009404730079
05860066051d00940481007c04fe009402d0007204d4004a0421004b04db
002d02a900080537007d052d001203f50016052d001203f50016070a0030
05f2002104d100500406005205ccfe1c049e0009041cff2a051aff370238
ff3904caff930478fee804eeffa4049e00090460007603e00076042a0041
04de007601fc0085045b00760606007604dd007604c0004f046d0076043b
0024043c0005045e001501fcff9d043c000503e0007603b900760434003e
01fc008501fcff9d03d50024045b00760446001f049e00090460007603b9
007603e0007604e400760606007604de007604c0004f04d80076046d0076
0480004f043b0024045e00150446004204de00760480004f043c000505fe
000a04e400760446001f059d005005d100850646fff104c0004f0434003e
060700280607002806070028043c0005055300120454005a04860094044b
0053049e000903e00076021a0078000000600060006000600060009b00c5
014201c2025d02fa03140340036f03a203c803ea04010428043f049404c2
0514058805cc0633069c06c9074807b307bf07cb07ea0812083108980946
098709f30a470a910ad30b0a0b6b0ba90bc40bf80c3f0c630cbc0cf80d53
0d9f0e000e5a0ec90ef40f330f640fb30ffe102f1068108d10a410ca10f1
110c112d11ae120f126412c21337138113fd143d147714c3150a15251591
15da1629168e16ef172d179c17e8182f185f18ad18f61937197019b319ca
1a0c1a511a8f1af21b571bb91c1b1c3a1cd71d091dac1e2c1e381e561f08
1f221f621fa61ffa206d208d20df210b212c2162219121dc21e82202221c
223622a02306234423c02412247f254025b92611268426e4276027bf27da
2827287128af2907296329e92a862ab72b1c2b842bf22c572cac2d072d38
2d9c2dd32dfb2e032e322e552e8e2ebb2eff2f342f792f992fb92fc22ff3
30253041305a30a030a830cf30fd317831a631e83217325432c93323338d
3402347334a6351c359b35f6364036b436e2373b37ac37fe385838b6390d
3952399239ff3a523ab33b2c3b7c3bf23c553cc53d3c3db23e043e413e9a
3ef73f633fe3401c406640ad411f4155419641d4421d427742dc432943a0
4420447b44e44550457745cd463a46ba46f34744478c47d64830485f488b
4916494c498e49cc4a114a664ac94b144b864bff4c594cd34d424db84e29
4e8e4eca4f2a4f8a4ff3507950fb514851975203527152e4535653e05469
5509559d560c567756bc5703576f57d75899595359cd5a4d5aa35af75b2c
5b485b7c5b925ba85c7c5cea5d055d205d895de15e515e815eaa5f015f4d
5f595f655f715f7d5fd36026607760cd60d960e56145619461f4624b62dc
63686374638063c7640b64176423647664c56508657965f9665a66af66bb
66c767266782678e679a67a667b2681a687d68d968e868f8690469106960
69c96a526ac56b306b986bfd6c6a6cd66d3b6da96e056e586eab6efd6f74
6f806f8c6fbb6fbb6fbb6fbb6fbb6fbb6fbb6fbb6fbb6fbb6fbb6fbb6fbb
6fbb6fc36fcb6fd56fdf6ff7701a703c705c707b7087709370c671057167
718b719771a771ca729a72b672d272e572f9734173c5746874f6750275ca
763076b0776777ce784978a2791279b17a137aaa7b087b6c7b867ba07bba
7bd47c417c687ca17cb87ced7d807dc37e447e847e937ea27edb7ee87f16
7f2f7f3b7f9f7ff58090811c818f82598259840d847684c984f3853c85a1
8626865786be8723876d87f38849887a88c889018932897b89c589f68a2f
8a5a8ac58b1e8b7a8bc48c198c528ca48cc88d0b8d368d518dac8e0b8e42
8eb98f248f868fb08fe6905a908d90d8910a914e91bd920f927392d2934d
93c2945394a494e4953b9592960d968d96c99722976c97af97e9982b9864
98a398fb9907995499cb9a5c9ab09af39b759bdb9c419ca49d359d419d93
9de09e2e9e709ee09f469fa6a01da0b1a138a1d0a247a2bba2fda35da3bb
a3e8a46ea4d0a4e7a53ba57da62ea698a6fca745a78ca7cea80fa858a8ae
a933a972a995a9e3aa44aa8baad1ab28ab9aabc7ac15ac70ac84ac98acaa
acbeacd0ace7acfbad4fadb2adfeae5baebdaee8af40af98afe0b03fb066
b0d7b0edb16db1d2b203b214b225b238b249b25ab26db280b293b2a9b2b1
b2b9b2c1b2c9b2d4b2dcb343b396b3c3b423b477b4d8b556b5a3b609b66d
b6dfb75bb763b7e6b821b88fb8dfb958b9c6ba18ba18ba20ba91bb02bb64
bba7bc0cbc23bc3abc51bc63bc7bbc8ebc9abca6bcbdbcd4bcebbd03bd1a
bd31bd48bd60bd72bd89bda0bdb7bdcebde6bdfdbe0fbe26be3ebe55be6c
be7ebe94beaabec1bed9bee5bef1bf08bf1abf30bf47bf5dbf73bf8abfa2
bfb3bfcabfdcbff2c003c01bc032c044c05ac071c083c09ac0b1c0c2c0d9
c0f0c15bc1ffc211c223c23ac250c267c27ec290c2a1c2b3c2c3c2dac2eb
c302c318c32fc346c3b5c44ec465c476c48dc4a3c4bac4d0c4e7c4fec50a
c51cc533c545c55cc56ec585c59cc5b3c5cac5d5c5e0c5f7c603c60fc626
c63dc649c655c66cc683c68fc69bc6b0c6c5c6d1c6ddc6f4c706c712c71e
c735c746c75bc772c783c79ac7b1c7c9c7e1c7f3c805c811c81dc82fc840
c852c864c87bc891c89dc8a9c8b5c8c1c8d3c8e4c8f0c8fcc908c914c92b
c937c94ec964c976c98cc9a3c9bac9cdc9e0c9f8ca0bca6acacdcae4cafb
cb12cb28cb40cb57cb6ecb85cb9ccbaecbbfcbd6cbe8cbffcc16cc46cc76
cc86cc9dccb4cccaccdbccf3cd0bcd17cd23cd3acd51cd67cd7ecd95cdab
cdc2cddacdecce03ce15ce2bce3cce54ce6bce82ce98ceb0cec7ceddcef4
cf5ccf6ecf84cf9bcfaccfbdcfd3cfe9d000d06fd085d09bd0b2d0c9d0d5
d0ebd0fdd114d12bd136d14cd163d16fd185d191d1a6d1b2d1c9d1d5d1ec
d1fdd214d227d239d245d256d268d27ed28ad29bd2a7d2bdd2c9d2dfd2f0
d307d31ad32dd38fd3a6d3bcd3d3d3ead401d417d422d42ed43ad446d452
d45ed46ad485d48dd495d49dd4a5d4add4b5d4bdd4c5d4cdd4d5d4ddd4e5
d4edd4f5d50dd525d537d549d55bd56cd586d58ed596d59ed5a6d611d629
d640d652d664d676d68ed6a5d714d71cd734d73cd744d75bd772d77ad782
d78ad792d7a9d7b1d7b9d7c1d7c9d7d1d7d9d7e1d7e9d7f1d7f9d810d818
d820d875d87dd885d89cd8b3d8bbd8c3d8dbd8e3d8fad910d927d93ed955
d96cd984d99cd9b3d9c9d9ddd9fcda08da1ada22da39da4bda57da63da7a
da91daa8dabfdac7dacfdae7daffdb0bdb17db23db2fdb3bdb47db4fdb57
db5fdb76db8ddb95dbacdbc3dbdbdbf2dbfadc02dc19dc2fdc47dc4fdc66
dc7edc96dcaedcc5dcdcdcf2dd0add22dd3add52dd5add62dd7add91dda9
ddc0ddd2dde3ddfbde12de2ade42de5ade71de8ddea9deb1debddec9dedb
deeddf06df1ddf36df4ddf65df7cdf94dfabdfc6dfe0dff3e005e018e02a
e03de04fe067e07ee099e0b4e0c0e0cce0dee0f0e102e113e12ce143e15c
e173e18be1a2e1bae1d1e1ece206e218e22ae236e242e24ee25ae271e283
e29be2b2e2cae2e1e2f9e310e328e33fe35ae374e38be3a2e3b9e3d0e3e7
e3fee415e42be437e443e44fe45be46de47fe496e4ade4c4e4dbe4f2e509
e520e536e542e54ee55ae566e578e58ae59ce5ade5c7e5d3e5dfe5ebe5f7
e603e60fe61be627e62fe696e6fde73ce77ce7dbe83be886e8d5e930e989
e991e99de9a7e9afe9b7e9bfe9c7e9cfe9d7e9dfe9e7e9f9ea0bea22ea39
ea51ea69ea81ea99eab1eac9eae1eaf9eb11eb29eb41eb59eb65eb71eb7d
eb89eb95eba1ebb4ebc0ebccebdeebf0ebfcec08ec14ec20ec2cec38ec44
ec50ec68ec7aec8cec98eca4ecb0ecbcecc8ecd4ece7ecf9ed0aed16ed22
ed2eed3aed46ed52ed5eed6aed76ed82ed8eed9aeda6edb2edbaedc2edca
edd2eddaede2edeaedf2edfaee02ee0aee12ee1aee22ee3aee51ee68ee7a
ee82ee8aeea2eeaaeebceed2eedaeee2eeeaeef2ef09ef11ef19ef21ef29
ef31ef39ef41ef49efd7f049f0abf0b3f0bff0d1f0e2f0eaf0f6f102f10e
f11af126f132f13ef14af156f162f16ef17af186f192f19e000000010000
050e008f0016004e0005000100000000000e000002000230000600010000
001c01560001000000000000002f00000001000000000001000d002f0001
0000000000020007003c0001000000000003000d002f0001000000000004
000d002f0001000000000005001300430001000000000006000d00560001
00000000000700200063000100000000000900060083000100000000000b
000a0089000100000000000c00130093000100000000000d002e00a60001
00000000000e002a00d40003000104090000005e00fe0003000104090001
001a015c0003000104090002000e01760003000104090003001a015c0003
000104090004001a015c0003000104090005002601840003000104090006
001a01aa0003000104090007004001c40003000104090009000c02040003
00010409000b00140210000300010409000c00260224000300010409000d
005c024a000300010409000e005402a60003000104090010000c02fa0003
000104090011000c0306436f70797269676874203230313120476f6f676c
6520496e632e20416c6c205269676874732052657365727665642e526f62
6f746f204d656469756d526567756c617256657273696f6e20322e313337
3b2032303137526f626f746f2d4d656469756d526f626f746f2069732061
2074726164656d61726b206f6620476f6f676c652e476f6f676c65476f6f
676c652e636f6d43687269737469616e20526f62657274736f6e4c696365
6e73656420756e6465722074686520417061636865204c6963656e73652c
2056657273696f6e20322e30687474703a2f2f7777772e6170616368652e
6f72672f6c6963656e7365732f4c4943454e53452d322e300043006f0070
0079007200690067006800740020003200300031003100200047006f006f
0067006c006500200049006e0063002e00200041006c006c002000520069
0067006800740073002000520065007300650072007600650064002e0052
006f0062006f0074006f0020004d0065006400690075006d005200650067
0075006c0061007200560065007200730069006f006e00200032002e0031
00330037003b002000320030003100370052006f0062006f0074006f002d
004d0065006400690075006d0052006f0062006f0074006f002000690073
00200061002000740072006100640065006d00610072006b0020006f0066
00200047006f006f0067006c0065002e0047006f006f0067006c00650047
006f006f0067006c0065002e0063006f006d004300680072006900730074
00690061006e00200052006f00620065007200740073006f006e004c0069
00630065006e00730065006400200075006e006400650072002000740068
006500200041007000610063006800650020004c006900630065006e0073
0065002c002000560065007200730069006f006e00200032002e00300068
007400740070003a002f002f007700770077002e00610070006100630068
0065002e006f00720067002f006c006900630065006e007300650073002f
004c004900430045004e00530045002d0032002e00300052006f0062006f
0074006f004d0065006400690075006db00c2bb0002b00b2010e022b01b2
0f01022b01b70f3a30251b1000082b00b701382e241a1100082bb7024e40
32231500082bb703483b2e211400082bb7044e4032231500082bb7053028
1f160e00082bb70663513f2d1b00082bb7074034241a1100082bb7085b4a
3a291900082bb70983644e3a2300082bb70a77624c362100082bb70b9177
5c3a2300082bb70c76604b361d00082bb70d2c241c140c00082bb70e4337
2b1f1200082b00b2100e072bb00020457d691844b280140173b2b0140173
b250140174b280140174b23f1c0173b25f1c0173b27f1c0173b22f1c0174
b24f1c0174b26f1c0174b28f1c0174b2af1c0174b2ff1c0174b21f1c0175
b23f1c0175b25f1c0175b27f1c0175b20f200173b26f200175b27f200173
b2ef200173b21f200174b25f200174b28f200174b2cf200174b2ff200174
b23f200175b22f220173b26f220173b22f2a0173b23f2a01730000>
[16373 15681 15629 16177 16345 16365 16377 10769 ] AllocGlyphStorage
]def 
124 60 
PrepFor2015
Type42DictEnd

1 0 4 <> Roboto-Medium AddT42Char 
1 4748 37 <000200120000054205b00007000a004700b0004558b0042f1bb104203e59
b0004558b0022f1bb102103e59b0004558b0062f1bb106103e59b2090402
111239b0092fb10001b00a2b5821d81bf459b20a04021112393031012103
210133012101210303c3fdcc76fef90226e30227fef8fd9c01a6d30153fe
ad05b0fa50021f025c00>Roboto-Medium AddT42Char 
1 5094 39 <00010066ffec04eb05c4001d0042b2031e1f11123900b0004558b00c2f1b
b10c203e59b0004558b0032f1bb103103e59b00c10b11301b00a2b5821d8
1bf459b00310b11a01b00a2b5821d81bf459303101060023222402273534
122433320017232626232206071514163332363704eb16fed4f9aefef790
03920111b3f1012618fc12938ea5b102a9a395961401dae9fefba50130c9
88ce013aaafefaef9d8bf1e981ecf8869c00>Roboto-Medium AddT42Char 
1 5410 41 <000100940000044c05b0000b005100b0004558b0062f1bb106203e59b000
4558b0042f1bb104103e59b20b0604111239b00b2fb10001b00a2b5821d8
1bf459b00410b10201b00a2b5821d81bf459b00610b10801b00a2b5821d8
1bf459303101211121152111211521112103e7fdaa02bbfc4803b1fd4c02
56028afe40ca05b0ccfe6e00>Roboto-Medium AddT42Char 
1 8794 69 <0002005affec03fb044e001e00290088b2172a2b111239b01710b020d000
b0004558b0172f1bb1171c3e59b0004558b0042f1bb104103e59b0004558
b0002f1bb100103e59b2021704111239b20b1704111239b00b2fb01710b1
0f01b00a2b5821d81bf459b2120b0f11123940090c121c122c123c12045d
b00410b11f01b00a2b5821d81bf459b00b10b12307b00a2b5821d81bf459
303121262706232226353424333335342623220615233436363332161711
14171525323637352322061514160303100c74a8a3ce0101ef955e60536a
f376cb7dbee20329fdfd487f208387885d1f4679ba89adb9475465534059
9b58bfadfe18925711af463bcc5e56465300>Roboto-Medium AddT42Char 
1 9604 73 <00020053ffec040b044e0015001d0086b2161e1f111239b01610b008d000
b0004558b0082f1bb1081c3e59b0004558b0002f1bb100103e59b21a0008
111239b01a2fb4bf1acf1a025db45f1a6f1a0271b41f1a2f1a0271b4ef1a
ff1a0271b28c1a015db10c07b00a2b5821d81bf459b00010b11001b00a2b
5821d81bf459b2120800111239b00810b11601b00a2b5821d81bf4593031
052200353534363633321211152116163332371706060322060721352626
0259e7fee17de28bddf1fd3d0b9d77a7698341d9a4647b1101cf08721401
23f21ea2ff8efee6fefe62869c877d616b039f8c7d127a7d>Roboto-Medium AddT42Char 
1 9838 74 <0001002d000002d6061500140055b207151611123900b0004558b0082f1b
b108223e59b0004558b0042f1bb1041c3e59b0004558b0002f1bb100103e
59b00410b010d0b11301b00a2b5821d81bf459b001d0b00810b10d01b00a
2b5821d81bf4593031331123353335343633321707262322151533152311
d2a5a5c8b44048062835aedcdc0386b463b4c412be08b360b4fc7a00>Roboto-Medium AddT42Char 
1 10234 76 <00010079000003f8060000100043b20a111211123900b0102fb0004558b0
022f1bb1021c3e59b0004558b00d2f1bb10d103e59b0004558b0062f1bb1
06103e59b00210b10a01b00a2b5821d81bf4593031013633201311231134
2623220711231133016c77b6015a05f3615e9248f3f303c48afe75fd3d02
ba705d82fcfb0600>Roboto-Medium AddT42Char 
1 10362 77 <0002007d0000019005d50003000d003fb2060e0f111239b00610b001d000
b0004558b0022f1bb1021c3e59b0004558b0012f1bb101103e59b00210b0
0cd0b00c2fb1060db00a2b5821d81bf45930312123113301343632161514
062226017ff3f3fefe478448488447043a0119384a4a38374949>Roboto-Medium AddT42Char 
1 10772 80 <0001008c0000017f06000003001d00b0004558b0022f1bb102223e59b000
4558b0002f1bb100103e59303121231133017ff3f3060000>Roboto-Medium AddT42Char 
1 10826 81 <0001007c00000679044e001d0078b2041e1f11123900b0004558b0032f1b
b1031c3e59b0004558b0072f1bb1071c3e59b0004558b0002f1bb1001c3e
59b0004558b01b2f1bb11b103e59b0004558b0152f1bb115103e59b00045
58b00c2f1bb10c103e59b201031b111239b2050715111239b00710b11001
b00a2b5821d81bf459b018d0303101173633321736333216171123113426
232206071323112623220711231101610772c6d95076d6b3af02f35a6853
691501f305be923df3043a7185a6a6c6c1fd3902c067605948fd1a02c8bf
77fcf0043a00>Roboto-Medium AddT42Char 
1 11042 82 <00010079000003f8044e00100054b20b111211123900b0004558b0032f1b
b1031c3e59b0004558b0002f1bb1001c3e59b0004558b00e2f1bb10e103e
59b0004558b0072f1bb107103e59b2010e03111239b00310b10b01b00a2b
5821d81bf45930310117363320131123113426232207112311015e0778c3
015206f359659348f3043a7d91fe7dfd3502bd676385fcfe043a>Roboto-Medium AddT42Char 
1 11188 83 <0002004fffec043d044e000f001a0045b20c1b1c111239b00c10b018d000
b0004558b0042f1bb1041c3e59b0004558b00c2f1bb10c103e59b11201b0
0a2b5821d81bf459b00410b11801b00a2b5821d81bf45930311334363633
320017171406062322003517141632363534262322064f7ee494db01110b
017be596e5feedf38af6898d79778c02279fff89fee6e939a0fc8a0131fe
09a7bdc0b9a4c0bd>Roboto-Medium AddT42Char 
1 11742 86 <0001007c000002b4044e000d0047b2090e0f11123900b0004558b0082f1b
b1081c3e59b0004558b00b2f1bb10b1c3e59b0004558b0052f1bb105103e
59b00b10b10201b00a2b5821d81bf459b2090b0511123930310126232207
11231133173633321702b33033a73af3e806589c3422035c0880fd1c043a
798d0e00>Roboto-Medium AddT42Char 
1 11866 87 <0001004bffec03ca044e0026006bb209272811123900b0004558b0092f1b
b1091c3e59b0004558b01c2f1bb11c103e59b2021c09111239b00210b016
d0b00910b11001b00a2b5821d81bf459b20d1610111239b40c0d1c0d025d
b01c10b12401b00a2b5821d81bf459b2212402111239b403211321025d30
310134262627263534363332161523342623220615141604161615140623
2226263533161633323602db6bf853b6ecb6c2eff3685650655e011ea34f
f2c485d074ec057863606401264144342858a78cbcc099465d4a3e383e3f
577a5792b560a861565d4900>Roboto-Medium AddT42Char 
1 12088 88 <00010008ffec0272054100140054b200151611123900b0004558b0132f1b
b1131c3e59b0004558b00d2f1bb10d103e59b01310b001d0b000d0b0002f
b00110b10401b00a2b5821d81bf459b00d10b10801b00a2b5821d81bf459
b00410b010d0303101113315231114163332371506232011112335331101
adbfbf313f2a2b534dfee8b2b20541fef9b4fda43e370abc1701350265b4
0107>Roboto-Medium AddT42Char 
1 12240 89 <00010077ffec03f7043a00100054b20a111211123900b0004558b0072f1b
b1071c3e59b0004558b00d2f1bb10d1c3e59b0004558b0022f1bb102103e
59b0004558b00f2f1bb10f103e59b200020d111239b00210b10a01b00a2b
5821d81bf45930312506232226351133111433323711331123030c6bc5b0
b5f3abb13ef3e56a7ecec302bdfd46ce7f0309fbc600>Roboto-Medium AddT42Char 
1 12780 93 <0001000cfe4b03d6043a000f0040b200101111123900b0004558b00f2f1b
b10f1c3e59b0004558b0052f1bb105123e59b200050f111239b00f10b001
d0b00510b10901b00a2b5821d81bf4593031011321010223222735173236
3737012101f7dc0103fe5263ed35402e5c5d1b23fe840106015c02defb22
feef12bc03434f5d0435>Roboto-Medium AddT42Char 
1 0 0 <000500640000032805b0000300060009000c000f006fb20c1011111239b0
0c10b000d0b00c10b006d0b00c10b009d0b00c10b00dd000b0004558b002
2f1bb102203e59b0004558b0002f1bb100103e59b2040200111239b20502
00111239b2070200111239b2080200111239b00adcb20c0200111239b20d
0200111239b00210b00edc30312121112103110101110103210135012103
28fd3c02c436feeefeba010ce40203fefe0102fdfd05b0faa40507fd7d02
77fb110278fd5e025e88025e>Roboto-Medium AddT42Char 
Roboto-Medium /CharStrings get begin
/space 4 def
/A 37 def
/C 39 def
/E 41 def
/a 69 def
/e 73 def
/f 74 def
/h 76 def
/i 77 def
/l 80 def
/m 81 def
/n 82 def
/o 83 def
/r 86 def
/s 87 def
/t 88 def
/u 89 def
/y 93 def
end
Roboto-Medium /Encoding get
dup 32 /space put
dup 65 /A put
dup 67 /C put
dup 69 /E put
dup 97 /a put
dup 101 /e put
dup 102 /f put
dup 104 /h put
dup 105 /i put
dup 108 /l put
dup 109 /m put
dup 110 /n put
dup 111 /o put
dup 114 /r put
dup 115 /s put
dup 116 /t put
dup 117 /u put
dup 121 /y put
pop
end
%ADOEndSubsetFont
/FKJHMP+Roboto-Medium /Roboto-Medium findfont ct_VMDictPut/FKJHMP+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /.notdef /E 27{/.notdef}rp /a 3{/.notdef}rp /e /f /.notdef /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMP+Roboto-Medium nfFKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4551 -657.851 mo(Anthony Claret Eufemio)[7.70508 6.67383 3.99023 6.66211 6.83203 6.67383 5.8418 2.98828 7.83398 3.06445 6.49219 4.10742 6.43945 3.99023 2.98828 6.68555 6.66797 4.11328 6.43945 10.4414 3.06445 0 ]xsh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMO+Roboto-Light gcheck setglobal} if

1 0 4 <> FKJHMO+Roboto-Light AddT42Char 
1 1160 10 <0003006cffec04cf05c4001e00290035007bb22d3637111239b02d10b017
d0b02d10b020d000b0004558b0062f1bb1061e3e59b0004558b0132f1bb1
130e3e59b0004558b0182f1bb1180e3e59b20d0613111239b21506131112
39b21e0613111239b11f01b00a2b5821d81bf459b2240613111239b22c06
13111239b00610b13301b00a2b5821d81bf4593031012626353436333216
151407070136353314071723270606232226353436371332363701270706
1514160314173736363534262322060194574fb6998baca6a001905b6f80
c7907e4fcf73d0f47d9daa5bab44fe690e2ec4b431878340526c5a627403
1a69a55199b2a17c908b7cfe2e93baf8abe8924e58d5b26abd76fd414d47
01d80f23a096839f042c7aa6642e6e4a4e697e00>FKJHMO+Roboto-Light AddT42Char 
1 1494 12 <0001008cfe2a026d066000120010b208131411123900b0042fb00f2f3031
1334121237170e02021514121217072602028c70d87c1d4282663f5fa664
1d7fd86d024cda019b01554a512fb4f8fecbc4d1fe7efed94a4d4c015301
9700>FKJHMO+Roboto-Light AddT42Char 
1 1586 13 <00010021fe2a0202066000110010b207121311123900b0042fb00e2f3031
01140202072736121235340202273716121202026dd6811d62a76060a960
1d7ed670023ddcfe69feae4e4d4601260187e5cf0181012f454d4dfeaefe
6400>FKJHMO+Roboto-Light AddT42Char 
1 1780 15 <0001004b0092043104b6000b001b00b0092fb000d0b00910b10601b00a2b
5821d81bf459b003d03031012115211123112135211133027601bbfe4579
fe4e01b27902e470fe1e01e27001d200>FKJHMO+Roboto-Light AddT42Char 
1 1910 17 <000100310250021002b50003001200b0022fb10101b00a2b5821d81bf459
3031012135210210fe2101df02506500>FKJHMO+Roboto-Light AddT42Char 
1 1956 18 <00010091fff8013c009c0008001c00b0004558b0072f1bb1070e3e59b102
05b00a2b5821d81bf4593031373436321614062226912d502e2e502d4823
3131462d2d00>FKJHMO+Roboto-Light AddT42Char 
1 2068 20 <00020078ffec03f705c4000d001b0048b20a1c1d111239b00a10b011d000
b0004558b00a2f1bb10a1e3e59b0004558b0032f1bb1030e3e59b00a10b1
1101b00a2b5821d81bf459b00310b11801b00a2b5821d81bf45930310110
022322020311101233321213073402232206071114123332123703f7e2dc
d8e603e4dbd8e40478a3a5a2a402a9a1a0a501025ffeccfec10139012b01
050133013cfecffed706fa0100faf4fee2f9fef80102f900>FKJHMO+Roboto-Light AddT42Char 
1 2242 21 <000100b2000002b605b50006003a00b0004558b0052f1bb1051e3e59b000
4558b0002f1bb1000e3e59b2040005111239b0042fb10301b00a2b5821d8
1bf459b202030511123930312123110535253302b678fe7401f014052093
70b8>FKJHMO+Roboto-Light AddT42Char 
1 2334 22 <000100690000041905c400190050b2091a1b11123900b0004558b0112f1b
b1111e3e59b0004558b0002f1bb1000e3e59b11801b00a2b5821d81bf459
b002d0b2041100111239b01110b10901b00a2b5821d81bf459b216110011
123930312121350136363534262322061523343636333216151406070121
0419fc7001f37c60a28e93b5776fcd83c8e17fa0fe6a02fd5c02368fba58
8aa1bc967bca73d2b566f2b5fe35>FKJHMO+Roboto-Light AddT42Char 
1 2750 24 <000200430000044b05b0000a000e004a00b0004558b0092f1bb1091e3e59
b0004558b0042f1bb1040e3e59b2010904111239b0012fb10201b00a2b58
21d81bf459b006d0b00110b00bd0b208060b111239b20d09041112393031
0133152311231121350133012111070368e3e378fd5302a283fd6e021a35
01d565fe9001704403fcfc2503405c00>FKJHMO+Roboto-Light AddT42Char 
1 2886 25 <000100a8ffec041605b0001d0069b21a1e1f11123900b0004558b0012f1b
b1011e3e59b0004558b00d2f1bb10d0e3e59b00110b10301b00a2b5821d8
1bf459b207010d111239b0072fb2110d01111239b00d10b11401b00a2b58
21d81bf459b00710b11a01b00a2b5821d81bf459b21d010d111239303113
1321152103363332121514062322262733161633323635342623220607da
4702d8fd8f33759dc5eae4cfbeec117311a88f9c9fb29a557e4602ea02c6
6ffe1450ff00d5e6fed4bf9599c6b7a0ca2b3e00>FKJHMO+Roboto-Light AddT42Char 
1 3086 26 <00020082ffec040805bb001600230065b2032425111239b00310b017d000
b0004558b0002f1bb1001e3e59b0004558b00f2f1bb10f0e3e59b00010b1
0101b00a2b5821d81bf459b208000f111239b0082fb205080f111239b117
01b00a2b5821d81bf459b00f10b11e01b00a2b5821d81bf4593031011523
200003363633321215140606232200353510002503220607151416333236
353426034b0efefbfed4103cba73c0e36ac67fd1fefa01640147db72c521
c39c8cadad05bb69fecdfeef535bfef7d68ee47f012ff078018701ad04fd
9a876866bef0dea9acd0>FKJHMO+Roboto-Light AddT42Char 
1 3306 27 <0001004d0000040a05b00006003300b0004558b0052f1bb1051e3e59b000
4558b0012f1bb1010e3e59b00510b10301b00a2b5821d81bf459b2000305
111239303101012301213521040afd927d026afcc403bd056bfa95054a66
>FKJHMO+Roboto-Light AddT42Char 
1 3666 29 <00020065fff503ec05c4001700240061b21f2526111239b01f10b00bd000
b0004558b00b2f1bb10b1e3e59b0004558b0122f1bb1120e3e59b203120b
111239b0032fb01210b11401b00a2b5821d81bf459b00310b11801b00a2b
5821d81bf459b00b10b11f01b00a2b5821d81bf459303101060623222626
353436363332121115100021233733240025323637353426232206151416
037440be6f7cbe686fc782dbf4feb0fea716012a01050110fea978bf28b9
9d8eb6af02a25e6780e28690ec83fecdfee66cfe76fe7468040120c38f72
45def5e5aea7df00>FKJHMO+Roboto-Light AddT42Char 
1 4388 36 <00020071fe3b06e6058c003600420080b2244344111239b02410b040d000
b02b2fb0332fb0004558b0042f1bb1040e3e59b0004558b0092f1bb1090e
3e59b2073304111239b2103304111239b0102fb00910b13a03b00a2b5821
d81bf459b017d0b03310b11d02b00a2b5821d81bf459b02b10b12402b00a
2b5821d81bf459b01010b13f02b00a2b5821d81bf4593031010e02232226
2706232226373e0233321617030616333236371200212204020212043332
363717060623222402131212243332041201161633323713262322060206
da0562ad72617a146cbe8c8a120f77bf6d4d744d330a4f577b990913fea6
fea1d3feadc4189d013ddb5cb23c1f39cc68fafe98b30c0cdd0180f5ff01
62aafbbb0b5a4ab9582d435b6fa34c020193fb87665cc2f2cda3ff8f2b41
fdc67480f1ce01950199d3fe7efe08fe81ce2c23502633e101a7011b0116
01adebd5fe66fe01646dff020431b1fec900>FKJHMO+Roboto-Light AddT42Char 
1 5096 39 <00010083ffec04bf05c4001c0042b2031d1e11123900b0004558b00c2f1b
b10c1e3e59b0004558b0032f1bb1030e3e59b00c10b11201b00a2b5821d8
1bf459b00310b11901b00a2b5821d81bf459303101060423222602273534
1236333204172302212202111514123332363704bf19fee9e8a2f9880188
ffa6ea010f167c2efe9bc6ebe5c3c1c41701c6e6f4a20129bfbdc2012ca3
fddf0173fed8fefbb2fcfed4b9b9>FKJHMO+Roboto-Light AddT42Char 
1 5416 41 <000100b80000044205b0000b005600b0004558b0062f1bb1061e3e59b000
4558b0042f1bb1040e3e59b20b0604111239b00b2fb22f0b015db10001b0
0a2b5821d81bf459b00410b10201b00a2b5821d81bf459b00610b10801b0
0a2b5821d81bf459303101211121152111211521112103dcfd57030ffc76
0385fcf602a902bafdae6805b069fddb>FKJHMO+Roboto-Light AddT42Char 
1 5552 42 <000100b80000043e05b00009004400b0004558b0042f1bb1041e3e59b000
4558b0022f1bb1020e3e59b20904021112397cb0092f18b10001b00a2b58
21d81bf459b00410b10601b00a2b5821d81bf45930310121112311211521
112103dafd597b0386fcf502a702a8fd5805b069fdca>FKJHMO+Roboto-Light AddT42Char 
1 6518 50 <000100b8000004f405b00009004cb2010a0b11123900b0004558b0052f1b
b1051e3e59b0004558b0082f1bb1081e3e59b0004558b0002f1bb1000e3e
59b0004558b0032f1bb1030e3e59b2020500111239b20705001112393031
2123011123113301113304f47bfcbb7c7c03467a04defb2205b0fb2104df
>FKJHMO+Roboto-Light AddT42Char 
1 7172 54 <000200b5000004bb05b0000e00170063b2161819111239b01610b005d000
b0004558b0042f1bb1041e3e59b0004558b0022f1bb1020e3e59b0004558
b00d2f1bb10d0e3e59b2100402111239b0102fb10001b00a2b5821d81bf4
59b20b0004111239b00410b11601b00a2b5821d81bf45930310121112311
2132041514060701152301213236353426232102d8fe597c01d9e90106a4
8a016c83fcf901799bbcc4b1fea5025efda205b0e2cb8cd629fd950d02c7
b08c9aaa>FKJHMO+Roboto-Light AddT42Char 
1 7578 56 <000100340000049405b00007002f00b0004558b0062f1bb1061e3e59b000
4558b0022f1bb1020e3e59b00610b10001b00a2b5821d81bf459b004d030
3101211123112135210494fe0d7bfe0e04600547fab905476900>FKJHMO+Roboto-Light AddT42Char 
1 7664 57 <000100a2ffec04a305b00011003db205121311123900b0004558b0002f1b
b1001e3e59b0004558b0092f1bb1091e3e59b0004558b0052f1bb1050e3e
59b10e01b00a2b5821d81bf459303101110e022322242711331114162036
351104a30180e997e6feeb057ad20168d105b0fc1e93da75fbde03ebfc27
b8cbccb603da>FKJHMO+Roboto-Light AddT42Char 
1 8798 69 <00020064ffec03c7044e001e00290088b2172a2b111239b01710b020d000
b0004558b0172f1bb1171a3e59b0004558b0002f1bb1000e3e59b0004558
b0052f1bb1050e3e59b2021700111239b20c1700111239b00c2fb42f0c3f
0c025db01710b11001b00a2b5821d81bf459b213170c1112397cb0132f18
b00510b11f01b00a2b5821d81bf459b00c10b12301b00a2b5821d81bf459
303121262706062322263534243333353426232206152734363332161711
1417152532363735230606151416034712053fc36d9cc10107ebd98f897d
a478f0afb5d10321fe0878bd2bd6b3ca8733645259ae859eb87b7485805a
0181bdb5a2fe009d4e0c567461ee027f6f5b7800>FKJHMO+Roboto-Light AddT42Char 
1 9058 70 <0002009bffec04030600000f001b0066b2131c1d111239b01310b00cd000
b0082fb0004558b00c2f1bb10c1a3e59b0004558b0062f1bb1060e3e59b0
004558b0032f1bb1030e3e59b2050c06111239b20a0c06111239b00c10b1
1301b00a2b5821d81bf459b00310b11901b00a2b5821d81bf45930310114
02232227072311331136333212112734262322060711163332360403e0bd
e27405707772e0c0df78a69773a0295ae494a70212fdfed7a8940600fd9d
b1fedbfefb03d6e9716dfe18ccea>FKJHMO+Roboto-Light AddT42Char 
1 9252 71 <0001005effec03cc044e001d004db2101e1f11123900b0004558b0102f1b
b1101a3e59b0004558b0082f1bb1080e3e59b10001b00a2b5821d81bf459
b2030810111239b2141008111239b01010b11701b00a2b5821d81bf45930
3125323637330e0223220235353436363332161723262623220615151416
022c7da907730572bd6cd5f970d18cb2e7087308a77fa2b3b3518d7063a3
5c0128fa24a0f686d4ad7f9cead323cfe800>FKJHMO+Roboto-Light AddT42Char 
1 9420 72 <0002006cffec03d30600000f001a0063b2181b1c111239b01810b003d000
b0062fb0004558b0032f1bb1031a3e59b0004558b0082f1bb1080e3e59b0
004558b00c2f1bb10c0e3e59b2050308111239b20a0308111239b11301b0
0a2b5821d81bf459b00310b11801b00a2b5821d81bf45930311334123332
171133112327062322021117141633323711262322066ce1c1db73777005
73dfbbe579a697dd5d5ddb97a80227fc012bad025ffa0090a4012d010007
cfefc301fcd3ed00>FKJHMO+Roboto-Light AddT42Char 
1 9608 73 <0002005affec03d5044e0017001f0065b2092021111239b00910b018d000
b0004558b0092f1bb1091a3e59b0004558b0002f1bb1000e3e59b21c0900
111239b01c2fb10d01b00a2b5821d81bf459b00010b11201b00a2b5821d8
1bf459b2150900111239b00910b11801b00a2b5821d81bf4593031052226
263535343636333212151521151416333236371706012206072135262602
3f8adf7c79d87ec5e7fcfcd3a060933c4b84feef87b914028905a81488f3
972b9cfa8ffef3e94317b8f5464d39bf03fcc6a70d9cc400>FKJHMO+Roboto-Light AddT42Char 
1 9984 75 <0002006cfe5103d4044e001a00260086b2242728111239b02410b00bd000
b0004558b0032f1bb1031a3e59b0004558b0062f1bb1061a3e59b0004558
b00b2f1bb10b103e59b0004558b0172f1bb1170e3e59b2050317111239b2
0f0b17111239b00b10b11101b00a2b5821d81bf459b2150317111239b017
10b11e01b00a2b5821d81bf459b00310b12401b00a2b5821d81bf4593031
133412333217373311140623222627371633323637350623220235171416
3332371126262322066ce1c1dd730670eac871cd3b437faf96a80373dcbc
e479a697dd5c2a9e6f97a80227fe0129b09cfbdcd1f46554489cb19d88a0
012cff05cfefc601f7686ded>FKJHMO+Roboto-Light AddT42Char 
1 10380 77 <000200950000013a05c40003000c003fb2060d0e111239b00610b001d000
b0004558b0022f1bb1021a3e59b0004558b0002f1bb1000e3e59b00210b0
0bd0b00b2fb10605b00a2b5821d81bf45930312123113303343632161406
2226012278788d2c4c2d2d4c2c043a0139222f2f442e2e00>FKJHMO+Roboto-Light AddT42Char 
1 10784 80 <000100aa0000012206000003001d00b0004558b0022f1bb102203e59b000
4558b0002f1bb1000e3e5930312123113301227878060000>FKJHMO+Roboto-Light AddT42Char 
1 11066 82 <0001009c000003cc044e00130054b20d141511123900b0004558b0042f1b
b1041a3e59b0004558b0002f1bb1001a3e59b0004558b0082f1bb1080e3e
59b0004558b0112f1bb1110e3e59b2010408111239b00410b10d01b00a2b
5821d81bf45930310117363633321617112311262623220607112311010e
043db66eaeaa01770179856fab2977043ab96469c4c4fd3a02c7918e8b76
fd1b043a>FKJHMO+Roboto-Light AddT42Char 
1 11220 83 <0002005affec0420044e000f001e0045b2041f20111239b00410b013d000
b0004558b0042f1bb1041a3e59b0004558b00c2f1bb10c0e3e59b11301b0
0a2b5821d81bf459b00410b11b01b00a2b5821d81bf45930311334363633
32001515140606232200351714163332363535342626232206155a79dd8c
d8010c79dc8dd7fef378c9a3a2c95ca66ba0ca022d9cfa8bfed1fa199dfb
88012ffa09c2f9f9cc177cce71fbcb00>FKJHMO+Roboto-Light AddT42Char 
1 12142 88 <00010017ffec0249054f00150061b20e161711123900b0004558b0012f1b
b1011a3e59b0004558b0132f1bb1131a3e59b0004558b00d2f1bb10d0e3e
59b00110b000d0b0002fb00110b10301b00a2b5821d81bf459b00d10b108
01b00a2b5821d81bf459b00310b011d0b012d03031011133152311141633
323717062322263511233533110156e0e0414c1e43052f517b70c7c7054f
feeb62fd2f5a580a62118f8b02d262011500>FKJHMO+Roboto-Light AddT42Char 
1 12718 92 <00010030000003b2043a000b005300b0004558b0012f1bb1011a3e59b000
4558b00a2f1bb10a1a3e59b0004558b0042f1bb1040e3e59b0004558b007
2f1bb1070e3e59b2000a04111239b2060a04111239b2030006111239b209
0600111239303101013301012301012301013301f001248efe91017f8dfe
ccfecc8d017efe918d028301b7fdedfdd901cafe360227021300>FKJHMO+Roboto-Light AddT42Char 
FKJHMO+Roboto-Light /CharStrings get begin
/space 4 def
/ampersand 10 def
/parenleft 12 def
/parenright 13 def
/plus 15 def
/hyphen 17 def
/period 18 def
/zero 20 def
/one 21 def
/two 22 def
/four 24 def
/five 25 def
/six 26 def
/seven 27 def
/nine 29 def
/at 36 def
/C 39 def
/E 41 def
/F 42 def
/N 50 def
/R 54 def
/T 56 def
/U 57 def
/a 69 def
/b 70 def
/c 71 def
/d 72 def
/e 73 def
/g 75 def
/i 77 def
/l 80 def
/n 82 def
/o 83 def
/t 88 def
/x 92 def
end
FKJHMO+Roboto-Light /Encoding get
dup 32 /space put
dup 38 /ampersand put
dup 40 /parenleft put
dup 41 /parenright put
dup 43 /plus put
dup 45 /hyphen put
dup 46 /period put
dup 48 /zero put
dup 49 /one put
dup 50 /two put
dup 52 /four put
dup 53 /five put
dup 54 /six put
dup 55 /seven put
dup 57 /nine put
dup 64 /at put
dup 67 /C put
dup 69 /E put
dup 70 /F put
dup 78 /N put
dup 82 /R put
dup 84 /T put
dup 85 /U put
dup 97 /a put
dup 98 /b put
dup 99 /c put
dup 100 /d put
dup 101 /e put
dup 103 /g put
dup 105 /i put
dup 108 /l put
dup 110 /n put
dup 111 /o put
dup 116 /t put
dup 120 /x put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMO+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /seven /.notdef /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /.notdef /I 2{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /.notdef /T /U 2{/.notdef}rp /X 8{/.notdef}rp /a /b /c /d /e /.notdef /g /.notdef /i 2{/.notdef}rp /l /.notdef /n /o 4{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]FKJHMO+Roboto-Light nfFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4551 -646.851 mo(CO-FOUNDER & CTO)[7.11523 7.33398 4.20898 6.42041 7.33398 7.17773 7.59961 7.1582 6.4707 6.99854 3.86523 6.8418 3.86523 7.00195 6.58789 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf41.3398 -623.081 mo(e)shFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf45.2363 -623.081 mo( ace@digix.global      )[1.84229 3.88916 3.74609 3.75635 6.53174 4.0293 1.70898 4.02295 1.7085 3.54443 1.81152 4.02295 1.7085 4.06055 4.01953 3.88965 1.7085 1.84229 1.84229 1.8418 1.84229 1.84229 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf112.291 -623.081 mo(m )[6.23096 0 ]xshFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf120.404 -623.081 mo(+1 \(206\) 775 2594      )[4.09131 4.01904 1.84229 2.37207 4.01953 4.01904 4.01953 2.41992 1.8418 4.01953 4.01953 4.01953 1.8418 4.01953 4.01953 4.01953 4.01904 1.84229 1.84229 1.8418 1.84229 1.84229 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf190.08 -623.081 mo(s )[3.75293 0 ]xshFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf195.716 -623.081 mo(tonton.e)[2.3208 4.06006 3.98535 2.3208 4.06055 3.98486 1.81152 0 ]xsh546.25 -591.613 mo
288.427 -591.613 li
288.427 -764.531 li
546.25 -764.531 li
546.25 -591.613 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.563 -725.506 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.563 -714.506 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.341 -733.492 mo
365.54 -733.492 li
365.54 -712.186 li
319.341 -712.186 li
cp
clp
319.341 -727.016 mo
334.779 -727.016 li
334.779 -733.492 li
319.341 -733.492 li
cp
f
336.61 -733.492 mo
336.61 -724.97 li
319.341 -724.97 li
319.341 -712.187 li
341.544 -712.187 li
341.544 -733.492 li
cp
324.275 -720.484 mo
336.61 -720.484 li
336.61 -716.672 li
324.275 -716.672 li
cp
f
343.338 -733.492 mo
343.338 -712.187 li
365.54 -712.187 li
365.54 -724.97 li
352.084 -724.97 li
352.084 -720.484 li
360.606 -720.484 li
360.606 -716.672 li
348.272 -716.672 li
348.272 -729.007 li
365.54 -729.007 li
365.54 -733.492 li
cp
f
grestore
FKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.341 -657.851 mo(Anthony Claret Eufemio)[7.70508 6.67383 3.99023 6.66211 6.83203 6.67383 5.8418 2.98828 7.83398 3.06445 6.49219 4.10742 6.43945 3.99023 2.98828 6.68555 6.66797 4.11328 6.43945 10.4414 3.06445 0 ]xshFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.341 -646.851 mo(CO-FOUNDER & CTO)[7.11523 7.33398 4.20898 6.42041 7.33398 7.17773 7.59961 7.1582 6.4707 6.99854 3.86523 6.8418 3.86523 7.00195 6.58789 0 ]xshFKJHMP+Roboto-Medium*1 [6.8 0 0 -6.8 0 0 ]msf319.225 -623.231 mo(e)shFKJHMO+Roboto-Light*1 [6.8 0 0 -6.8 0 0 ]msf323.01 -623.231 mo( ace@digix.global      )[1.78955 3.77832 3.63916 3.64844 6.34521 3.91406 1.66016 3.90771 1.66016 3.44287 1.75977 3.90771 1.66016 3.94434 3.90479 3.77832 1.66016 1.78955 1.78906 1.78955 1.78906 1.78955 0 ]xshFKJHMP+Roboto-Medium*1 [6.8 0 0 -6.8 0 0 ]msf388.147 -623.231 mo(m )[6.05322 0 ]xshFKJHMO+Roboto-Light*1 [6.8 0 0 -6.8 0 0 ]msf396.029 -623.231 mo(+1 \(206\) 775 2594      )[3.97461 3.9043 1.78955 2.30371 3.90479 3.9043 3.90479 2.35059 1.78955 3.9043 3.90479 3.9043 1.78955 3.9043 3.90479 3.9043 3.90479 1.78955 1.78906 1.78955 1.78906 1.78955 0 ]xshFKJHMP+Roboto-Medium*1 [6.8 0 0 -6.8 0 0 ]msf463.712 -623.231 mo(s )[3.646 0 ]xshFKJHMO+Roboto-Light*1 [6.8 0 0 -6.8 0 0 ]msf469.188 -623.231 mo(tonton.e)[2.25439 3.94434 3.87158 2.25391 3.94482 3.87109 1.75977 0 ]xsh268.364 -398.695 mo
10.5416 -398.695 li
10.5416 -571.613 li
268.364 -571.613 li
268.364 -398.695 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6777 -532.589 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6777 -521.589 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4554 -540.574 mo
87.6551 -540.574 li
87.6551 -519.269 li
41.4554 -519.269 li
cp
clp
41.4554 -534.098 mo
56.894 -534.098 li
56.894 -540.574 li
41.4554 -540.574 li
cp
.012 .144 .998 0 cmyk
f
58.7243 -540.574 mo
58.7243 -532.052 li
41.4555 -532.052 li
41.4555 -519.269 li
63.6583 -519.269 li
63.6583 -540.574 li
cp
46.3893 -527.567 mo
58.7243 -527.567 li
58.7243 -523.754 li
46.3893 -523.754 li
cp
.949 .859 .441 .484 cmyk
f
65.4524 -540.574 mo
65.4524 -519.269 li
87.6551 -519.269 li
87.6551 -532.052 li
74.1989 -532.052 li
74.1989 -527.567 li
82.721 -527.567 li
82.721 -523.754 li
70.3863 -523.754 li
70.3863 -536.089 li
87.6551 -536.089 li
87.6551 -540.574 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMP+Roboto-Medium gcheck setglobal} if
1 6128 47 <000100940000051805b0000c005300b0004558b0042f1bb104203e59b000
4558b0082f1bb108203e59b0004558b0022f1bb102103e59b0004558b00b
2f1bb10b103e59b2000402111239b46a007a00025db2060402111239b465
067506025d3031010711231133113701210101210236a5fdfd8c01aa0132
fde3023cfed40275affe3a05b0fd55ad01fefd7bfcd5>FKJHMP+Roboto-Medium AddT42Char 
1 9986 75 <00020052fe56040c044e001900240086b2222526111239b02210b00bd000
b0004558b0032f1bb1031c3e59b0004558b0062f1bb1061c3e59b0004558
b00b2f1bb10b123e59b0004558b0172f1bb117103e59b2050317111239b0
0b10b11101b00a2b5821d81bf459b20f1117111239b2150317111239b017
10b11d01b00a2b5821d81bf459b00310b12201b00a2b5821d81bf4593031
133412333217373311140423222627371633323635350623220237141633
3237112623220652edc4b96a0bdbfef7e177e33b7370a4798c69afbef1f2
85769347459378850225fc012d816dfbe7d5f663509285837f4975012ef6
a3bb7e01dc7bbe00>FKJHMP+Roboto-Medium AddT42Char 
FKJHMP+Roboto-Medium /CharStrings get begin
/K 47 def
/g 75 def
end
FKJHMP+Roboto-Medium /Encoding get
dup 75 /K put
dup 103 /g put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMP+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /.notdef /E 5{/.notdef}rp /K 21{/.notdef}rp /a 3{/.notdef}rp /e /f /g /h /i 2{/.notdef}rp /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMP+Roboto-Medium nfFKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4551 -464.933 mo(KC Chng)[7.38281 7.83398 2.98828 7.83398 6.66211 6.67383 0 ]xsh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMO+Roboto-Light gcheck setglobal} if
1 10236 76 <0001009c000003cc06000013004ab20c141511123900b0122fb0004558b0
032f1bb1031a3e59b0004558b0072f1bb1070e3e59b0004558b0102f1bb1
100e3e59b2000307111239b00310b10c01b00a2b5821d81bf45930310136
36333216171123112626232206071123113301133bb86daeaa0177017985
6fab2977770383616ac4c4fd3a02c7918e8b76fd1b060000>FKJHMO+Roboto-Light AddT42Char 
1 10646 79 <0001009c000003e20600000c005100b0004558b0042f1bb104203e59b000
4558b0082f1bb1081a3e59b0004558b0022f1bb1020e3e59b0004558b00b
2f1bb10b0e3e59b20a0208111239b00a10b000d0b2060802111239b00610
b001d0303101071123113311370133010123019d89787871019e97fe3501
f38f022184fe630600fc297a0197fe38fd8e>FKJHMO+Roboto-Light AddT42Char 
FKJHMO+Roboto-Light /CharStrings get begin
/h 76 def
/k 79 def
end
FKJHMO+Roboto-Light /Encoding get
dup 104 /h put
dup 107 /k put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMO+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /seven /.notdef /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /.notdef /I 2{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /.notdef /T /U 2{/.notdef}rp /X 8{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /.notdef /k /l /.notdef /n /o 4{/.notdef}rp /t 3{/.notdef}rp /x 135{/.notdef}rp]FKJHMO+Roboto-Light nfFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4551 -453.933 mo(CO-FOUNDER & CEO)[7.11523 7.33398 4.20898 6.42041 7.33398 7.17773 7.59961 7.1582 6.4707 6.99854 3.86523 6.8418 3.86523 7.11523 6.4707 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf41.3398 -430.163 mo(e)shFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf45.2363 -430.163 mo( kcchng@digix.global      )[1.84229 3.49951 3.74609 3.74609 3.98193 3.98486 4.02295 6.53174 4.0293 1.70898 4.02295 1.70898 3.54395 1.81152 4.02295 1.70898 4.06006 4.01953 3.88965 1.7085 1.84229 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf123.88 -430.163 mo(m )[6.23096 0 ]xshFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf131.994 -430.163 mo(+65 9150 2066      )[4.09131 4.01904 4.01953 1.84229 4.01953 4.01904 4.01953 4.01953 1.8418 4.01953 4.01953 4.01953 4.01904 1.84229 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf191.017 -430.163 mo(s )[3.75293 0 ]xshFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf196.652 -430.163 mo(kc.chng)[3.5 3.74561 1.81152 3.74609 3.98193 3.98486 0 ]xsh546.25 -398.695 mo
288.427 -398.695 li
288.427 -571.613 li
546.25 -571.613 li
546.25 -398.695 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.563 -532.589 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.563 -521.589 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.341 -540.574 mo
365.54 -540.574 li
365.54 -519.269 li
319.341 -519.269 li
cp
clp
319.341 -534.098 mo
334.779 -534.098 li
334.779 -540.574 li
319.341 -540.574 li
cp
f
336.61 -540.574 mo
336.61 -532.052 li
319.341 -532.052 li
319.341 -519.269 li
341.544 -519.269 li
341.544 -540.574 li
cp
324.275 -527.567 mo
336.61 -527.567 li
336.61 -523.754 li
324.275 -523.754 li
cp
f
343.338 -540.574 mo
343.338 -519.269 li
365.54 -519.269 li
365.54 -532.052 li
352.084 -532.052 li
352.084 -527.567 li
360.606 -527.567 li
360.606 -523.754 li
348.272 -523.754 li
348.272 -536.089 li
365.54 -536.089 li
365.54 -540.574 li
cp
f
grestore
FKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.341 -464.933 mo(KC Chng)[7.38281 7.83398 2.98828 7.83398 6.66211 6.67383 0 ]xshFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.341 -453.933 mo(CO-FOUNDER & CEO)[7.11523 7.33398 4.20898 6.42041 7.33398 7.17773 7.59961 7.1582 6.4707 6.99854 3.86523 6.8418 3.86523 7.11523 6.4707 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf319.225 -430.163 mo(e)shFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf323.122 -430.163 mo( kcchng@digix.global      )[1.84229 3.49951 3.74609 3.74609 3.98193 3.98486 4.02295 6.53174 4.0293 1.70898 4.02295 1.70898 3.54395 1.81152 4.02295 1.70898 4.06006 4.01953 3.88965 1.7085 1.84229 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf401.766 -430.163 mo(m )[6.23096 0 ]xshFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf409.879 -430.163 mo(+65 9150 2066      )[4.09131 4.01904 4.01953 1.84229 4.01953 4.01904 4.01953 4.01953 1.8418 4.01953 4.01953 4.01953 4.01904 1.84229 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf468.902 -430.163 mo(s )[3.75293 0 ]xshFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf474.538 -430.163 mo(kc.chng)[3.5 3.74561 1.81152 3.74609 3.98193 3.98486 0 ]xsh268.364 -205.777 mo
10.5416 -205.777 li
10.5416 -378.695 li
268.364 -378.695 li
268.364 -205.777 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6777 -339.671 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6777 -328.671 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4554 -347.656 mo
87.6551 -347.656 li
87.6551 -326.351 li
41.4554 -326.351 li
cp
clp
41.4554 -341.18 mo
56.894 -341.18 li
56.894 -347.656 li
41.4554 -347.656 li
cp
.012 .144 .998 0 cmyk
f
58.7243 -347.656 mo
58.7243 -339.134 li
41.4555 -339.134 li
41.4555 -326.351 li
63.6583 -326.351 li
63.6583 -347.656 li
cp
46.3893 -334.649 mo
58.7243 -334.649 li
58.7243 -330.836 li
46.3893 -330.836 li
cp
.949 .859 .441 .484 cmyk
f
65.4524 -347.656 mo
65.4524 -326.351 li
87.6551 -326.351 li
87.6551 -339.134 li
74.1989 -339.134 li
74.1989 -334.649 li
82.721 -334.649 li
82.721 -330.836 li
70.3863 -330.836 li
70.3863 -343.171 li
87.6551 -343.171 li
87.6551 -347.656 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMP+Roboto-Medium gcheck setglobal} if
1 5262 40 <00020094000004d205b0000b00150048b2021617111239b00210b015d000
b0004558b0012f1bb101203e59b0004558b0002f1bb100103e59b00110b1
0c01b00a2b5821d81bf459b00010b10d01b00a2b5821d81bf45930313311
21320412151514020423031133323637353426239401aec1012ba4a5fecf
c5a6a5c7d502cec405b0acfec4cc49cffec6aa04e4fbe6f9e951edfa>FKJHMP+Roboto-Medium AddT42Char 
1 7348 55 <0001004affec048a05c400270066b211282911123900b0004558b0092f1b
b109203e59b0004558b01d2f1bb11d103e59b2021d09111239b20e091d11
1239b00910b11101b00a2b5821d81bf459b00210b11701b00a2b5821d81b
f459b2221d09111239b01d10b12501b00a2b5821d81bf459303101342624
272635342433321616152334262322061514160416161514042322242635
331416333236038d87fea068c7011fe598ee88fc8f857c89940154ce60fe
e9ef9efef793fda4998485017760686a417dc9b0e470cf7e72816a5f506b
6581a770b6d775ce897c886b>FKJHMP+Roboto-Medium AddT42Char 
1 10478 78 <0002ffb5fe4b018505d5000c0016004bb2031718111239b00310b010d000
b0004558b00c2f1bb10c1c3e59b0004558b0042f1bb104123e59b10901b0
0a2b5821d81bf459b00c10b015d0b0152fb10f0db00a2b5821d81bf45930
310111140623222735163332371103343632161514062226017aa59f433e
2630790315478448488447043afb66a6af11c0098404a30119384a4a3837
4949>FKJHMP+Roboto-Medium AddT42Char 
FKJHMP+Roboto-Medium /CharStrings get begin
/D 40 def
/S 55 def
/j 78 def
end
FKJHMP+Roboto-Medium /Encoding get
dup 68 /D put
dup 83 /S put
dup 106 /j put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMP+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /D /E 5{/.notdef}rp /K 7{/.notdef}rp /S 13{/.notdef}rp /a 3{/.notdef}rp /e /f /g /h /i /j /.notdef /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMP+Roboto-Medium nfFKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4551 -272.015 mo(Shaun Djie)sh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMO+Roboto-Light gcheck setglobal} if
1 3396 28 <0003006affec040905c400160020002c0083b2242d2e111239b02410b009
d0b02410b01ed000b0004558b0142f1bb1141e3e59b0004558b0092f1bb1
090e3e59b22a0914111239b02a2fb25f2a015db22f2a015db44f2a5f2a02
71b11a01b00a2b5821d81bf459b2032a1a111239b20f1a2a111239b00910
b11e01b00a2b5821d81bf459b01410b12401b00a2b5821d81bf459303101
140607161615140623222635343637262635343620160334262006101633
323603342623220615141633323603e3846c7e98fed1d3fd927f6c80e901
80eb52c2fed2c0ba9f9bbc26ad8688a9a98987ab043971b32a2bc07ebbdb
dabc7cc22b2ab371b5d6d8fc9588afacfeeaa5a403457da7a183809c9d00
>FKJHMO+Roboto-Light AddT42Char 
1 10494 78 <0002ff98fe4b013505c4000c0016004bb20d1718111239b00d10b000d000
b0004558b00c2f1bb10c1a3e59b0004558b0042f1bb104103e59b10901b0
0a2b5821d81bf459b00c10b013d0b0132fb10d05b00a2b5821d81bf45930
310111140623222737163332351113321614062322263436011d908c3633
022c2eb23c272c2c27262b2b043afb45969e13630dcd04b9018a2f442e2e
442f>FKJHMO+Roboto-Light AddT42Char 
1 11920 87 <00010065ffec039c044e0025006db209262711123900b0004558b0092f1b
b1091a3e59b0004558b01c2f1bb11c0e3e59b2021c09111239b20d091c11
1239b42b0d3b0d025db00910b11001b00a2b5821d81bf459b00210b11601
b00a2b5821d81bf459b2201c09111239b01c10b12301b00a2b5821d81bf4
593031013426242626353436333216152334262322061514160416161514
062322263533161633323603248ffee09f4dd6a7b5db789f79768f77013b
9d4cddb2bdeb7807a3867d9a0113596c3d4f725180a7b3905f7e69545159
4a54765489a4b78c69756e00>FKJHMO+Roboto-Light AddT42Char 
1 12310 89 <00010098ffec03ca043a00100051b20a111211123900b0004558b0062f1b
b1061a3e59b0004558b00d2f1bb10d1a3e59b0004558b00f2f1bb10f0e3e
59b0004558b0022f1bb1020e3e59b2000d0f111239b10a01b00a2b5821d8
1bf4593031250623222627113311103320371133112303546cedadb40277
fa0104457874899dc9c502c0fd4ffecbd7030ffbc600>FKJHMO+Roboto-Light AddT42Char 
FKJHMO+Roboto-Light /CharStrings get begin
/eight 28 def
/j 78 def
/s 87 def
/u 89 def
end
FKJHMO+Roboto-Light /Encoding get
dup 56 /eight put
dup 106 /j put
dup 115 /s put
dup 117 /u put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMO+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /.notdef /four /five /six /seven /eight /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /.notdef /I 2{/.notdef}rp /L /.notdef /N /O 2{/.notdef}rp /R /.notdef /T /U 2{/.notdef}rp /X 8{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /j /k /l /.notdef /n /o 3{/.notdef}rp /s /t /u 2{/.notdef}rp /x 135{/.notdef}rp]FKJHMO+Roboto-Light nfFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4551 -261.015 mo(CO-FOUNDER & COO)[7.11523 7.33398 4.20898 6.42041 7.33398 7.17773 7.59961 7.1582 6.4707 6.99854 3.86523 6.8418 3.86523 7.11523 7.33398 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf41.3398 -237.245 mo(e)shFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf45.2363 -237.245 mo( shaundjie@digix.global      )[1.84229 3.68408 3.98193 3.88965 3.98535 3.98486 4.02979 1.73633 1.7085 3.75635 6.53174 4.02979 1.7085 4.02295 1.70898 3.54443 1.81104 4.02295 1.70898 4.06006 4.01953 3.88965 1.70898 1.8418 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf131.656 -237.245 mo(m )[6.23096 0 ]xshFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf139.77 -237.245 mo(+65 8112 2578      )[4.09131 4.01904 4.01953 1.84229 4.01953 4.01904 4.01953 4.01953 1.8418 4.01953 4.01953 4.01953 4.01904 1.84229 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf198.792 -237.245 mo(s )[3.75293 0 ]xshFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf204.428 -237.245 mo(shaun.djie)[3.68457 3.98145 3.88965 3.98535 3.98535 1.81104 4.02979 1.73633 1.7085 0 ]xsh546.25 -205.777 mo
288.427 -205.777 li
288.427 -378.695 li
546.25 -378.695 li
546.25 -205.777 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.563 -339.671 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.563 -328.671 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.341 -347.656 mo
365.54 -347.656 li
365.54 -326.351 li
319.341 -326.351 li
cp
clp
319.341 -341.18 mo
334.779 -341.18 li
334.779 -347.656 li
319.341 -347.656 li
cp
f
336.61 -347.656 mo
336.61 -339.134 li
319.341 -339.134 li
319.341 -326.351 li
341.544 -326.351 li
341.544 -347.656 li
cp
324.275 -334.649 mo
336.61 -334.649 li
336.61 -330.836 li
324.275 -330.836 li
cp
f
343.338 -347.656 mo
343.338 -326.351 li
365.54 -326.351 li
365.54 -339.134 li
352.084 -339.134 li
352.084 -334.649 li
360.606 -334.649 li
360.606 -330.836 li
348.272 -330.836 li
348.272 -343.171 li
365.54 -343.171 li
365.54 -347.656 li
cp
f
grestore
FKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.341 -272.015 mo(Shaun Djie)shFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.341 -261.015 mo(CO-FOUNDER & COO)[7.11523 7.33398 4.20898 6.42041 7.33398 7.17773 7.59961 7.1582 6.4707 6.99854 3.86523 6.8418 3.86523 7.11523 7.33398 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf319.225 -237.245 mo(e)shFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf323.122 -237.245 mo( shaundjie@digix.global      )[1.84229 3.68408 3.98193 3.88965 3.98535 3.98486 4.02979 1.73633 1.7085 3.75635 6.53174 4.02979 1.7085 4.02295 1.70898 3.54443 1.81104 4.02295 1.70898 4.06006 4.01953 3.88965 1.70898 1.8418 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf409.541 -237.245 mo(m )[6.23096 0 ]xshFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf417.655 -237.245 mo(+65 8112 2578      )[4.09131 4.01904 4.01953 1.84229 4.01953 4.01904 4.01953 4.01953 1.8418 4.01953 4.01953 4.01953 4.01904 1.84229 1.84229 1.84229 1.8418 1.84229 0 ]xshFKJHMP+Roboto-Medium*1 [7 0 0 -7 0 0 ]msf476.677 -237.245 mo(s )[3.75293 0 ]xshFKJHMO+Roboto-Light*1 [7 0 0 -7 0 0 ]msf482.313 -237.245 mo(shaun.djie)[3.68457 3.98145 3.88965 3.98535 3.98535 1.81104 4.02979 1.73633 1.7085 0 ]xsh268.327 180.058 mo
10.504 180.058 li
10.504 7.14008 li
268.327 7.14008 li
268.327 180.058 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6396 46.165 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6396 57.165 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4176 38.1793 mo
87.6173 38.1793 li
87.6173 59.485 li
41.4176 59.485 li
cp
clp
41.4176 44.6558 mo
56.8561 44.6558 li
56.8561 38.1793 li
41.4176 38.1793 li
cp
.012 .144 .998 0 cmyk
f
58.6865 38.1792 mo
58.6865 46.7017 li
41.4177 46.7017 li
41.4177 59.4849 li
63.6204 59.4849 li
63.6204 38.1792 li
cp
46.3514 51.1869 mo
58.6865 51.1869 li
58.6865 54.9995 li
46.3514 54.9995 li
cp
.949 .859 .441 .484 cmyk
f
65.4145 38.1792 mo
65.4145 59.4849 li
87.6173 59.4849 li
87.6173 46.7017 li
74.1611 46.7017 li
74.1611 51.1869 li
82.6831 51.1869 li
82.6831 54.9997 li
70.3485 54.9997 li
70.3485 42.6649 li
87.6173 42.6649 li
87.6173 38.1792 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMP+Roboto-Medium gcheck setglobal} if
1 5846 44 <000100940000051805b0000b004d00b0004558b0062f1bb106203e59b000
4558b00a2f1bb10a203e59b0004558b0002f1bb100103e59b0004558b004
2f1bb104103e59b2090600111239b0092fb10201b00a2b5821d81bf45930
312123112111231133112111330518fcfd75fdfd028bfc0287fd7905b0fd
a2025e00>FKJHMP+Roboto-Medium AddT42Char 
1 9246 71 <0001004fffec03f5044e001c004db2001d1e11123900b0004558b00f2f1b
b10f1c3e59b0004558b0082f1bb108103e59b10001b00a2b5821d81bf459
b203080f111239b2130f08111239b00f10b11601b00a2b5821d81bf45930
3125323637330e0223220011353400333216172326262322060715141602
395b7804e50476ca75e3fef60108e4c1f306e504775c7680017fae6a4e65
af660126010319f70129e1b75d78abae27b0ad00>FKJHMP+Roboto-Medium AddT42Char 
FKJHMP+Roboto-Medium /CharStrings get begin
/H 44 def
/c 71 def
end
FKJHMP+Roboto-Medium /Encoding get
dup 72 /H put
dup 99 /c put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMP+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /D /E 2{/.notdef}rp /H 2{/.notdef}rp /K 7{/.notdef}rp /S 13{/.notdef}rp /a /.notdef /c /.notdef /e /f /g /h /i /j /.notdef /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMP+Roboto-Medium nfFKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4175 113.821 mo(Chris Hitchcott)sh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMO+Roboto-Light gcheck setglobal} if
1 2498 23 <00010062ffec03f405c4002b0081b21c2c2d11123900b0004558b0102f1b
b1101e3e59b0004558b01c2f1bb11c0e3e59b2011c10111239b0012fb25f
01015db22f01015db44f015f010271b01010b10801b00a2b5821d81bf459
b20b101c111239b00110b12a01b00a2b5821d81bf459b2162a01111239b2
211c10111239b01c10b12401b00a2b5821d81bf459303101333236363534
262322061523343636333216151406071616151406232226263533141633
3236353426232301937c679a519e948cb37872ca7bc6e48574888cf4cc82
d97778c2989badbbb6780319497f538c9ea58771bb66d8bc69b12c26b980
bbe468bb7c8baf9f97929a00>FKJHMO+Roboto-Light AddT42Char 
1 6820 52 <000200b80000049205b0000a0013004fb20a1415111239b00a10b00cd000
b0004558b0032f1bb1031e3e59b0004558b0012f1bb1010e3e59b20b0301
111239b00b2fb10001b00a2b5821d81bf459b00310b11201b00a2b5821d8
1bf4593031011123112132041514062325213236353426272101337b01f0
e30107fdf0fe8e0175b3bcbbacfe830251fdaf05b0e8cbcddf68aa9897b3
0200>FKJHMO+Roboto-Light AddT42Char 
1 7790 58 <0001001f000004d105b00008003100b0004558b0032f1bb1031e3e59b000
4558b0072f1bb1071e3e59b0004558b0052f1bb1050e3e59b20103051112
393031251737013301230133026f080901ca87fde276fde286b41f1f04fc
fa5005b0>FKJHMO+Roboto-Light AddT42Char 
1 11794 86 <0001009c00000293044e000e0047b20b0f1011123900b0004558b00c2f1b
b10c1a3e59b0004558b0082f1bb1081a3e59b0004558b0062f1bb1060e3e
59b00c10b10207b00a2b5821d81bf459b20a0c0611123930310126232206
071123113317363332170290262b709b217775025fd2321d03d4077d77fd
19043aacc00d>FKJHMO+Roboto-Light AddT42Char 
1 13240 96 <000100b2fef2011705b00003001300b0002fb0004558b0022f1bb1021e3e
5930310123113301176565fef206be00>FKJHMO+Roboto-Light AddT42Char 
FKJHMO+Roboto-Light /CharStrings get begin
/three 23 def
/P 52 def
/V 58 def
/r 86 def
/bar 96 def
end
FKJHMO+Roboto-Light /Encoding get
dup 51 /three put
dup 80 /P put
dup 86 /V put
dup 114 /r put
dup 124 /bar put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMO+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /.notdef /I 2{/.notdef}rp /L /.notdef /N /O /P /.notdef /R /.notdef /T /U /V /.notdef /X 8{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /j /k /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u 2{/.notdef}rp /x 3{/.notdef}rp /bar 131{/.notdef}rp]FKJHMO+Roboto-Light nfFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4175 124.821 mo(CORE DEVELOPER)[7.11523 7.33398 6.99805 6.47119 3.86523 7.1582 6.4707 6.85352 6.4707 5.88135 7.33398 6.8457 6.4707 0 ]xsh41.3018 149.907 mo(chris@digix.global   |   +65 8823 5363)[4.28125 4.55029 2.85156 1.95313 4.21045 7.46484 4.60547 1.95264 4.59766 1.95313 4.05029 2.07031 4.59766 1.95313 4.64014 4.59375 4.44531 1.95264 2.10547 2.10547 2.10498 1.92578 2.10547 2.10498 2.10547 4.67578 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 0 ]xsh546.337 180.058 mo
288.514 180.058 li
288.514 7.14008 li
546.337 7.14008 li
546.337 180.058 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.65 46.165 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.65 57.165 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.428 38.1793 mo
365.628 38.1793 li
365.628 59.485 li
319.428 59.485 li
cp
clp
319.428 44.6556 mo
334.867 44.6556 li
334.867 38.1793 li
319.428 38.1793 li
cp
f
336.697 38.1792 mo
336.697 46.7017 li
319.428 46.7017 li
319.428 59.4849 li
341.631 59.4849 li
341.631 38.1792 li
cp
324.362 51.1869 mo
336.697 51.1869 li
336.697 54.9995 li
324.362 54.9995 li
cp
f
343.425 38.1792 mo
343.425 59.4849 li
365.628 59.4849 li
365.628 46.7017 li
352.172 46.7017 li
352.172 51.1869 li
360.694 51.1869 li
360.694 54.9997 li
348.359 54.9997 li
348.359 42.6649 li
365.628 42.6649 li
365.628 38.1792 li
cp
f
grestore
FKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.428 113.821 mo(Chris Hitchcott)shFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.428 124.821 mo(CORE DEVELOPER)[7.11523 7.33398 6.99805 6.47119 3.86523 7.1582 6.4707 6.85352 6.4707 5.88135 7.33398 6.8457 6.4707 0 ]xsh319.312 149.907 mo(chris@digix.global   |   +65 8823 5363)[4.28125 4.55029 2.85156 1.95313 4.21045 7.46484 4.60547 1.95264 4.59766 1.95313 4.05029 2.07031 4.59766 1.95313 4.64014 4.59375 4.44531 1.95264 2.10547 2.10547 2.10498 1.92578 2.10547 2.10498 2.10547 4.67578 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 0 ]xsh268.327 -11.9859 mo
10.504 -11.9859 li
10.504 -184.904 li
268.327 -184.904 li
268.327 -11.9859 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6396 -145.879 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6396 -134.879 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4176 -153.865 mo
87.6173 -153.865 li
87.6173 -132.559 li
41.4176 -132.559 li
cp
clp
41.4176 -147.388 mo
56.8561 -147.388 li
56.8561 -153.865 li
41.4176 -153.865 li
cp
.012 .144 .998 0 cmyk
f
58.6865 -153.865 mo
58.6865 -145.342 li
41.4177 -145.342 li
41.4177 -132.559 li
63.6204 -132.559 li
63.6204 -153.865 li
cp
46.3514 -140.857 mo
58.6865 -140.857 li
58.6865 -137.045 li
46.3514 -137.045 li
cp
.949 .859 .441 .484 cmyk
f
65.4145 -153.865 mo
65.4145 -132.559 li
87.6173 -132.559 li
87.6173 -145.342 li
74.1611 -145.342 li
74.1611 -140.857 li
82.6831 -140.857 li
82.6831 -137.044 li
70.3485 -137.044 li
70.3485 -149.379 li
87.6173 -149.379 li
87.6173 -153.865 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMP+Roboto-Medium gcheck setglobal} if
1 7570 56 <0001002d000004b005b00007002f00b0004558b0062f1bb106203e59b000
4558b0022f1bb102103e59b00610b10001b00a2b5821d81bf459b004d030
31012111231121352104b0fe3afbfe3e048304e4fb1c04e4cc00>FKJHMP+Roboto-Medium AddT42Char 
FKJHMP+Roboto-Medium /CharStrings get begin
/T 56 def
end
FKJHMP+Roboto-Medium /Encoding get
dup 84 /T put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMP+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /D /E 2{/.notdef}rp /H 2{/.notdef}rp /K 7{/.notdef}rp /S /T 12{/.notdef}rp /a /.notdef /c /.notdef /e /f /g /h /i /j /.notdef /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMP+Roboto-Medium nfFKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4175 -78.2227 mo(Teo Hye Chng)[6.76172 6.43945 6.83203 2.98828 8.52539 5.76563 6.43945 2.98828 7.83398 6.66211 6.67383 0 ]xsh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMO+Roboto-Light gcheck setglobal} if
1 5874 44 <000100b8000004ef05b0000b005200b0004558b0062f1bb1061e3e59b000
4558b00a2f1bb10a1e3e59b0004558b0002f1bb1000e3e59b0004558b004
2f1bb1040e3e59b2090600111239b0092fb22f09015db10201b00a2b5821
d81bf459303121231121112311331121113304ef7cfcc07b7b03407c02ba
fd4605b0fd72028e>FKJHMO+Roboto-Light AddT42Char 
1 6362 49 <000100b80000063305b0000e005900b0004558b0002f1bb1001e3e59b000
4558b0022f1bb1021e3e59b0004558b0042f1bb1040e3e59b0004558b008
2f1bb1080e3e59b0004558b00c2f1bb10c0e3e59b2010004111239b20700
04111239b20a000411123930310902331123111301230113112311015b02
19021ba47b0afde25ffde40a7b05b0fafb0505fa50027a028afafc04fffd
7ffd8205b000>FKJHMO+Roboto-Light AddT42Char 
FKJHMO+Roboto-Light /CharStrings get begin
/H 44 def
/M 49 def
end
FKJHMO+Roboto-Light /Encoding get
dup 72 /H put
dup 77 /M put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMO+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /H /I 2{/.notdef}rp /L /M /N /O /P /.notdef /R /.notdef /T /U /V /.notdef /X 8{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /j /k /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u 2{/.notdef}rp /x 3{/.notdef}rp /bar 131{/.notdef}rp]FKJHMO+Roboto-Light nfFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4175 -67.2227 mo(CHAIRMAN)[7.11523 7.65039 6.91602 4.04932 6.99805 8.91211 6.91602 0 ]xsh41.3018 -42.1367 mo(chngth@digix.global   |   +65 9817 1926)[4.28125 4.55029 4.55469 4.59766 2.72998 4.55078 7.46484 4.60498 1.95313 4.59766 1.95264 4.05078 2.07031 4.59766 1.95264 4.64063 4.59375 4.44482 1.95313 2.10547 2.10498 2.10547 1.92578 2.10498 2.10547 2.10547 4.67529 4.59375 4.59375 2.10498 4.59375 4.59375 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 0 ]xsh546.337 -11.9859 mo
288.514 -11.9859 li
288.514 -184.904 li
546.337 -184.904 li
546.337 -11.9859 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.65 -145.879 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.65 -134.879 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.428 -153.865 mo
365.628 -153.865 li
365.628 -132.559 li
319.428 -132.559 li
cp
clp
319.428 -147.389 mo
334.867 -147.389 li
334.867 -153.865 li
319.428 -153.865 li
cp
f
336.697 -153.865 mo
336.697 -145.342 li
319.428 -145.342 li
319.428 -132.559 li
341.631 -132.559 li
341.631 -153.865 li
cp
324.362 -140.857 mo
336.697 -140.857 li
336.697 -137.045 li
324.362 -137.045 li
cp
f
343.425 -153.865 mo
343.425 -132.559 li
365.628 -132.559 li
365.628 -145.342 li
352.172 -145.342 li
352.172 -140.857 li
360.694 -140.857 li
360.694 -137.044 li
348.359 -137.044 li
348.359 -149.379 li
365.628 -149.379 li
365.628 -153.865 li
cp
f
grestore
FKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.428 -78.2227 mo(Teo Hye Chng)[6.76172 6.43945 6.83203 2.98828 8.52539 5.76563 6.43945 2.98828 7.83398 6.66211 6.67383 0 ]xshFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.428 -67.2227 mo(CHAIRMAN)[7.11523 7.65039 6.91602 4.04932 6.99805 8.91211 6.91602 0 ]xsh319.312 -42.1367 mo(chngth@digix.global   |   +65 9817 1926)[4.28125 4.55029 4.55469 4.59766 2.72998 4.55078 7.46484 4.60498 1.95313 4.59766 1.95264 4.05078 2.07031 4.59766 1.95264 4.64063 4.59375 4.44482 1.95313 2.10547 2.10498 2.10547 1.92578 2.10498 2.10547 2.10547 4.67529 4.59375 4.59375 2.10498 4.59375 4.59375 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 0 ]xsh268.327 372.976 mo
10.504 372.976 li
10.504 200.058 li
268.327 200.058 li
268.327 372.976 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6396 239.083 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6396 250.083 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4176 231.097 mo
87.6173 231.097 li
87.6173 252.403 li
41.4176 252.403 li
cp
clp
41.4176 237.574 mo
56.8561 237.574 li
56.8561 231.097 li
41.4176 231.097 li
cp
.012 .144 .998 0 cmyk
f
58.6865 231.097 mo
58.6865 239.62 li
41.4177 239.62 li
41.4177 252.403 li
63.6204 252.403 li
63.6204 231.097 li
cp
46.3514 244.105 mo
58.6865 244.105 li
58.6865 247.917 li
46.3514 247.917 li
cp
.949 .859 .441 .484 cmyk
f
65.4145 231.097 mo
65.4145 252.403 li
87.6173 252.403 li
87.6173 239.62 li
74.1611 239.62 li
74.1611 244.105 li
82.6831 244.105 li
82.6831 247.918 li
70.3485 247.918 li
70.3485 235.583 li
87.6173 235.583 li
87.6173 231.097 li
cp
f
grestore
FKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4175 306.739 mo(Teo Chen Shien)[6.76172 6.43945 6.83203 2.98828 7.83398 6.66211 6.43945 6.67383 2.98828 7.24219 6.66211 3.06445 6.43945 0 ]xsh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMO+Roboto-Light gcheck setglobal} if
1 7356 55 <00010058ffec046c05c400270066b209282911123900b0004558b0092f1b
b1091e3e59b0004558b01d2f1bb11d0e3e59b2021d09111239b20e091d11
1239b00910b11101b00a2b5821d81bf459b00210b11701b00a2b5821d81b
f459b2221d09111239b01d10b12501b00a2b5821d81bf459303101342624
272635342433321616152334262322061514160416161514042322242635
33141633323603f0aafe3c68940113d691e57e7cccaca7c6b20188ca66fe
ede19afeff857be6bfaace0166798d7f4b6aaca7d170c87b95b595786f8c
6b73a06dacd06ec6809ab296>FKJHMO+Roboto-Light AddT42Char 
1 8202 61 <00010018000004ae05b00008003100b0004558b0012f1bb1011e3e59b000
4558b0072f1bb1071e3e59b0004558b0042f1bb1040e3e59b20001041112
393031010133011123110133026301bd8efdf27bfdf3920296031afc74fd
dc0224038c00>FKJHMO+Roboto-Light AddT42Char 
FKJHMO+Roboto-Light /CharStrings get begin
/S 55 def
/Y 61 def
end
FKJHMO+Roboto-Light /Encoding get
dup 83 /S put
dup 89 /Y put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMO+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /H /I 2{/.notdef}rp /L /M /N /O /P /.notdef /R /S /T /U /V /.notdef /X /Y 7{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /j /k /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u 2{/.notdef}rp /x 3{/.notdef}rp /bar 131{/.notdef}rp]FKJHMO+Roboto-Light nfFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4175 317.739 mo(COMPANY COUNSEL)[7.11523 7.33398 8.8418 6.30713 6.91602 7.49023 6.70898 3.86523 7.11523 7.33447 7.17773 7.59961 6.6582 6.4707 0 ]xsh41.3018 342.825 mo(csteo@digix.global   |   +65 9231 2718)[4.28125 4.21045 2.73047 4.29297 4.64014 7.46484 4.60547 1.95264 4.59766 1.95313 4.05029 2.07031 4.59766 1.95313 4.64014 4.59375 4.44531 1.95264 2.10547 2.10547 2.10498 1.92578 2.10547 2.10498 2.10547 4.67578 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 0 ]xsh546.337 372.976 mo
288.514 372.976 li
288.514 200.058 li
546.337 200.058 li
546.337 372.976 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.65 239.083 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.65 250.083 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.428 231.097 mo
365.628 231.097 li
365.628 252.403 li
319.428 252.403 li
cp
clp
319.428 237.574 mo
334.867 237.574 li
334.867 231.097 li
319.428 231.097 li
cp
f
336.697 231.097 mo
336.697 239.62 li
319.428 239.62 li
319.428 252.403 li
341.631 252.403 li
341.631 231.097 li
cp
324.362 244.105 mo
336.697 244.105 li
336.697 247.917 li
324.362 247.917 li
cp
f
343.425 231.097 mo
343.425 252.403 li
365.628 252.403 li
365.628 239.62 li
352.172 239.62 li
352.172 244.105 li
360.694 244.105 li
360.694 247.918 li
348.359 247.918 li
348.359 235.583 li
365.628 235.583 li
365.628 231.097 li
cp
f
grestore
FKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.428 306.739 mo(Teo Chen Shien)[6.76172 6.43945 6.83203 2.98828 7.83398 6.66211 6.43945 6.67383 2.98828 7.24219 6.66211 3.06445 6.43945 0 ]xshFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.428 317.739 mo(COMPANY COUNSEL)[7.11523 7.33398 8.8418 6.30713 6.91602 7.49023 6.70898 3.86523 7.11523 7.33447 7.17773 7.59961 6.6582 6.4707 0 ]xsh319.312 342.825 mo(csteo@digix.global   |   +65 9231 2718)[4.28125 4.21045 2.73047 4.29297 4.64014 7.46484 4.60547 1.95264 4.59766 1.95313 4.05029 2.07031 4.59766 1.95313 4.64014 4.59375 4.44531 1.95264 2.10547 2.10547 2.10498 1.92578 2.10547 2.10498 2.10547 4.67578 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 0 ]xsh268.327 565.894 mo
10.504 565.894 li
10.504 392.976 li
268.327 392.976 li
268.327 565.894 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6396 432.001 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6396 443.001 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4176 424.015 mo
87.6173 424.015 li
87.6173 445.321 li
41.4176 445.321 li
cp
clp
41.4176 430.492 mo
56.8561 430.492 li
56.8561 424.015 li
41.4176 424.015 li
cp
.012 .144 .998 0 cmyk
f
58.6865 424.015 mo
58.6865 432.538 li
41.4177 432.538 li
41.4177 445.321 li
63.6204 445.321 li
63.6204 424.015 li
cp
46.3514 437.023 mo
58.6865 437.023 li
58.6865 440.835 li
46.3514 440.835 li
cp
.949 .859 .441 .484 cmyk
f
65.4145 424.015 mo
65.4145 445.321 li
87.6173 445.321 li
87.6173 432.538 li
74.1611 432.538 li
74.1611 437.023 li
82.6831 437.023 li
82.6831 440.836 li
70.3485 440.836 li
70.3485 428.501 li
87.6173 428.501 li
87.6173 424.015 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMP+Roboto-Medium gcheck setglobal} if
1 6520 50 <000100940000051705b00009004cb2010a0b11123900b0004558b0052f1b
b105203e59b0004558b0082f1bb108203e59b0004558b0002f1bb100103e
59b0004558b0032f1bb103103e59b2020500111239b20705001112393031
212301112311330111330517fdfd77fdfd028bfb0409fbf705b0fbf3040d
>FKJHMP+Roboto-Medium AddT42Char 
1 7782 58 <000100120000051d05b000060038b200070811123900b0004558b0012f1b
b101203e59b0004558b0052f1bb105203e59b0004558b0032f1bb103103e
59b2000103111239303101012101230121029501720116fdf4f5fdf60115
013d0473fa5005b0>FKJHMP+Roboto-Medium AddT42Char 
FKJHMP+Roboto-Medium /CharStrings get begin
/N 50 def
/V 58 def
end
FKJHMP+Roboto-Medium /Encoding get
dup 78 /N put
dup 86 /V put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMP+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /D /E 2{/.notdef}rp /H 2{/.notdef}rp /K 2{/.notdef}rp /N 4{/.notdef}rp /S /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e /f /g /h /i /j /.notdef /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMP+Roboto-Medium nfFKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4175 499.657 mo(Vu Nguyen)[7.59961 6.66797 2.98828 8.51953 6.80273 6.66797 5.76563 6.43945 0 ]xsh%ADOBeginSubsetFont: Roboto-Light AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMO+Roboto-Light gcheck setglobal} if
1 12452 90 <00010026000003b1043a00060038b200070811123900b0004558b0012f1b
b1011a3e59b0004558b0052f1bb1051a3e59b0004558b0032f1bb1030e3e
59b200050311123930312501330123013301ed01497bfe6c61fe6a7ba503
95fbc6043a00>FKJHMO+Roboto-Light AddT42Char 
FKJHMO+Roboto-Light /CharStrings get begin
/v 90 def
end
FKJHMO+Roboto-Light /Encoding get
dup 118 /v put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMO+Roboto-Light*1 [32{/.notdef}rp /space 5{/.notdef}rp /ampersand /.notdef /parenleft /parenright /.notdef /plus /.notdef /hyphen /period /.notdef /zero /one /two /three /four /five /six /seven /eight /nine 6{/.notdef}rp /at /A /B /C /D /E /F /G /H /I 2{/.notdef}rp /L /M /N /O /P /.notdef /R /S /T /U /V /.notdef /X /Y 7{/.notdef}rp /a /b /c /d /e /.notdef /g /h /i /j /k /l /.notdef /n /o 2{/.notdef}rp /r /s /t /u /v /.notdef /x 3{/.notdef}rp /bar 131{/.notdef}rp]FKJHMO+Roboto-Light nfFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4175 510.657 mo(DEVELOPER)[7.1582 6.4707 6.85352 6.47119 5.88086 7.33398 6.8457 6.4707 0 ]xsh41.3018 535.743 mo(vu@digix.global   |   +65 8272 7267)[4.00781 4.5542 7.46484 4.60547 1.95264 4.59766 1.95313 4.05029 2.07031 4.59766 1.95264 4.64063 4.59375 4.44531 1.95264 2.10547 2.10547 2.10498 1.92578 2.10547 2.10498 2.10547 4.67578 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 0 ]xsh546.337 565.894 mo
288.514 565.894 li
288.514 392.976 li
546.337 392.976 li
546.337 565.894 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.65 432.001 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.65 443.001 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.428 424.015 mo
365.628 424.015 li
365.628 445.321 li
319.428 445.321 li
cp
clp
319.428 430.491 mo
334.867 430.491 li
334.867 424.015 li
319.428 424.015 li
cp
f
336.697 424.015 mo
336.697 432.538 li
319.428 432.538 li
319.428 445.321 li
341.631 445.321 li
341.631 424.015 li
cp
324.362 437.023 mo
336.697 437.023 li
336.697 440.835 li
324.362 440.835 li
cp
f
343.425 424.015 mo
343.425 445.321 li
365.628 445.321 li
365.628 432.538 li
352.172 432.538 li
352.172 437.023 li
360.694 437.023 li
360.694 440.836 li
348.359 440.836 li
348.359 428.501 li
365.628 428.501 li
365.628 424.015 li
cp
f
grestore
FKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.428 499.657 mo(Vu Nguyen)[7.59961 6.66797 2.98828 8.51953 6.80273 6.66797 5.76563 6.43945 0 ]xshFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.428 510.657 mo(DEVELOPER)[7.1582 6.4707 6.85352 6.47119 5.88086 7.33398 6.8457 6.4707 0 ]xsh319.312 535.743 mo(vu@digix.global   |   +65 8272 7267)[4.00781 4.5542 7.46484 4.60547 1.95264 4.59766 1.95313 4.05029 2.07031 4.59766 1.95264 4.64063 4.59375 4.44531 1.95264 2.10547 2.10547 2.10498 1.92578 2.10547 2.10498 2.10547 4.67578 4.59326 4.59375 2.10547 4.59326 4.59375 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 0 ]xsh268.327 758.812 mo
10.504 758.812 li
10.504 585.894 li
268.327 585.894 li
268.327 758.812 li
cp
f
.976013 .869596 .440589 .485817 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf97.6396 624.919 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh97.6396 635.919 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
41.4176 616.933 mo
87.6173 616.933 li
87.6173 638.239 li
41.4176 638.239 li
cp
clp
41.4176 623.409 mo
56.8561 623.409 li
56.8561 616.933 li
41.4176 616.933 li
cp
.012 .144 .998 0 cmyk
f
58.6865 616.933 mo
58.6865 625.455 li
41.4177 625.455 li
41.4177 638.239 li
63.6204 638.239 li
63.6204 616.933 li
cp
46.3514 629.941 mo
58.6865 629.941 li
58.6865 633.753 li
46.3514 633.753 li
cp
.949 .859 .441 .484 cmyk
f
65.4145 616.933 mo
65.4145 638.239 li
87.6173 638.239 li
87.6173 625.455 li
74.1611 625.455 li
74.1611 629.941 li
82.6831 629.941 li
82.6831 633.753 li
70.3485 633.753 li
70.3485 621.418 li
87.6173 621.418 li
87.6173 616.933 li
cp
f
grestore
%ADOBeginSubsetFont: Roboto-Medium AddGlyphs
ct_T42Dict begin
systemdict /gcheck known {currentglobal FKJHMP+Roboto-Medium gcheck setglobal} if
1 10630 79 <0001007d000004360600000c005300b0004558b0042f1bb104223e59b000
4558b0082f1bb1081c3e59b0004558b0022f1bb102103e59b0004558b00b
2f1bb10b103e59b2000802111239b46a007a00025db2060802111239b465
067506025d30310107112311331137012101012101dc6cf3f34c012b0124
fe6e01bdfee701d06ffe9f0600fc8a5f0151fe3dfd89>FKJHMP+Roboto-Medium AddT42Char 
FKJHMP+Roboto-Medium /CharStrings get begin
/k 79 def
end
FKJHMP+Roboto-Medium /Encoding get
dup 107 /k put
pop
systemdict /gcheck known {setglobal} if
end
%ADOEndSubsetFont
/FKJHMP+Roboto-Medium*1 [32{/.notdef}rp /space 32{/.notdef}rp /A /.notdef /C /D /E 2{/.notdef}rp /H 2{/.notdef}rp /K 2{/.notdef}rp /N 4{/.notdef}rp /S /T /.notdef /V 10{/.notdef}rp /a /.notdef /c /.notdef /e /f /g /h /i /j /k /l /m /n /o 2{/.notdef}rp /r /s /t /u 3{/.notdef}rp /y 134{/.notdef}rp]FKJHMP+Roboto-Medium nfFKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf41.4175 692.575 mo(Takashi Sano)[6.29883 6.49219 6.26367 6.49219 6.19336 6.66211 3.06445 2.98828 7.24219 6.49219 6.67383 0 ]xshFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf41.4175 703.575 mo(BOARD DIRECTOR)[6.82227 7.25195 6.91602 6.99854 7.1582 3.86523 7.1582 4.04883 6.99805 6.47119 7.00195 6.58789 7.33398 0 ]xsh41.3018 728.661 mo(takashi@digix.global   |   +65 9172 1703)[2.73047 4.44482 4.07813 4.44531 4.21045 4.55078 1.95313 7.46436 4.60547 1.95313 4.59717 1.95313 4.05078 2.07031 4.59717 1.95313 4.64063 4.59326 4.44531 1.95313 2.10498 2.10547 2.10547 1.92529 2.10547 2.10547 2.10498 4.67578 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 4.59375 2.10498 4.59375 4.59375 4.59375 0 ]xsh546.337 758.812 mo
288.514 758.812 li
288.514 585.894 li
546.337 585.894 li
546.337 758.812 li
cp
0 0 0 1 cmyk
f
0 0 0 0 cmyk
FKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf375.65 624.919 mo(DIGIX)[7.1582 4.04883 7.38867 4.11572 0 ]xsh375.65 635.919 mo(GLOBAL)[7.38867 5.88086 7.33398 6.82275 6.91602 0 ]xshgsave
319.428 616.933 mo
365.628 616.933 li
365.628 638.239 li
319.428 638.239 li
cp
clp
319.428 623.409 mo
334.867 623.409 li
334.867 616.933 li
319.428 616.933 li
cp
f
336.697 616.933 mo
336.697 625.455 li
319.428 625.455 li
319.428 638.239 li
341.631 638.239 li
341.631 616.933 li
cp
324.362 629.941 mo
336.697 629.941 li
336.697 633.753 li
324.362 633.753 li
cp
f
343.425 616.933 mo
343.425 638.239 li
365.628 638.239 li
365.628 625.455 li
352.172 625.455 li
352.172 629.941 li
360.694 629.941 li
360.694 633.753 li
348.359 633.753 li
348.359 621.418 li
365.628 621.418 li
365.628 616.933 li
cp
f
grestore
FKJHMP+Roboto-Medium*1 [12 0 0 -12 0 0 ]msf319.428 692.575 mo(Takashi Sano)[6.29883 6.49219 6.26367 6.49219 6.19336 6.66211 3.06445 2.98828 7.24219 6.49219 6.67383 0 ]xshFKJHMO+Roboto-Light*1 [8 0 0 -8 0 0 ]msf319.428 703.575 mo(BOARD DIRECTOR)[6.82227 7.25195 6.91602 6.99854 7.1582 3.86523 7.1582 4.04883 6.99805 6.47119 7.00195 6.58789 7.33398 0 ]xsh319.312 728.661 mo(takashi@digix.global   |   +65 9172 1703)[2.73047 4.44482 4.07813 4.44531 4.21045 4.55078 1.95313 7.46436 4.60547 1.95313 4.59717 1.95313 4.05078 2.07031 4.59717 1.95313 4.64063 4.59326 4.44531 1.95313 2.10498 2.10547 2.10547 1.92529 2.10547 2.10547 2.10498 4.67578 4.59375 4.59326 2.10547 4.59375 4.59326 4.59375 4.59375 2.10498 4.59375 4.59375 4.59375 0 ]xsh%ADOBeginClientInjection: EndPageContent "AI11"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11"
grestore
grestore
pgrs
%%PageTrailer
[
[/CSA [/1 ]]
] del_res
/FKJHMP+Roboto-Medium*1 uf/FKJHMP+Roboto-Medium uf/Roboto-Medium uf/FKJHMO+Roboto-Light*1 uf/FKJHMO+Roboto-Light uf/Roboto-Light ufAdobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get execAdobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
showpage
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get execAdobe_AGM_Core/dt get exec
%%Pages: 2
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: *CustomPageSize True
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EOF
